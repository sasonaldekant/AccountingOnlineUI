{"version":3,"file":"dyn-ui.es.js","sources":["../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.development.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js","../src/utils/classNames.ts","../src/utils/accessibility.ts","../src/components/DynBadge/DynBadge.types.ts","../src/utils/dynFormatters.ts","../src/providers/IconDictionaryProvider.tsx","../src/hooks/useIconDictionary.ts","../src/components/DynIcon/icons.ts","../src/components/DynIcon/DynIcon.types.ts","../src/components/DynIcon/DynIcon.tsx","../src/components/DynButton/DynButton.types.ts","../src/components/DynButton/DynButton.tsx","../src/components/DynAvatar/DynAvatar.types.ts","../src/components/DynAvatar/DynAvatar.tsx","../src/components/DynBadge/DynBadge.tsx","../src/components/DynBox/DynBox.tsx","../src/components/DynBreadcrumb/DynBreadcrumb.tsx","../src/components/DynChart/DynChart.types.ts","../src/components/DynChart/DynChart.utils.ts","../src/components/DynChart/DynChart.tsx","../src/components/DynFieldContainer/DynFieldContainer.types.ts","../src/components/DynFieldContainer/DynFieldContainer.tsx","../src/hooks/useDynFieldValidation.ts","../src/components/DynCheckbox/DynCheckbox.types.ts","../src/components/DynCheckbox/DynCheckbox.tsx","../src/components/DynContainer/DynContainer.types.ts","../src/components/DynContainer/DynContainer.tsx","../src/hooks/useDynDateParser.ts","../src/components/DynDatePicker/DynDatePicker.tsx","../src/components/DynDivider/DynDivider.types.ts","../src/components/DynDivider/DynDivider.tsx","../src/components/DynGauge/DynGauge.types.ts","../src/components/DynGauge/DynGauge.tsx","../src/components/DynGrid/DynGrid.types.ts","../src/components/DynGrid/DynGrid.tsx","../src/hooks/useDynMask.ts","../src/components/DynInput/DynInput.tsx","../src/components/DynTextArea/DynTextArea.types.ts","../src/components/DynTextArea/DynTextArea.tsx","../src/components/DynLabel/DynLabel.tsx","../src/components/DynListView/DynListView.tsx","../src/components/DynPage/DynPage.tsx","../../../node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js","../src/components/DynSelect/DynSelect.tsx","../src/components/DynStepper/DynStepper.tsx","../src/components/DynTabs/DynTabs.tsx","../src/components/DynToolbar/DynToolbar.types.ts","../src/components/DynToolbar/DynToolbar.tsx","../src/theme/ThemeProvider.tsx","../src/components/ThemeSwitcher/ThemeSwitcher.tsx","../src/hooks/useTheme.ts"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\r\n * Enhanced classNames utility - TypeScript compatible version\r\n * Optimized for DYN UI components with CSS Module support\r\n */\r\n\r\ntype ClassNameValue = string | number | boolean | null | undefined;\r\n\r\ntype ClassNameArg = \r\n  | ClassNameValue\r\n  | Record<string, ClassNameValue>\r\n  | ClassNameArg[];\r\n\r\n/**\r\n * Concatenates class names conditionally\r\n * Built-in implementation compatible with all environments\r\n * @param args - Array of class name arguments\r\n * @returns Concatenated class name string\r\n * \r\n * @example\r\n * ```typescript\r\n * // Basic usage\r\n * classNames('btn', 'btn-primary'); // 'btn btn-primary'\r\n * \r\n * // Conditional classes\r\n * classNames('btn', {\r\n *   'btn-primary': isPrimary,\r\n *   'btn-disabled': isDisabled\r\n * }); // 'btn btn-primary' (if isPrimary is true)\r\n * \r\n * // CSS Modules support\r\n * classNames(styles.button, styles.primary, {\r\n *   [styles.loading]: isLoading\r\n * });\r\n * ```\r\n */\r\nexport function classNames(...args: ClassNameArg[]): string {\r\n  const classes: string[] = [];\r\n\r\n  for (const arg of args) {\r\n    if (!arg) continue;\r\n\r\n    if (typeof arg === 'string' || typeof arg === 'number') {\r\n      classes.push(String(arg));\r\n    } else if (Array.isArray(arg)) {\r\n      const nested = classNames(...arg);\r\n      if (nested) classes.push(nested);\r\n    } else if (typeof arg === 'object') {\r\n      for (const [key, value] of Object.entries(arg)) {\r\n        if (value) classes.push(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  return classes.join(' ');\r\n}\r\n\r\n/**\r\n * Shorter alias for classNames\r\n */\r\nexport const cn = classNames;\r\n\r\n/**\r\n * Creates a CSS module class name generator\r\n * @param styles - CSS module styles object\r\n * @returns Function that maps class names to CSS module classes\r\n * \r\n * @example\r\n * ```typescript\r\n * import { styles } from './Button.module.css';\r\n * const cx = createClassNameGenerator(styles);\r\n * \r\n * const buttonClasses = cx('button', {\r\n *   primary: kind === 'primary',\r\n *   loading: isLoading\r\n * });\r\n * ```\r\n */\r\nexport function createClassNameGenerator(styles: Record<string, string>) {\r\n  return (...args: ClassNameArg[]) => {\r\n    const className = classNames(...args);\r\n    return className\r\n      .split(' ')\r\n      .map(cls => styles[cls] || cls)\r\n      .join(' ');\r\n  };\r\n}\r\n\r\n/**\r\n * CSS Module helper - combines CSS Module styles with additional classes\r\n * Provides type safety for CSS Module objects\r\n * \r\n * @param styles - CSS Module styles object\r\n * @param baseClass - Base class name from styles\r\n * @param additionalClasses - Additional classes to combine\r\n * @returns Combined class names\r\n * \r\n * @example\r\n * ```typescript\r\n * import { styles } from './Button.module.css';\r\n * \r\n * const buttonClasses = combineStyles(styles, 'button', {\r\n *   [styles.primary]: kind === 'primary',\r\n *   [styles.loading]: isLoading,\r\n *   'external-class': hasExternalClass\r\n * });\r\n * ```\r\n */\r\nexport function combineStyles(\r\n  styles: Record<string, string>,\r\n  baseClass: keyof typeof styles,\r\n  additionalClasses?: ClassNameArg\r\n): string {\r\n  return classNames(styles[baseClass], additionalClasses);\r\n}\r\n\r\n/**\r\n * Combines base classes with conditional classes\r\n * @param baseClasses - Always applied classes\r\n * @param conditionalClasses - Conditionally applied classes\r\n * @returns Combined class name string\r\n */\r\nexport function combineClasses(\r\n  baseClasses: string,\r\n  conditionalClasses?: ClassNameArg\r\n): string {\r\n  return classNames(baseClasses, conditionalClasses);\r\n}\r\n\r\n/**\r\n * Conditional class helper - applies class only if condition is true\r\n * \r\n * @param className - Class name to apply\r\n * @param condition - Condition to evaluate\r\n * @returns Class name if condition is true, empty string otherwise\r\n * \r\n * @example\r\n * ```typescript\r\n * const classes = classNames(\r\n *   'btn',\r\n *   conditionalClass('btn-loading', isLoading),\r\n *   conditionalClass('btn-disabled', isDisabled)\r\n * );\r\n * ```\r\n */\r\nexport function conditionalClass(className: string, condition: boolean): string {\r\n  return condition ? className : '';\r\n}\r\n\r\n/**\r\n * Variant class helper - applies variant class with prefix\r\n * Useful for consistent variant naming in design systems\r\n * \r\n * @param prefix - Prefix for the variant class\r\n * @param variant - Variant name\r\n * @param condition - Optional condition (defaults to true)\r\n * @returns Prefixed variant class name\r\n * \r\n * @example\r\n * ```typescript\r\n * const classes = classNames(\r\n *   'btn',\r\n *   variantClass('btn', 'primary'), // 'btn-primary'\r\n *   variantClass('btn', 'large', size === 'large') // 'btn-large' if condition is true\r\n * );\r\n * ```\r\n */\r\nexport function variantClass(\r\n  prefix: string,\r\n  variant: string,\r\n  condition: boolean = true\r\n): string {\r\n  return condition ? `${prefix}-${variant}` : '';\r\n}\r\n\r\n/**\r\n * Size class helper - converts size tokens to class names\r\n * Supports both full names and abbreviations for optimized bundle size\r\n * \r\n * @param prefix - Prefix for the size class\r\n * @param size - Size token ('small', 'medium', 'large' or 's', 'm', 'l')\r\n * @param useAbbreviation - Whether to use abbreviated size names\r\n * @returns Size class name\r\n * \r\n * @example\r\n * ```typescript\r\n * sizeClass('btn', 'medium'); // 'btn-medium'\r\n * sizeClass('btn', 'medium', true); // 'btn-m'\r\n * sizeClass('btn', 'large'); // 'btn-large'\r\n * sizeClass('btn', 'large', true); // 'btn-l'\r\n * ```\r\n */\r\nexport function sizeClass(\r\n  prefix: string,\r\n  size: 'small' | 'medium' | 'large' | 's' | 'm' | 'l',\r\n  useAbbreviation: boolean = false\r\n): string {\r\n  const sizeMap = {\r\n    small: useAbbreviation ? 's' : 'small',\r\n    medium: useAbbreviation ? 'm' : 'medium',\r\n    large: useAbbreviation ? 'l' : 'large',\r\n    s: 's',\r\n    m: 'm',\r\n    l: 'l'\r\n  };\r\n  \r\n  const mappedSize = sizeMap[size];\r\n  return `${prefix}-${mappedSize}`;\r\n}","// Global counters for different component types to ensure unique IDs\r\nconst counters = new Map<string, number>();\r\n\r\n/**\r\n * Generates a unique ID for a component with the given prefix.\r\n * Uses separate counters for different prefixes to ensure uniqueness.\r\n * \r\n * @param prefix - The prefix to use for the ID (e.g., 'button', 'input')\r\n * @returns A unique ID string\r\n */\r\nexport const generateId = (prefix: string = 'dyn-id'): string => {\r\n  const currentCount = counters.get(prefix) || 0;\r\n  const nextCount = currentCount + 1;\r\n  counters.set(prefix, nextCount);\r\n  return `${prefix}-${nextCount}`;\r\n};\r\n\r\n/**\r\n * Resets all ID counters. Primarily used for testing purposes.\r\n * \r\n * @internal\r\n */\r\nexport const resetIdCounters = (): void => {\r\n  counters.clear();\r\n};\r\n","import type {\r\n  HTMLAttributes,\r\n  MouseEvent as ReactMouseEvent,\r\n  ReactNode\r\n} from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\nexport type ComponentSize = 'small' | 'medium' | 'large';\r\n\r\nexport const DYN_BADGE_COLORS = [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'warning',\r\n  'danger',\r\n  'info',\r\n  'neutral'\r\n] as const;\r\n\r\nexport type DynBadgeSemanticColor = (typeof DYN_BADGE_COLORS)[number];\r\nexport type DynBadgeVariant = 'solid' | 'soft' | 'outline' | 'dot';\r\nexport type DynBadgeColor = DynBadgeSemanticColor | (string & {});\r\nexport type DynBadgePosition = 'topRight' | 'topLeft' | 'bottomRight' | 'bottomLeft';\r\n\r\n\r\n\r\n/**\r\n * Props interface for DynBadge component\r\n * Clean TypeScript implementation following DynAvatar gold standard\r\n */\r\nexport interface DynBadgeProps\r\n  extends BaseComponentProps,\r\n    AccessibilityProps,\r\n    Omit<HTMLAttributes<HTMLSpanElement>, keyof BaseComponentProps | keyof AccessibilityProps | 'color' | 'children'> {\r\n  /** Badge content */\r\n  children?: ReactNode;\r\n\r\n  /** Badge variant style */\r\n  variant?: DynBadgeVariant;\r\n\r\n  /** Semantic color */\r\n  color?: DynBadgeColor;\r\n\r\n  /** Size variant */\r\n  size?: ComponentSize;\r\n\r\n  /** Position when used as overlay */\r\n  position?: DynBadgePosition;\r\n\r\n  /** Click handler (makes badge interactive) */\r\n  onClick?: (event: ReactMouseEvent<HTMLSpanElement>) => void;\r\n\r\n  /** Icon before text */\r\n  startIcon?: ReactNode;\r\n\r\n  /** Icon after text */\r\n  endIcon?: ReactNode;\r\n\r\n  /** Max count before showing + */\r\n  maxCount?: number;\r\n\r\n  /** Numeric value (for count badges) */\r\n  count?: number;\r\n\r\n  /**\r\n   * @deprecated Use `count` instead. Legacy alias maintained for backward compatibility.\r\n   */\r\n  value?: number;\r\n\r\n  /** Show badge even when count is 0 */\r\n  showZero?: boolean;\r\n\r\n  /** Animate appearance */\r\n  animated?: boolean;\r\n\r\n  /** Pulse animation for notifications */\r\n  pulse?: boolean;\r\n\r\n  /** Accessible description for count */\r\n  countDescription?: string;\r\n}\r\n\r\n/**\r\n * Ref type for DynBadge component\r\n */\r\nexport type DynBadgeRef = HTMLSpanElement;\r\n","/**\r\n * Utility functions for formatting data in DYN UI components\r\n */\r\nimport { DYN_BADGE_COLORS } from '../components/DynBadge/DynBadge.types';\r\nimport type { IconDictionary, ProcessedIcon } from '../types/icon.types';\r\n\r\n/**\r\n * DynCurrencyConfig type: defined locally because it's not exported from '../types/field.types'\r\n * Fields are optional here; callers use Required<DynCurrencyConfig> where needed.\r\n */\r\nexport interface DynCurrencyConfig {\r\n  precision?: number;\r\n  decimalSeparator?: string;\r\n  thousandSeparator?: string;\r\n  symbol?: string;\r\n  currencyCode?: string;\r\n}\r\n\r\n/**\r\n * Generates initials from a full name\r\n * @param name - Full name (e.g., \"John Doe\")\r\n * @returns Initials (e.g., \"JD\")\r\n */\r\nexport const generateInitials = (name: string): string => {\r\n  if (!name || typeof name !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  const trimmed = name.trim();\r\n  if (!trimmed) {\r\n    return '';\r\n  }\r\n\r\n  const words = trimmed.split(/\\s+/).filter(Boolean);\r\n  if (words.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const [firstWord, ...restWords] = words;\r\n  if (!firstWord) {\r\n    return '';\r\n  }\r\n\r\n  if (restWords.length === 0) {\r\n    return firstWord.charAt(0).toUpperCase();\r\n  }\r\n\r\n  const lastWord = restWords[restWords.length - 1];\r\n  if (!lastWord) {\r\n    return firstWord.charAt(0).toUpperCase();\r\n  }\r\n\r\n  return (firstWord.charAt(0) + lastWord.charAt(0)).toUpperCase();\r\n};\r\n\r\n/**\r\n * Formats badge value for display (9+ for values > 9)\r\n * @param value - Numeric value\r\n * @returns Formatted string\r\n */\r\nexport const formatBadgeValue = (value: number): string => {\r\n  if (value <= 0) return '0';\r\n  if (value > 99) return '99+';\r\n  return value.toString();\r\n};\r\n\r\n/**\r\n * Checks if a color is a theme color from DYN palette\r\n * @param color - Color string\r\n * @returns Boolean indicating if it's a theme color\r\n */\r\nexport const isThemeColor = (color: string): boolean => {\r\n  return (DYN_BADGE_COLORS as readonly string[]).includes(color);\r\n};\r\n\r\n/**\r\n * Processes icon string with dictionary lookup\r\n * @param iconStr - Icon string (may contain dictionary keys)\r\n * @param dictionary - Icon dictionary mapping\r\n * @returns Processed icon classes\r\n */\r\nexport const processIconString = (\r\n  iconStr: string,\r\n  dictionary: IconDictionary\r\n): ProcessedIcon => {\r\n  const iconTokens = iconStr\r\n    .split(/\\s+/)\r\n    .map((token) => token.trim())\r\n    .filter(Boolean);\r\n\r\n  let processedClass = '';\r\n  let baseClass: string | undefined;\r\n\r\n  iconTokens.forEach((token, index) => {\r\n    const dictValue = dictionary[token];\r\n\r\n    if (dictValue) {\r\n      processedClass = index === 0 ? dictValue : `${processedClass} ${dictValue}`;\r\n      if (!baseClass && dictValue.startsWith('dyn-icon')) {\r\n        baseClass = 'dyn-icon';\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (token.startsWith('dyn-icon-')) {\r\n      processedClass = index === 0 ? token : `${processedClass} ${token}`;\r\n      if (!baseClass) {\r\n        baseClass = 'dyn-icon';\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (token.startsWith('fa') || token.startsWith('fas') || token.startsWith('far')) {\r\n      baseClass = 'dyn-fonts-icon';\r\n      processedClass = index === 0 ? token : `${processedClass} ${token}`;\r\n      return;\r\n    }\r\n\r\n    processedClass = index === 0 ? token : `${processedClass} ${token}`;\r\n  });\r\n\r\n  return {\r\n    baseClass: baseClass ?? 'dyn-icon',\r\n    iconClass: processedClass.trim()\r\n  };\r\n};\r\n\r\nexport interface FormatCurrencyValueResult {\r\n  formattedValue: string;\r\n  symbol: string;\r\n  currencyCode?: string;\r\n  showCurrencyCode: boolean;\r\n}\r\n\r\nexport const formatCurrencyValue = (\r\n  value: string | number | null | undefined,\r\n  config: Required<DynCurrencyConfig> & { showCurrencyCode: boolean }\r\n): FormatCurrencyValueResult => {\r\n  const {\r\n    precision,\r\n    decimalSeparator,\r\n    thousandSeparator,\r\n    symbol,\r\n    currencyCode,\r\n    showCurrencyCode\r\n  } = config;\r\n\r\n  const precisionValue = Math.max(0, precision ?? 2);\r\n\r\n  if (value == null || value === '') {\r\n    return {\r\n      formattedValue: '',\r\n      symbol,\r\n      currencyCode,\r\n      showCurrencyCode\r\n    };\r\n  }\r\n\r\n  const numericValue =\r\n    typeof value === 'number' ? value : Number.parseFloat(String(value));\r\n\r\n  if (Number.isNaN(numericValue)) {\r\n    return {\r\n      formattedValue: '',\r\n      symbol,\r\n      currencyCode,\r\n      showCurrencyCode\r\n    };\r\n  }\r\n\r\n  const sign = numericValue < 0 ? '-' : '';\r\n  const absoluteValue = Math.abs(numericValue);\r\n  const fixedValue = absoluteValue.toFixed(precisionValue);\r\n  const [integerPartRaw, decimalPartRaw] = fixedValue.split('.');\r\n\r\n  const integerWithSeparator = integerPartRaw.replace(\r\n    /\\B(?=(\\d{3})+(?!\\d))/g,\r\n    thousandSeparator\r\n  );\r\n\r\n  const formattedWithoutSign =\r\n    precisionValue > 0 && decimalPartRaw\r\n      ? `${integerWithSeparator}${decimalSeparator}${decimalPartRaw}`\r\n      : integerWithSeparator;\r\n\r\n  return {\r\n    formattedValue: `${sign}${formattedWithoutSign}`,\r\n    symbol,\r\n    currencyCode,\r\n    showCurrencyCode\r\n  };\r\n};\r\n","import { createContext, useEffect, useMemo, useState } from 'react';\r\nimport type { PropsWithChildren } from 'react';\r\nimport type { IconDictionary } from '../types/icon.types';\r\n\r\nexport type IconDictionaryContextValue = IconDictionary;\r\n\r\nconst DEFAULT_ICON_DICTIONARY: IconDictionary = Object.freeze({\r\n  'user': 'dyn-icon-user',\r\n  'home': 'dyn-icon-home',\r\n  'settings': 'dyn-icon-settings',\r\n  'ok': 'dyn-icon-ok',\r\n  'close': 'dyn-icon-close',\r\n  'warning': 'dyn-icon-warning',\r\n  'minus': 'dyn-icon-minus',\r\n  'plus': 'dyn-icon-plus',\r\n  'search': 'dyn-icon-search',\r\n  'edit': 'dyn-icon-edit',\r\n  'delete': 'dyn-icon-delete',\r\n  'arrow-up': 'dyn-icon-arrow-up',\r\n  'arrow-down': 'dyn-icon-arrow-down',\r\n  'arrow-left': 'dyn-icon-arrow-left',\r\n  'arrow-right': 'dyn-icon-arrow-right',\r\n  'menu': 'dyn-icon-menu',\r\n  'info': 'dyn-icon-info',\r\n  'calendar': 'dyn-icon-calendar',\r\n  'clock': 'dyn-icon-clock',\r\n  'mail': 'dyn-icon-mail',\r\n});\r\n\r\nexport const IconDictionaryContext = createContext<IconDictionaryContextValue | undefined>(undefined);\r\n\r\nexport interface IconDictionaryProviderProps {\r\n  customDictionary?: IconDictionary | null | undefined;\r\n}\r\n\r\nexport const IconDictionaryProvider = ({\r\n  children,\r\n  customDictionary,\r\n}: PropsWithChildren<IconDictionaryProviderProps>) => {\r\n  const [dictionary, setDictionary] = useState<IconDictionaryContextValue>(DEFAULT_ICON_DICTIONARY);\r\n\r\n  useEffect(() => {\r\n    if (!customDictionary || Object.keys(customDictionary).length === 0) {\r\n      setDictionary(DEFAULT_ICON_DICTIONARY);\r\n      return;\r\n    }\r\n\r\n    setDictionary({\r\n      ...DEFAULT_ICON_DICTIONARY,\r\n      ...customDictionary,\r\n    });\r\n  }, [customDictionary]);\r\n\r\n  const value = useMemo<IconDictionaryContextValue>(() => dictionary, [dictionary]);\r\n\r\n  return (\r\n    <IconDictionaryContext.Provider value={value}>\r\n      {children}\r\n    </IconDictionaryContext.Provider>\r\n  );\r\n};\r\n\r\nexport { DEFAULT_ICON_DICTIONARY };\r\n","import { useContext } from 'react';\r\nimport { IconDictionaryContext } from '../providers/IconDictionaryProvider';\r\n\r\nexport const useIconDictionary = () => {\r\n  const context = useContext(IconDictionaryContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useIconDictionary must be used within IconDictionaryProvider');\r\n  }\r\n\r\n  return context;\r\n};\r\n","import * as React from 'react';\r\n\r\n// Built-in icon registry with common SVG icons\r\nexport const iconRegistry = {\r\n  check: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: React.createElement('path', {\r\n      d: 'M20 6L9 17l-5-5',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round'\r\n    })\r\n  }),\r\n  \r\n  close: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('path', {\r\n        key: '1',\r\n        d: 'M18 6L6 18',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('path', {\r\n        key: '2', \r\n        d: 'M6 6l12 12',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  warning: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('path', {\r\n        key: '1',\r\n        d: 'M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'\r\n      }),\r\n      React.createElement('line', {\r\n        key: '2',\r\n        x1: '12',\r\n        y1: '9',\r\n        x2: '12',\r\n        y2: '13',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('circle', { key: '3', cx: '12', cy: '17', r: '1' })\r\n    ]\r\n  }),\r\n  \r\n  info: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '10' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M12 16v-4',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('path', {\r\n        key: '3',\r\n        d: 'M12 8h.01',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  ok: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '10' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M9 12l2 2 4-4',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  minus: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: React.createElement('line', {\r\n      x1: '5',\r\n      y1: '12',\r\n      x2: '19',\r\n      y2: '12',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round'\r\n    })\r\n  }),\r\n  \r\n  plus: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('line', {\r\n        key: '1',\r\n        x1: '12',\r\n        y1: '5',\r\n        x2: '12',\r\n        y2: '19',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('line', {\r\n        key: '2',\r\n        x1: '5',\r\n        y1: '12',\r\n        x2: '19',\r\n        y2: '12',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n\r\n  'more-horizontal': React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '6', cy: '12', r: '1' }),\r\n      React.createElement('circle', { key: '2', cx: '12', cy: '12', r: '1' }),\r\n      React.createElement('circle', { key: '3', cx: '18', cy: '12', r: '1' })\r\n    ]\r\n  }),\r\n\r\n  download: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('path', {\r\n        key: '1',\r\n        d: 'M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('polyline', {\r\n        key: '2',\r\n        points: '7,10 12,15 17,10',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('line', {\r\n        key: '3',\r\n        x1: '12',\r\n        y1: '15',\r\n        x2: '12',\r\n        y2: '3',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  settings: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '3' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M12 1v6m0 6v6m11-7h-6m-6 0H1',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  help: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '10' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('circle', { key: '3', cx: '12', cy: '17', r: '1' })\r\n    ]\r\n  }),\r\n};\r\n\r\nexport type IconName = keyof typeof iconRegistry;\r\n\r\nexport const getIcon = (name: string): React.ReactElement | null => {\r\n  return iconRegistry[name as IconName] || null;\r\n};","import type { HTMLAttributes, ReactNode } from 'react';\r\n\r\nexport type DynIconTone = 'success' | 'warning' | 'danger' | 'info';\r\nexport type DynIconSizeToken = 'small' | 'medium' | 'large';\r\n\r\nexport interface DynIconProps extends Omit<HTMLAttributes<HTMLSpanElement>, 'color'> {\r\n  /** Icon identifier - string (dictionary key, class names) or React node */\r\n  icon?: string | ReactNode;\r\n\r\n  /** Icon size token or explicit dimension */\r\n  size?: DynIconSizeToken | number | string;\r\n\r\n  /** Semantic tone helper that maps to predefined colors */\r\n  tone?: DynIconTone;\r\n\r\n  /** Custom color override */\r\n  color?: string;\r\n\r\n  /** Whether the icon should spin */\r\n  spin?: boolean;\r\n\r\n  /** Disabled state prevents interaction */\r\n  disabled?: boolean;\r\n\r\n  /** Icon content fallback */\r\n  children?: ReactNode;\r\n\r\n  /** Test identifier for automated testing */\r\n  'data-testid'?: string;\r\n}\r\n\r\nexport interface DynIconDefaultProps {\r\n  size: DynIconSizeToken;\r\n  spin: boolean;\r\n  disabled: boolean;\r\n}\r\n\r\nexport const DYN_ICON_DEFAULT_PROPS: DynIconDefaultProps = {\r\n  size: 'medium',\r\n  spin: false,\r\n  disabled: false,\r\n} as const;\r\n\r\nexport type IconDictionary = Record<string, string>;\r\n\r\nexport interface ProcessedIcon {\r\n  baseClass: string;\r\n  iconClass: string;\r\n}\r\n","import {\r\n  forwardRef,\r\n  isValidElement,\r\n  useMemo,\r\n} from 'react';\r\nimport type {\r\n  CSSProperties,\r\n  ForwardedRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { processIconString } from '../../utils/dynFormatters';\r\nimport { useIconDictionary } from '../../hooks/useIconDictionary';\r\nimport { DEFAULT_ICON_DICTIONARY } from '../../providers/IconDictionaryProvider';\r\nimport type { IconDictionary } from '../../types';\r\nimport { iconRegistry } from './icons';\r\nimport type {\r\n  DynIconProps,\r\n  DynIconSizeToken,\r\n} from './DynIcon.types';\r\nimport { DYN_ICON_DEFAULT_PROPS } from './DynIcon.types';\r\nimport styles from './DynIcon.module.css';\r\n\r\ntype RegistryIcon = ReactElement | null;\r\n\r\nconst SIZE_CLASS_MAP: Record<DynIconSizeToken, string> = {\r\n  small: styles['dyn-icon-size-small']!,\r\n  medium: styles['dyn-icon-size-medium']!,\r\n  large: styles['dyn-icon-size-large']!,\r\n};\r\n\r\nconst TONE_CLASS_MAP: Partial<Record<NonNullable<DynIconProps['tone']>, string>> = {\r\n  success: styles.success!,\r\n  warning: styles.warning!,\r\n  danger: styles.danger!,\r\n  info: styles.info!,\r\n};\r\n\r\nconst resolveRegistryIcon = (iconKey: string): RegistryIcon => {\r\n  const normalizedKey = iconKey.trim();\r\n  if (!normalizedKey) {\r\n    return null;\r\n  }\r\n\r\n  const registryIcon = iconRegistry[normalizedKey as keyof typeof iconRegistry];\r\n  if (!registryIcon) {\r\n    return null;\r\n  }\r\n\r\n  return registryIcon;\r\n};\r\n\r\nconst DynIconComponent = (\r\n  props: DynIconProps,\r\n  ref: ForwardedRef<HTMLSpanElement>\r\n) => {\r\n  const {\r\n    icon,\r\n    size = DYN_ICON_DEFAULT_PROPS.size,\r\n    tone,\r\n    color,\r\n    spin = DYN_ICON_DEFAULT_PROPS.spin,\r\n    disabled = DYN_ICON_DEFAULT_PROPS.disabled,\r\n    onClick,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    role,\r\n    children,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { tabIndex, ...domProps } = rest;\r\n\r\n  let dictionary: IconDictionary;\r\n  try {\r\n    dictionary = useIconDictionary();\r\n  } catch (error) {\r\n    dictionary = DEFAULT_ICON_DICTIONARY;\r\n  }\r\n  const normalizedIcon = typeof icon === 'string' ? icon.trim() : '';\r\n\r\n  const iconTokens = useMemo(() => {\r\n    if (!normalizedIcon) {\r\n      return [] as string[];\r\n    }\r\n\r\n    return normalizedIcon\r\n      .split(/\\s+/)\r\n      .map(token => token.trim())\r\n      .filter(Boolean);\r\n  }, [normalizedIcon]);\r\n\r\n  const shouldUseRegistry = useMemo(() => {\r\n    if (!normalizedIcon || iconTokens.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const hasDictionaryMatch = iconTokens.some(token => Boolean(dictionary[token]));\r\n    const hasDirectClass = iconTokens.some(token => token.startsWith('dyn-icon-'));\r\n    const hasFontClass = iconTokens.some(token => token.startsWith('fa'));\r\n\r\n    if (hasDictionaryMatch || hasDirectClass || hasFontClass) {\r\n      return false;\r\n    }\r\n\r\n    return Boolean(resolveRegistryIcon(normalizedIcon));\r\n  }, [dictionary, iconTokens, normalizedIcon]);\r\n\r\n  const registryIcon = useMemo(() => {\r\n    if (!shouldUseRegistry) {\r\n      return null;\r\n    }\r\n\r\n    return resolveRegistryIcon(normalizedIcon);\r\n  }, [normalizedIcon, shouldUseRegistry]);\r\n\r\n  const processedIconClasses = useMemo(() => {\r\n    if (typeof icon !== 'string' || shouldUseRegistry) {\r\n      return null;\r\n    }\r\n\r\n    return processIconString(icon, dictionary);\r\n  }, [icon, dictionary, shouldUseRegistry]);\r\n\r\n  const resolvedSizeClass =\r\n    typeof size === 'string' && SIZE_CLASS_MAP[size as DynIconSizeToken];\r\n\r\n  const inlineDimensionStyle: CSSProperties | undefined = useMemo(() => {\r\n    if (typeof size === 'number') {\r\n      return {\r\n        width: size,\r\n        height: size,\r\n        fontSize: size,\r\n      } satisfies CSSProperties;\r\n    }\r\n\r\n    if (typeof size === 'string' && !SIZE_CLASS_MAP[size as DynIconSizeToken]) {\r\n      return {\r\n        width: size,\r\n        height: size,\r\n        fontSize: size,\r\n      } satisfies CSSProperties;\r\n    }\r\n\r\n    return undefined;\r\n  }, [size]);\r\n\r\n  const mergedStyle: CSSProperties | undefined = useMemo(() => {\r\n    if (!color && !inlineDimensionStyle) {\r\n      return style;\r\n    }\r\n\r\n    return {\r\n      ...inlineDimensionStyle,\r\n      ...style,\r\n      ...(color ? { color } : null),\r\n    } as CSSProperties | undefined;\r\n  }, [color, inlineDimensionStyle, style]);\r\n\r\n  const isInteractive = typeof onClick === 'function' && !disabled;\r\n\r\n  const toneClass = tone ? TONE_CLASS_MAP[tone] : undefined;\r\n\r\n  const rootClassName = cn(\r\n    styles.dynIcon,\r\n    resolvedSizeClass,\r\n    toneClass,\r\n    spin ? styles.spinning : undefined,\r\n    disabled ? styles.disabled : undefined,\r\n    isInteractive ? styles['dyn-icon-clickable'] : undefined,\r\n    processedIconClasses?.baseClass,\r\n    processedIconClasses?.iconClass,\r\n    className\r\n  );\r\n\r\n  const ariaRole = role ?? (isInteractive ? 'button' : 'img');\r\n  const shouldHideFromScreenReader =\r\n    !isInteractive &&\r\n    (ariaRole === 'img' || ariaRole === 'presentation' || ariaRole === 'none') &&\r\n    !rest['aria-label'] &&\r\n    !rest['aria-labelledby'];\r\n  const ariaHidden = rest['aria-hidden'] ?? (shouldHideFromScreenReader ? true : undefined);\r\n\r\n  const handleClick = (event: Parameters<NonNullable<typeof onClick>>[0]) => {\r\n    if (!isInteractive || !onClick) {\r\n      return;\r\n    }\r\n\r\n    onClick(event);\r\n  };\r\n\r\n  const content = (() => {\r\n    if (registryIcon) {\r\n      return (\r\n        <span className={styles.dynIconSvg} aria-hidden=\"true\">\r\n          {registryIcon}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (typeof icon === 'string') {\r\n      if (!processedIconClasses?.iconClass && !processedIconClasses?.baseClass) {\r\n        return (\r\n          <span className={styles.dynIconFallback} aria-hidden=\"true\">\r\n            {icon}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    if (isValidElement(icon)) {\r\n      return (\r\n        <span className={styles.dynIconCustom} aria-hidden=\"true\">\r\n          {icon}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (icon) {\r\n      return icon;\r\n    }\r\n\r\n    return children ?? null;\r\n  })();\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      id={id}\r\n      data-testid={dataTestId}\r\n      role={ariaRole}\r\n      className={rootClassName}\r\n      style={mergedStyle}\r\n      onClick={disabled ? undefined : handleClick}\r\n      aria-disabled={disabled || undefined}\r\n      tabIndex={isInteractive ? tabIndex ?? 0 : tabIndex}\r\n      {...domProps}\r\n      aria-hidden={ariaHidden}\r\n    >\r\n      {content}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst DynIcon = forwardRef<HTMLSpanElement, DynIconProps>(DynIconComponent);\r\n\r\nDynIcon.displayName = 'DynIcon';\r\n\r\nexport { DynIcon };\r\nexport default DynIcon;\r\n","import type {\r\n  ButtonHTMLAttributes,\r\n  FocusEventHandler,\r\n  KeyboardEventHandler,\r\n  MouseEventHandler,\r\n  ReactNode,\r\n} from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\n/**\r\n * Button kind/variant types following design system standards\r\n */\r\nexport type DynButtonKind = 'primary' | 'secondary' | 'tertiary';\r\n\r\n/**\r\n * Button size variants using design token scale\r\n */\r\nexport type DynButtonSize = 'small' | 'medium' | 'large';\r\n\r\n/**\r\n * Props interface for DynButton component\r\n * Follows DynAvatar's standardized pattern with BaseComponentProps and AccessibilityProps\r\n */\r\nexport interface DynButtonProps\r\n  extends BaseComponentProps,\r\n    AccessibilityProps,\r\n    Omit<\r\n      ButtonHTMLAttributes<HTMLButtonElement>,\r\n      | 'type'\r\n      | 'onBlur'\r\n      | 'onClick'\r\n      | 'onKeyDown'\r\n      | 'children'\r\n      | 'aria-label'\r\n      | 'aria-expanded'\r\n      | 'aria-controls'\r\n      | 'aria-describedby'\r\n      | 'aria-pressed'\r\n      | keyof BaseComponentProps\r\n      | keyof AccessibilityProps\r\n    > {\r\n\r\n  /** Button text label */\r\n  label?: string;\r\n\r\n  /** Icon - can be string (icon name) or React node */\r\n  icon?: string | ReactNode;\r\n\r\n  /** HTML button type */\r\n  type?: 'button' | 'submit' | 'reset';\r\n\r\n  /** Loading state indicator */\r\n  loading?: boolean;\r\n\r\n  /** Text announced to assistive technologies while loading */\r\n  loadingText?: string;\r\n\r\n  /** Danger/destructive state styling */\r\n  danger?: boolean;\r\n\r\n  /** Button kind/variant */\r\n  kind?: DynButtonKind;\r\n\r\n  /** Button size */\r\n  size?: DynButtonSize;\r\n\r\n  /** Disabled state */\r\n  disabled?: boolean;\r\n\r\n  /** Expand button to full width */\r\n  fullWidth?: boolean;\r\n\r\n  /** Hide button on viewports narrower than 768px */\r\n  hideOnMobile?: boolean;\r\n\r\n  /** Display as icon-only on mobile while keeping the label accessible */\r\n  iconOnlyOnMobile?: boolean;\r\n\r\n  /** Accessible expanded state (for dropdown buttons, etc.) */\r\n  'aria-expanded'?: boolean;\r\n\r\n  /** ID reference of the element controlled by the button */\r\n  'aria-controls'?: string;\r\n\r\n  /** Pressed/toggled state for ARIA toggle buttons */\r\n  'aria-pressed'?: boolean;\r\n\r\n  /** Blur event handler */\r\n  onBlur?: FocusEventHandler<HTMLButtonElement>;\r\n\r\n  /** Click event handler */\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n\r\n  /** Key down handler */\r\n  onKeyDown?: KeyboardEventHandler<HTMLButtonElement>;\r\n}\r\n\r\n/**\r\n * Ref type for DynButton component\r\n */\r\nexport type DynButtonRef = HTMLButtonElement;\r\n\r\n/**\r\n * Default props type for DynButton\r\n */\r\nexport type DynButtonDefaultProps = Required<\r\n  Pick<\r\n    DynButtonProps,\r\n    | 'type'\r\n    | 'kind'\r\n    | 'size'\r\n    | 'loading'\r\n    | 'loadingText'\r\n    | 'danger'\r\n    | 'disabled'\r\n    | 'fullWidth'\r\n    | 'hideOnMobile'\r\n    | 'iconOnlyOnMobile'\r\n  >\r\n>;\r\n\r\n/**\r\n * Default props values for DynButton component\r\n * Provides sensible defaults for all optional props\r\n */\r\nexport const DYN_BUTTON_DEFAULT_PROPS: DynButtonDefaultProps = {\r\n  type: 'button',\r\n  kind: 'primary',\r\n  size: 'medium',\r\n  loading: false,\r\n  loadingText: 'Loading…',\r\n  danger: false,\r\n  disabled: false,\r\n  fullWidth: false,\r\n  hideOnMobile: false,\r\n  iconOnlyOnMobile: false,\r\n} as const;","import React, { forwardRef, useMemo, useState } from 'react';\r\nimport type {\r\n  FocusEventHandler,\r\n  KeyboardEventHandler,\r\n  MouseEventHandler,\r\n} from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport { DynIcon } from '../DynIcon';\r\nimport type {\r\n  DynButtonDefaultProps,\r\n  DynButtonProps,\r\n  DynButtonRef,\r\n} from './DynButton.types';\r\nimport { DYN_BUTTON_DEFAULT_PROPS } from './DynButton.types';\r\nimport styles from './DynButton.module.css';\r\n\r\n/**\r\n * Safely access CSS module classes (pattern from DynAvatar)\r\n */\r\nconst getStyleClass = (className: string): string => {\r\n  return (styles as Record<string, string>)[className] || '';\r\n};\r\n\r\n/**\r\n * Normalize ARIA label values\r\n */\r\nconst normalizeAriaLabel = (value: string | undefined): string | undefined =>\r\n  value?.trim() ? value.trim() : undefined;\r\n\r\n/**\r\n * Generate appropriate ARIA label for icon-only buttons\r\n */\r\nconst generateIconAriaLabel = (icon: string | React.ReactNode): string | undefined => {\r\n  if (typeof icon !== 'string') return undefined;\r\n  return icon\r\n    .replace(/[-_]+/g, ' ')\r\n    .replace(/\\s+/g, ' ')\r\n    .trim();\r\n};\r\n\r\ntype DynButtonComponentProps = DynButtonProps & DynButtonDefaultProps;\r\n\r\n/**\r\n * DynButton\r\n *\r\n * Enterprise-grade button component following the DynAvatar gold standard for architecture,\r\n * accessibility, and composability.\r\n */\r\nexport const DynButton = forwardRef<DynButtonRef, DynButtonProps>(\r\n  (\r\n    {\r\n      label,\r\n      icon,\r\n      type = DYN_BUTTON_DEFAULT_PROPS.type,\r\n      kind = DYN_BUTTON_DEFAULT_PROPS.kind,\r\n      size = DYN_BUTTON_DEFAULT_PROPS.size,\r\n      loading = DYN_BUTTON_DEFAULT_PROPS.loading,\r\n      loadingText = DYN_BUTTON_DEFAULT_PROPS.loadingText,\r\n      danger = DYN_BUTTON_DEFAULT_PROPS.danger,\r\n      disabled = DYN_BUTTON_DEFAULT_PROPS.disabled,\r\n      fullWidth = DYN_BUTTON_DEFAULT_PROPS.fullWidth,\r\n      hideOnMobile = DYN_BUTTON_DEFAULT_PROPS.hideOnMobile,\r\n      iconOnlyOnMobile = DYN_BUTTON_DEFAULT_PROPS.iconOnlyOnMobile,\r\n      onClick,\r\n      onBlur,\r\n      onKeyDown: userOnKeyDown,\r\n      children,\r\n      className,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'aria-expanded': ariaExpanded,\r\n      'aria-controls': ariaControls,\r\n      'aria-pressed': ariaPressed,\r\n      'data-testid': dataTestId,\r\n      role,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n  // Generate an ID per render when not provided so tests that expect\r\n  // different IDs on rerender pass (generateId increments a module counter).\r\n  const internalId = id || generateId('button');\r\n\r\n    // Memoized computations\r\n    const trimmedLabel = useMemo(() => (typeof label === 'string' ? label.trim() : ''), [label]);\r\n    const hasLabel = trimmedLabel.length > 0;\r\n    const childrenCount = React.Children.count(children);\r\n    const hasChildrenContent = childrenCount > 0;\r\n    const isIconOnly = Boolean(icon) && !hasLabel && !hasChildrenContent;\r\n    const isDisabled = disabled || loading;\r\n\r\n    // Generate appropriate ARIA label for accessibility\r\n    const iconAriaLabel = useMemo(() => generateIconAriaLabel(icon), [icon]);\r\n    const computedAriaLabel = useMemo(\r\n      () => normalizeAriaLabel(\r\n        ariaLabel ?? (isIconOnly ? (trimmedLabel || iconAriaLabel || 'Button') : undefined)\r\n      ),\r\n      [ariaLabel, isIconOnly, trimmedLabel, iconAriaLabel]\r\n    );\r\n\r\n    // Normalize loading text\r\n    const normalizedLoadingText = useMemo(() => {\r\n      if (typeof loadingText !== 'string') return DYN_BUTTON_DEFAULT_PROPS.loadingText;\r\n      const trimmed = loadingText.trim();\r\n      return trimmed || DYN_BUTTON_DEFAULT_PROPS.loadingText;\r\n    }, [loadingText]);\r\n\r\n    // Icon size mapping\r\n    const iconSizeToken = useMemo(() => {\r\n      switch (size) {\r\n        case 'small': return 'small';\r\n        case 'large': return 'large';\r\n        default: return 'medium';\r\n      }\r\n    }, [size]);\r\n\r\n    // Render icon element\r\n    const iconElement = useMemo(() => {\r\n      if (!icon) return null;\r\n      if (typeof icon === 'string') {\r\n        return <DynIcon icon={icon} aria-hidden=\"true\" className={getStyleClass('icon')} size={iconSizeToken} />;\r\n      }\r\n      return <span className={getStyleClass('icon')} aria-hidden=\"true\">{icon}</span>;\r\n    }, [icon, iconSizeToken]);\r\n\r\n    // Render children content\r\n    const childrenContent = useMemo(() => {\r\n      if (!hasChildrenContent) return null;\r\n      if (typeof children === 'string') {\r\n        const trimmedChildren = children.trim();\r\n        if (!trimmedChildren) return null;\r\n        return <span className={getStyleClass('label')}>{trimmedChildren}</span>;\r\n      }\r\n      return children;\r\n    }, [children, hasChildrenContent]);\r\n\r\n    // Render label element (primary text)\r\n    const labelElement = hasLabel ? (\r\n      <span className={getStyleClass('label')}>{trimmedLabel}</span>\r\n    ) : null;\r\n\r\n    // Generate CSS classes safely (DynAvatar pattern)\r\n    const kindClass = getStyleClass(`kind${kind.charAt(0).toUpperCase() + kind.slice(1)}`);\r\n    const sizeClass = getStyleClass(`size${size.charAt(0).toUpperCase() + size.slice(1)}`);\r\n    const dangerClass = getStyleClass('danger');\r\n    const loadingClass = getStyleClass('loading');\r\n    const iconOnlyClass = getStyleClass('iconOnly');\r\n    const fullWidthClass = getStyleClass('fullWidth');\r\n    const hideOnMobileClass = getStyleClass('hideOnMobile');\r\n    const iconOnlyOnMobileClass = getStyleClass('iconOnlyOnMobile');\r\n\r\n    const buttonClassName = cn(\r\n      getStyleClass('root'),\r\n      kindClass,\r\n      sizeClass,\r\n      {\r\n        [dangerClass]: danger && dangerClass,\r\n        [loadingClass]: loading && loadingClass,\r\n        [iconOnlyClass]: isIconOnly && iconOnlyClass,\r\n        [fullWidthClass]: fullWidth && fullWidthClass,\r\n        [hideOnMobileClass]: hideOnMobile && hideOnMobileClass,\r\n        [iconOnlyOnMobileClass]: iconOnlyOnMobile && iconOnlyOnMobileClass,\r\n      },\r\n      className\r\n    );\r\n\r\n    // Event handlers\r\n    const handleClick: MouseEventHandler<HTMLButtonElement> = (event) => {\r\n      if (isDisabled) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return;\r\n      }\r\n      onClick?.(event);\r\n    };\r\n\r\n    const handleBlur: FocusEventHandler<HTMLButtonElement> = (event) => {\r\n      onBlur?.(event);\r\n    };\r\n\r\n    const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\r\n      if (event.key === ' ' || event.key === 'Spacebar') {\r\n        event.preventDefault();\r\n        if (!isDisabled) {\r\n          event.currentTarget.click();\r\n        }\r\n      }\r\n      userOnKeyDown?.(event);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <button\r\n        ref={ref}\r\n        id={internalId}\r\n        type={type}\r\n        className={buttonClassName}\r\n        data-testid={dataTestId ?? 'dyn-button'}\r\n        aria-label={computedAriaLabel}\r\n        aria-describedby={ariaDescribedBy}\r\n        aria-labelledby={ariaLabelledBy}\r\n        aria-expanded={ariaExpanded}\r\n        aria-controls={ariaControls}\r\n        aria-pressed={typeof ariaPressed === 'boolean' ? ariaPressed : undefined}\r\n        aria-busy={loading || undefined}\r\n        aria-disabled={isDisabled || undefined}\r\n        disabled={isDisabled}\r\n        role={role}\r\n        onClick={handleClick}\r\n        onBlur={handleBlur}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      >\r\n        <span className={getStyleClass('content')} style={{ opacity: loading ? 0 : undefined }}>\r\n          {iconElement}\r\n          {labelElement}\r\n          {childrenContent}\r\n        </span>\r\n        {/* Loading spinner and accessibility announcements */}\r\n        {loading && (\r\n          <>\r\n            <span className={getStyleClass('spinner')} aria-hidden=\"true\" />\r\n            {/* Keep an inert SR-only element inside the button so tests can\r\n                query it, but mark it aria-hidden so it doesn't become part\r\n                of the button's accessible name. The actual live region that\r\n                will be announced by assistive tech is rendered *outside*\r\n                the button below. */}\r\n            <span\r\n              className=\"dyn-sr-only\"\r\n              role=\"status\"\r\n              aria-live=\"polite\"\r\n              aria-atomic=\"true\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              {normalizedLoadingText}\r\n            </span>\r\n          </>\r\n        )}\r\n        </button>\r\n\r\n        {/* External live region so screen readers announce loading text\r\n            without affecting the button's accessible name. It is visually\r\n            hidden via the same SR-only class. */}\r\n        {loading && (\r\n          <span\r\n            className=\"dyn-sr-only\"\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n            aria-atomic=\"true\"\r\n          >\r\n            {normalizedLoadingText}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nDynButton.displayName = 'DynButton';\r\n\r\nexport default DynButton;\r\n","﻿import { type ImgHTMLAttributes, type ReactNode } from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\n// Direct type definitions - no external dependencies\r\nexport type DynAvatarSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\nexport type DynAvatarShape = 'circle' | 'square' | 'rounded';\r\nexport type DynAvatarStatus = 'online' | 'offline' | 'away' | 'busy';\r\n\r\n/**\r\n * Token-based avatar size map that mirrors CSS module sizing\r\n */\r\nexport const AVATAR_SIZES = {\r\n  xs: 'var(--dyn-spacing-2xl, 2rem)',\r\n  sm: 'var(--dyn-spacing-3xl, 3rem)',\r\n  md: '4rem',\r\n  lg: '5rem',\r\n  xl: '6rem',\r\n} as const satisfies Record<DynAvatarSize, string>;\r\n\r\n/**\r\n * Props interface for DynAvatar component\r\n * Clean TypeScript implementation without external namespace dependencies\r\n */\r\nexport interface DynAvatarProps extends\r\n  Omit<BaseComponentProps, 'children'>,\r\n  AccessibilityProps,\r\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof BaseComponentProps | keyof AccessibilityProps | 'onClick' | 'children'> {\r\n\r\n  /** Image source URL */\r\n  src?: string;\r\n\r\n  /** Alt text for image (required for accessibility) */\r\n  alt: string;\r\n\r\n  /** Avatar size using design token scale */\r\n  size?: DynAvatarSize;\r\n\r\n  /** Avatar shape variant */\r\n  shape?: DynAvatarShape;\r\n\r\n  /** Manual initials override */\r\n  initials?: string;\r\n\r\n  /** Status indicator */\r\n  status?: DynAvatarStatus;\r\n\r\n  /** Loading state */\r\n  loading?: boolean;\r\n\r\n  /** Error state */\r\n  error?: boolean;\r\n\r\n  /** Click handler for interactive avatars */\r\n  onClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n\r\n  /** Custom fallback content */\r\n  fallback?: ReactNode;\r\n\r\n  /** Children content */\r\n  children?: ReactNode;\r\n\r\n  /** Image loading strategy */\r\n  imageLoading?: 'eager' | 'lazy';\r\n\r\n  /** Custom image properties */\r\n  imageProps?: Omit<ImgHTMLAttributes<HTMLImageElement>, 'src' | 'alt' | 'loading'> & {\r\n    'data-testid'?: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Ref type for DynAvatar component\r\n */\r\nexport type DynAvatarRef = HTMLDivElement;\r\n\r\n/**\r\n * Status accessibility labels\r\n */\r\nexport const DYN_AVATAR_STATUS_LABELS: Record<DynAvatarStatus, string> = {\r\n  online: 'Online',\r\n  offline: 'Offline',\r\n  away: 'Away',\r\n  busy: 'Busy',\r\n} as const;\r\n","import React, { forwardRef, useState, useMemo } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport { DynAvatarProps, DynAvatarRef, DYN_AVATAR_STATUS_LABELS } from './DynAvatar.types';\r\nimport styles from './DynAvatar.module.css';\r\n\r\n// Default fallback icon\r\nconst DefaultFallbackIcon = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <path\r\n      d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n/**\r\n * Generate initials from a name string\r\n * Optimized algorithm for proper initials extraction\r\n */\r\nconst generateInitials = (name: string): string => {\r\n  return name\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .filter(Boolean)\r\n    .slice(0, 2)\r\n    .map(word => word.charAt(0).toUpperCase())\r\n    .join('');\r\n};\r\n\r\n/**\r\n * Safely access CSS module classes\r\n */\r\nconst getStyleClass = (className: string): string => {\r\n  return (styles as Record<string, string>)[className] || '';\r\n};\r\n\r\nexport const DynAvatar = forwardRef<DynAvatarRef, DynAvatarProps>(\r\n  (\r\n    {\r\n      src,\r\n      alt,\r\n      size = 'md',\r\n      shape = 'circle',\r\n      initials,\r\n      status,\r\n      loading = false,\r\n      error = false,\r\n      onClick,\r\n      fallback,\r\n      imageLoading = 'eager',\r\n      imageProps,\r\n      className,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'data-testid': dataTestId,\r\n      role,\r\n      children,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [imageLoaded, setImageLoaded] = useState(false);\r\n    const [imageError, setImageError] = useState(false);\r\n    const [internalId] = useState(() => id || generateId('avatar'));\r\n\r\n    const isInteractive = Boolean(onClick);\r\n\r\n    // Generate initials from alt text or use provided initials\r\n    const displayInitials = useMemo(() => {\r\n      if (initials) return initials.slice(0, 2).toUpperCase();\r\n      if (alt && alt !== 'Avatar') return generateInitials(alt);\r\n      return '';\r\n    }, [initials, alt]);\r\n\r\n    // Determine what to show\r\n    const showImage = src && !imageError && imageLoaded;\r\n    const showFallback = !src || imageError || !imageLoaded;\r\n    const isLoadingState = loading || (src && !imageLoaded && !imageError);\r\n\r\n    const handleImageLoad = () => {\r\n      setImageLoaded(true);\r\n      setImageError(false);\r\n    };\r\n\r\n    const handleImageError = () => {\r\n      setImageError(true);\r\n      setImageLoaded(false);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n      if (!isInteractive) return;\r\n      onClick?.(event);\r\n    };\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (!isInteractive) return;\r\n\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        event.preventDefault();\r\n        onClick?.(event as any);\r\n      }\r\n    };\r\n\r\n    // Generate CSS class names safely\r\n    const sizeClass = getStyleClass(`avatar--${size}`);\r\n    const shapeClass = getStyleClass(`avatar--${shape}`);\r\n    const statusClass = status ? getStyleClass(`avatar--${status}`) : '';\r\n    const clickableClass = getStyleClass('avatar--clickable');\r\n    const loadingClass = getStyleClass('avatar--loading');\r\n    const errorClass = getStyleClass('avatar--error');\r\n\r\n    // Generate accessibility attributes\r\n    const statusLabel = status ? DYN_AVATAR_STATUS_LABELS[status] : undefined;\r\n    const accessibleLabelBase = ariaLabel || (isInteractive ? `Avatar for ${alt}` : alt);\r\n    const accessibleLabel = statusLabel\r\n      ? `${accessibleLabelBase} (${statusLabel})`\r\n      : accessibleLabelBase;\r\n\r\n    const avatarClasses = cn(\r\n      getStyleClass('avatar'),\r\n      sizeClass,\r\n      shapeClass,\r\n      statusClass,\r\n      {\r\n        [clickableClass]: isInteractive && clickableClass,\r\n        [loadingClass]: isLoadingState && loadingClass,\r\n        [errorClass]: (error || imageError) && errorClass,\r\n      },\r\n      className\r\n    );\r\n\r\n    // Generate image classes safely\r\n    const imageBaseClass = getStyleClass('avatar__image');\r\n    const imageLoadingClass = getStyleClass('avatar__image--loading');\r\n    const imageLoadedClass = getStyleClass('avatar__image--loaded');\r\n\r\n    const imageClasses = cn(\r\n      imageBaseClass,\r\n      {\r\n        [imageLoadingClass]: !imageLoaded && imageLoadingClass,\r\n        [imageLoadedClass]: imageLoaded && imageLoadedClass,\r\n      }\r\n    );\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        id={internalId}\r\n        className={avatarClasses}\r\n        role={isInteractive ? 'button' : (role || 'img')}\r\n        tabIndex={isInteractive ? 0 : undefined}\r\n        aria-label={accessibleLabel}\r\n        aria-describedby={ariaDescribedBy}\r\n        aria-labelledby={ariaLabelledBy}\r\n        aria-busy={isLoadingState ? 'true' : undefined}\r\n        data-status={status}\r\n        data-testid={dataTestId || 'dyn-avatar'}\r\n        onClick={handleClick}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      >\r\n        {/* Image */}\r\n        {src && (\r\n          <img\r\n            src={src}\r\n            alt={showImage ? alt : ''}\r\n            loading={imageLoading}\r\n            className={imageClasses}\r\n            data-testid=\"dyn-avatar-image\"\r\n            onLoad={handleImageLoad}\r\n            onError={handleImageError}\r\n            {...imageProps}\r\n          />\r\n        )}\r\n\r\n        {/* Fallback content */}\r\n        {showFallback && (\r\n          <div\r\n            className={getStyleClass('avatar__fallback')}\r\n            aria-hidden={showImage ? 'true' : undefined}\r\n          >\r\n            {fallback || children || (\r\n              displayInitials ? (\r\n                <span className={getStyleClass('avatar__initials')}>\r\n                  {displayInitials}\r\n                </span>\r\n              ) : (\r\n                <span className={getStyleClass('avatar__icon')}>\r\n                  <DefaultFallbackIcon />\r\n                </span>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Loading announcement for screen readers */}\r\n        {isLoadingState && (\r\n          <span className=\"dyn-sr-only\" aria-live=\"polite\">\r\n            Loading avatar\r\n          </span>\r\n        )}\r\n\r\n        {/* Error announcement for screen readers */}\r\n        {(error || imageError) && (\r\n          <span className=\"dyn-sr-only\" aria-live=\"assertive\">\r\n            Avatar failed to load\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynAvatar.displayName = 'DynAvatar';","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useMemo,\r\n  useState\r\n} from 'react';\r\nimport type { CSSProperties, ForwardedRef, KeyboardEvent, MouseEvent } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport type {\r\n  DynBadgeProps,\r\n  DynBadgeRef\r\n} from './DynBadge.types';\r\nimport styles from './DynBadge.module.css';\r\n\r\nconst sizeClassNameMap = {\r\n  small: styles['badge--small'],\r\n  medium: styles['badge--medium'],\r\n  large: styles['badge--large']\r\n} as const;\r\n\r\nconst variantClassNameMap = {\r\n  solid: styles['badge--solid'],\r\n  soft: styles['badge--soft'],\r\n  outline: styles['badge--outline'],\r\n  dot: styles['badge--dot']\r\n} as const;\r\n\r\nconst colorClassNameMap = {\r\n  primary: styles['badge--primary'],\r\n  secondary: styles['badge--secondary'],\r\n  success: styles['badge--success'],\r\n  warning: styles['badge--warning'],\r\n  danger: styles['badge--danger'],\r\n  info: styles['badge--info'],\r\n  neutral: styles['badge--neutral']\r\n} as const;\r\n\r\nconst positionClassNameMap = {\r\n  topRight: styles['badge--topRight'],\r\n  topLeft: styles['badge--topLeft'],\r\n  bottomRight: styles['badge--bottomRight'],\r\n  bottomLeft: styles['badge--bottomLeft']\r\n} as const;\r\n\r\nconst DEFAULT_MAX_COUNT = 99;\r\n\r\n/**\r\n * Safely access CSS module classes\r\n */\r\nconst getStyleClass = (className: string): string => {\r\n  return (styles as Record<string, string>)[className] || '';\r\n};\r\n\r\nconst DynBadgeComponent = (\r\n  props: DynBadgeProps,\r\n  ref: ForwardedRef<DynBadgeRef>\r\n) => {\r\n  const {\r\n    children,\r\n    variant = 'solid',\r\n    color = 'neutral',\r\n    size = 'medium',\r\n    position,\r\n    onClick,\r\n    startIcon,\r\n    endIcon,\r\n    maxCount = DEFAULT_MAX_COUNT,\r\n    count,\r\n    value,\r\n    showZero = false,\r\n    animated = false,\r\n    pulse = false,\r\n    countDescription,\r\n    className,\r\n    'data-testid': dataTestId,\r\n    id,\r\n    onKeyDown: userOnKeyDown,\r\n    role: roleProp,\r\n    tabIndex: tabIndexProp,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-live': ariaLive,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { style: inlineStyle, ...restProps } = rest;\r\n\r\n  const [internalId] = useState(() => id || generateId('badge'));\r\n  \r\n  const numericCount = typeof count === 'number' ? count : typeof value === 'number' ? value : undefined;\r\n  const hasCount = typeof numericCount === 'number';\r\n  const hasChildren = children !== undefined && children !== null;\r\n  const shouldHideBadge = hasCount && numericCount === 0 && !showZero && !hasChildren;\r\n\r\n  if (shouldHideBadge) {\r\n    return null;\r\n  }\r\n\r\n  const isInteractive = typeof onClick === 'function';\r\n\r\n  const displayCount = useMemo(() => {\r\n    if (!hasCount) {\r\n      return undefined;\r\n    }\r\n\r\n    if (typeof maxCount === 'number' && numericCount! > maxCount) {\r\n      return `${maxCount}+`;\r\n    }\r\n\r\n    return String(numericCount);\r\n  }, [hasCount, maxCount, numericCount]);\r\n\r\n  const displayContent = useMemo(() => {\r\n    if (hasChildren) {\r\n      return children;\r\n    }\r\n\r\n    if (hasCount) {\r\n      return displayCount;\r\n    }\r\n\r\n    return undefined;\r\n  }, [children, displayCount, hasChildren, hasCount]);\r\n\r\n  const semanticColorClass =\r\n    color && Object.prototype.hasOwnProperty.call(colorClassNameMap, color)\r\n      ? colorClassNameMap[color as keyof typeof colorClassNameMap]\r\n      : undefined;\r\n\r\n  const badgeClasses = cn(\r\n    getStyleClass('badge'),\r\n    sizeClassNameMap[size],\r\n    variantClassNameMap[variant],\r\n    semanticColorClass,\r\n    position && getStyleClass('badge--positioned'),\r\n    position ? positionClassNameMap[position] : undefined,\r\n    isInteractive && getStyleClass('badge--clickable'),\r\n    hasCount && getStyleClass('badge--count'),\r\n    animated && getStyleClass('badge--animated'),\r\n    pulse && getStyleClass('badge--pulse'),\r\n    className\r\n  );\r\n\r\n  const ariaLabelValue = ariaLabel ?? (hasCount ? `${countDescription || 'Count'}: ${displayCount}` : undefined);\r\n  const ariaLiveValue = ariaLive ?? (hasCount ? 'polite' : undefined);\r\n  const roleValue = roleProp ?? (isInteractive ? 'button' : undefined);\r\n  const tabIndexValue = tabIndexProp ?? (isInteractive ? 0 : undefined);\r\n  const dataTestIdValue = dataTestId ?? 'dyn-badge';\r\n  const customColorStyle = !semanticColorClass && typeof color === 'string'\r\n    ? ({\r\n        '--badge-accent': color,\r\n        '--badge-outline-color': color,\r\n        '--badge-soft-fallback': color\r\n      } as CSSProperties)\r\n    : undefined;\r\n  const badgeStyle = customColorStyle\r\n    ? { ...customColorStyle, ...(inlineStyle as CSSProperties | undefined) }\r\n    : inlineStyle;\r\n\r\n  const handleClick = useCallback(\r\n    (event: MouseEvent<HTMLSpanElement>) => {\r\n      onClick?.(event);\r\n    },\r\n    [onClick]\r\n  );\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event: KeyboardEvent<HTMLSpanElement>) => {\r\n      userOnKeyDown?.(event);\r\n\r\n      if (!isInteractive || event.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        if (event.key === ' ') {\r\n          event.preventDefault();\r\n        }\r\n\r\n        event.currentTarget.click();\r\n      }\r\n    },\r\n    [isInteractive, userOnKeyDown]\r\n  );\r\n\r\n  const showTextContent = displayContent !== undefined && variant !== 'dot';\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      id={internalId}\r\n      className={badgeClasses}\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyDown}\r\n      role={roleValue}\r\n      tabIndex={tabIndexValue}\r\n      aria-label={ariaLabelValue}\r\n      aria-describedby={ariaDescribedBy}\r\n      aria-live={ariaLiveValue}\r\n      data-testid={dataTestIdValue}\r\n      style={badgeStyle}\r\n      {...restProps}\r\n    >\r\n      <span className={getStyleClass('badge__content')}>\r\n        {startIcon && (\r\n          <span className={getStyleClass('badge__icon')} aria-hidden=\"true\">\r\n            {startIcon}\r\n          </span>\r\n        )}\r\n\r\n        {showTextContent && (\r\n          <span className={getStyleClass('badge__text')}>\r\n            {displayContent}\r\n          </span>\r\n        )}\r\n\r\n        {endIcon && (\r\n          <span className={getStyleClass('badge__icon')} aria-hidden=\"true\">\r\n            {endIcon}\r\n          </span>\r\n        )}\r\n      </span>\r\n\r\n      {hasCount && Number(numericCount) > 0 && (\r\n        <span className=\"dyn-sr-only\">\r\n          {countDescription || 'Notifications'}: {displayCount}\r\n        </span>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst DynBadge = forwardRef<DynBadgeRef, DynBadgeProps>(DynBadgeComponent);\r\n\r\nDynBadge.displayName = 'DynBadge';\r\n\r\nexport { DynBadge };\r\nexport default DynBadge;","import React, { forwardRef, useEffect, useMemo } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport type { DynBoxProps, DynBoxRef } from './DynBox.types';\r\nimport styles from './DynBox.module.css';\r\n\r\nconst getStyleClass = (name: string) => (styles as Record<string, string>)[name] || '';\r\n\r\nconst FILTERED_PROPS = new Set([\r\n  'as','padding','p','px','py','pt','pr','pb','pl','m','mx','my','mt','mr','mb','ml',\r\n  'radius','borderRadius','customBorderRadius','shadow','border','background','bg','backgroundColor','color',\r\n  'align','justify','direction','flexDirection','wrap','gap','rowGap','columnGap',\r\n  'gridTemplateColumns','gridTemplateRows','gridTemplateAreas','top','right','bottom','left','zIndex',\r\n  'interactive','cssVars','ariaLiveMessage','ariaLivePoliteness','focusOnMount','display','position','textAlign','overflow','overflowX','overflowY',\r\n  'alignContent','width','height','minWidth','minHeight','maxWidth','maxHeight','hideOnMobile','hideOnTablet','hideOnDesktop','mobileOnly','tabletOnly','desktopOnly'\r\n]);\r\n\r\nconst isToken = (v?: string) => v && ['0','xs','sm','md','lg','xl','2xl'].includes(v);\r\nconst toTokenVar = (v: string) => `var(--dyn-spacing-${v}, var(--spacing-${v}, ${({'0':'0','xs':'0.25rem','sm':'0.5rem','md':'1rem','lg':'1.5rem','xl':'2rem','2xl':'3rem'} as Record<string,string>)[v]}))`;\r\n\r\nfunction DynBoxInner<E extends React.ElementType = 'div'>(props: DynBoxProps<E>, ref: DynBoxRef<E>) {\r\n  const {\r\n    as, padding, p, px, py, pt, pr, pb, pl,\r\n    m, mx, my, mt, mr, mb, ml,\r\n    radius = 'md', borderRadius, customBorderRadius,\r\n    shadow = 'none', border = 'default',\r\n    background = 'surface', bg, backgroundColor, color,\r\n    align, justify,\r\n    direction = 'column', flexDirection, wrap,\r\n    gap = 'md', rowGap, columnGap,\r\n    gridTemplateColumns, gridTemplateRows, gridTemplateAreas,\r\n    alignContent, display, position, textAlign, overflow, overflowX, overflowY,\r\n    width, height, maxWidth, maxHeight, minWidth, minHeight,\r\n    top, right, bottom, left, zIndex,\r\n    className, style, id, role,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'data-testid': dataTestId = 'dyn-box',\r\n    focusOnMount, interactive,\r\n    ariaLiveMessage, ariaLivePoliteness = 'polite',\r\n    cssVars,\r\n    hideOnMobile, hideOnTablet, hideOnDesktop, mobileOnly, tabletOnly, desktopOnly,\r\n    children, ...rest\r\n  } = props;\r\n\r\n  const Component = (as ?? 'div') as React.ElementType;\r\n  const internalId = useMemo(() => id || generateId('dyn-box'), [id]);\r\n  const domProps = Object.fromEntries(Object.entries(rest).filter(([k]) => !FILTERED_PROPS.has(k)));\r\n\r\n  // Stable ref that also forwards\r\n  const elementRef = React.useRef<HTMLElement | null>(null);\r\n  const setRefs = (node: any) => {\r\n    elementRef.current = node;\r\n    if (typeof ref === 'function') ref(node);\r\n    else if (ref && 'current' in (ref as any)) (ref as any).current = node;\r\n  };\r\n\r\n  const legacyAliases: string[] = ['box'];\r\n  const finalDirection = flexDirection || direction;\r\n  if (finalDirection?.startsWith('row') || finalDirection?.startsWith('column')) legacyAliases.push('box--flex');\r\n  const finalBackground = bg || background;\r\n  if (['primary','secondary','success','warning','danger'].includes(finalBackground as string)) legacyAliases.push(`box--bg-${finalBackground}`);\r\n\r\n  const finalRadius = borderRadius || customBorderRadius || radius;\r\n  const basePadding = p ?? padding; // keep undefined if not provided\r\n\r\n  const classes = cn(\r\n    getStyleClass('box'),\r\n    basePadding && isToken(basePadding) && getStyleClass(`box--p-${basePadding}`),\r\n    finalBackground && ['primary','secondary','tertiary','success','warning','danger'].includes(finalBackground) && getStyleClass(`box--bg-${finalBackground}`),\r\n    display && getStyleClass(`box--${display}`),\r\n    position && getStyleClass(`box--${position}`),\r\n    finalRadius && ['none','sm','md','lg','xl','full'].includes(finalRadius) && getStyleClass(`box--rounded-${finalRadius}`),\r\n    shadow && ['sm','md','lg'].includes(shadow) && getStyleClass(`box--shadow-${shadow}`),\r\n    textAlign && getStyleClass(`box--text-${textAlign}`),\r\n    overflow && getStyleClass(`box--overflow-${overflow}`),\r\n    border === 'default' && getStyleClass('box--border'),\r\n    interactive && getStyleClass('box--interactive'),\r\n    hideOnMobile && getStyleClass('box--mobile-hidden'),\r\n    hideOnTablet && getStyleClass('box--tablet-hidden'),\r\n    hideOnDesktop && getStyleClass('box--desktop-hidden'),\r\n    mobileOnly && [getStyleClass('box--tablet-hidden'), getStyleClass('box--desktop-hidden')],\r\n    tabletOnly && [getStyleClass('box--mobile-hidden'), getStyleClass('box--desktop-hidden')],\r\n    desktopOnly && [getStyleClass('box--mobile-hidden'), getStyleClass('box--tablet-hidden')],\r\n    ...legacyAliases,\r\n    className\r\n  );\r\n\r\n  const styleVars: React.CSSProperties = {\r\n    ...(width !== undefined ? { ['--dyn-box-width' as any]: typeof width === 'number' ? (width === 0 ? '0' : `${width}px`) : width } : {}),\r\n    ...(height !== undefined ? { ['--dyn-box-height' as any]: typeof height === 'number' ? (height === 0 ? '0' : `${height}px`) : height } : {}),\r\n    ...(maxWidth ? { ['--dyn-box-max-width' as any]: typeof maxWidth === 'number' ? `${maxWidth}px` : maxWidth } : {}),\r\n    ...(maxHeight ? { ['--dyn-box-max-height' as any]: typeof maxHeight === 'number' ? `${maxHeight}px` : maxHeight } : {}),\r\n    ...(minWidth ? { ['--dyn-box-min-width' as any]: typeof minWidth === 'number' ? `${minWidth}px` : minWidth } : {}),\r\n    ...(minHeight ? { ['--dyn-box-min-height' as any]: typeof minHeight === 'number' ? `${minHeight}px` : minHeight } : {}),\r\n    ...(top !== undefined ? { ['--dyn-box-top' as any]: typeof top === 'number' ? `${top}px` : top } : {}),\r\n    ...(right !== undefined ? { ['--dyn-box-right' as any]: typeof right === 'number' ? `${right}px` : right } : {}),\r\n    ...(bottom !== undefined ? { ['--dyn-box-bottom' as any]: typeof bottom === 'number' ? (bottom === 0 ? '0' : `${bottom}px`) : bottom } : {}),\r\n    ...(left !== undefined ? { ['--dyn-box-left' as any]: typeof left === 'number' ? `${left}px` : left } : {}),\r\n    ...(zIndex !== undefined ? { ['--dyn-box-z-index' as any]: String(zIndex) } : {}),\r\n    ...(backgroundColor ? { ['--dyn-box-bg' as any]: backgroundColor } : {}),\r\n    ...(color ? { ['--dyn-box-color' as any]: color } : {}),\r\n    ...(finalBackground && !['primary','secondary','tertiary','success','warning','danger','surface'].includes(finalBackground as string) ? { ['--dyn-box-bg' as any]: finalBackground as any } : {}),\r\n    ...(customBorderRadius ? { ['--dyn-box-radius' as any]: customBorderRadius } : {}),\r\n    ...(finalRadius && !['none','xs','sm','md','lg','xl','full'].includes(finalRadius as string) ? { ['--dyn-box-radius' as any]: finalRadius as any } : {}),\r\n    ...(basePadding ? { ['--dyn-box-padding' as any]: isToken(basePadding) ? toTokenVar(basePadding) : basePadding } : {}),\r\n    ...(px ? { ['--dyn-box-padding-left' as any]: isToken(px) ? toTokenVar(px) : px, ['--dyn-box-padding-right' as any]: isToken(px) ? toTokenVar(px) : px } : {}),\r\n    ...(py ? { ['--dyn-box-padding-top' as any]: isToken(py) ? toTokenVar(py) : py, ['--dyn-box-padding-bottom' as any]: isToken(py) ? toTokenVar(py) : py } : {}),\r\n    ...(pt ? { ['--dyn-box-padding-top' as any]: isToken(pt) ? toTokenVar(pt) : pt } : {}),\r\n    ...(pr ? { ['--dyn-box-padding-right' as any]: isToken(pr) ? toTokenVar(pr) : pr } : {}),\r\n    ...(pb ? { ['--dyn-box-padding-bottom' as any]: isToken(pb) ? toTokenVar(pb) : pb } : {}),\r\n    ...(pl ? { ['--dyn-box-padding-left' as any]: isToken(pl) ? toTokenVar(pl) : pl } : {}),\r\n    ...(m ? { ['--dyn-box-margin' as any]: isToken(m) ? toTokenVar(m) : m } : {}),\r\n    ...(mx ? { ['--dyn-box-margin-left' as any]: mx === 'auto' ? 'auto' : (isToken(mx) ? toTokenVar(mx) : mx), ['--dyn-box-margin-right' as any]: mx === 'auto' ? 'auto' : (isToken(mx) ? toTokenVar(mx) : mx) } : {}),\r\n    ...(my ? { ['--dyn-box-margin-top' as any]: isToken(my) ? toTokenVar(my) : my, ['--dyn-box-margin-bottom' as any]: isToken(my) ? toTokenVar(my) : my } : {}),\r\n    ...(mt ? { ['--dyn-box-margin-top' as any]: isToken(mt) ? toTokenVar(mt) : mt } : {}),\r\n    ...(mr ? { ['--dyn-box-margin-right' as any]: mr === 'auto' ? 'auto' : (isToken(mr) ? toTokenVar(mr) : mr) } : {}),\r\n    ...(mb ? { ['--dyn-box-margin-bottom' as any]: mb === '0' ? '0' : (isToken(mb) ? toTokenVar(mb) : mb) } : {}),\r\n    ...(ml ? { ['--dyn-box-margin-left' as any]: ml === 'auto' ? 'auto' : (isToken(ml) ? toTokenVar(ml) : ml) } : {}),\r\n    ...(finalDirection ? { ['--dyn-box-flex-direction' as any]: finalDirection } : {}),\r\n    ...(wrap ? { ['--dyn-box-flex-wrap' as any]: wrap } : {}),\r\n    ...(justify ? { ['--dyn-box-justify-content' as any]: justify } : {}),\r\n    ...(align ? { ['--dyn-box-align-items' as any]: align } : {}),\r\n    ...(alignContent ? { ['--dyn-box-align-content' as any]: alignContent } : {}),\r\n    ...(gap ? { ['--dyn-box-gap' as any]: isToken(gap) ? toTokenVar(gap) : gap } : {}),\r\n    ...(rowGap ? { ['--dyn-box-row-gap' as any]: isToken(rowGap) ? toTokenVar(rowGap) : rowGap } : {}),\r\n    ...(columnGap ? { ['--dyn-box-column-gap' as any]: isToken(columnGap) ? toTokenVar(columnGap) : columnGap } : {}),\r\n    ...(gridTemplateColumns ? { ['--dyn-box-grid-columns' as any]: gridTemplateColumns } : {}),\r\n    ...(gridTemplateRows ? { ['--dyn-box-grid-rows' as any]: gridTemplateRows } : {}),\r\n    ...(gridTemplateAreas ? { ['--dyn-box-grid-areas' as any]: gridTemplateAreas } : {}),\r\n    ...(overflowX ? { ['--dyn-box-overflow-x' as any]: overflowX } : {}),\r\n    ...(overflowY ? { ['--dyn-box-overflow-y' as any]: overflowY } : {}),\r\n    ...(cssVars as any),\r\n    ...style,\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    if (focusOnMount && interactive) {\r\n      queueMicrotask?.(() => {\r\n        try { elementRef.current?.focus?.(); } catch {}\r\n      });\r\n    }\r\n  }, [focusOnMount, interactive]);\r\n\r\n  const liveRegionId = ariaLiveMessage ? `${internalId}-liveregion` : undefined;\r\n  const describedBy = [ariaDescribedBy, liveRegionId].filter(Boolean).join(' ') || undefined;\r\n\r\n  const onKeyDown: React.KeyboardEventHandler = (e) => {\r\n    (domProps as any).onKeyDown?.(e as any);\r\n    if (!interactive) return;\r\n    // Ensure Enter and Space both trigger clicks in tests\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      (domProps as any).onClick?.(e as any);\r\n      if (e.key === ' ') e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const element = React.createElement(\r\n    Component as any,\r\n    {\r\n      // Spread user provided DOM props first so that internal handlers like\r\n      // onKeyDown can wrap and call them. If we spread domProps last they\r\n      // would overwrite our internal handlers and break expected behaviour\r\n      // (e.g. triggering click on Enter/Space and forwarding the event to\r\n      // user's onKeyDown).\r\n      ...domProps,\r\n      ref: setRefs,\r\n      id: internalId,\r\n      role: interactive ? (role ?? 'button') : role,\r\n      className: classes,\r\n      style: styleVars,\r\n      'aria-label': ariaLabel,\r\n      'aria-describedby': describedBy,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'data-testid': dataTestId,\r\n      tabIndex: interactive ? ((domProps as any).tabIndex ?? 0) : (domProps as any).tabIndex,\r\n      onKeyDown,\r\n    } as any,\r\n    children,\r\n    ariaLiveMessage && (\r\n      <span id={liveRegionId} aria-live={ariaLivePoliteness} aria-atomic=\"true\" className=\"dyn-sr-only\">{ariaLiveMessage}</span>\r\n    )\r\n  );\r\n\r\n  return element;\r\n}\r\n\r\nconst _DynBox = forwardRef(DynBoxInner as any) as React.NamedExoticComponent<any>;\r\nexport const DynBox = _DynBox as <E extends React.ElementType = 'div'>(\r\n  props: DynBoxProps<E> & { ref?: DynBoxRef<E> }\r\n) => React.ReactElement | null;\r\n\r\n(_DynBox as React.NamedExoticComponent).displayName = 'DynBox';\r\n","import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport type {\r\n  BreadcrumbItem,\r\n  DynBreadcrumbProps,\r\n  DynBreadcrumbRef,\r\n} from './DynBreadcrumb.types';\r\nimport styles from './DynBreadcrumb.module.css';\r\n\r\ntype VisibleItem = {\r\n  item: BreadcrumbItem;\r\n  originalIndex: number;\r\n};\r\n\r\nexport const DynBreadcrumb = forwardRef<DynBreadcrumbRef, DynBreadcrumbProps>(\r\n  (\r\n    {\r\n      className,\r\n      items,\r\n      size = 'medium',\r\n      separator = 'slash',\r\n      customSeparator,\r\n      maxItems = 0,\r\n      showEllipsis = true,\r\n      navigationLabel = 'Breadcrumb',\r\n      onItemClick,\r\n      onEllipsisClick,\r\n      expanded: controlledExpanded,\r\n      linkComponent: LinkComponent = 'a',\r\n      enableStructuredData = false,\r\n      id,\r\n      children,\r\n      'data-testid': dataTestId,\r\n      'aria-label': ariaLabel,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalExpanded, setInternalExpanded] = useState(false);\r\n    const [generatedId] = useState(() => generateId('breadcrumb'));\r\n    const itemsSignature = useMemo(\r\n      () =>\r\n        items\r\n          .map(item => `${item.id ?? item.label}:${item.href ?? ''}:${item.current ? '1' : '0'}`)\r\n          .join('|'),\r\n      [items]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (controlledExpanded === undefined) {\r\n        setInternalExpanded(false);\r\n      }\r\n    }, [controlledExpanded, itemsSignature]);\r\n\r\n    const expanded = controlledExpanded ?? internalExpanded;\r\n    const navId = id ?? generatedId;\r\n    const totalItems = items.length;\r\n    const shouldCollapse = maxItems > 0 && totalItems > maxItems && !expanded;\r\n\r\n    const visibleItems = useMemo<VisibleItem[]>(() => {\r\n      if (!shouldCollapse) {\r\n        return items.map((item, originalIndex) => ({ item, originalIndex }));\r\n      }\r\n\r\n      if (items.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      const firstItem = items[0];\r\n      const lastItem = items[items.length - 1];\r\n\r\n      if (!firstItem || !lastItem) {\r\n        return [];\r\n      }\r\n\r\n      const firstEntry: VisibleItem = { item: firstItem, originalIndex: 0 };\r\n      const middleEntries = items\r\n        .slice(1, -1)\r\n        .map<VisibleItem>((item, index) => ({ item, originalIndex: index + 1 }))\r\n        .filter(({ item }) => item && item.showWhenCollapsed);\r\n      const lastEntry: VisibleItem = {\r\n        item: lastItem,\r\n        originalIndex: items.length - 1,\r\n      };\r\n\r\n      return [firstEntry, ...middleEntries, lastEntry];\r\n    }, [items, shouldCollapse]);\r\n\r\n    const hiddenItemCount = shouldCollapse ? totalItems - visibleItems.length : 0;\r\n    const hasHiddenItems = hiddenItemCount > 0;\r\n\r\n    const handleEllipsisClick = useCallback(() => {\r\n      if (controlledExpanded === undefined) {\r\n        setInternalExpanded(true);\r\n      }\r\n      onEllipsisClick?.();\r\n    }, [controlledExpanded, onEllipsisClick]);\r\n\r\n    const handleItemClick = useCallback(\r\n      (item: BreadcrumbItem) => (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        onItemClick?.(item, event);\r\n      },\r\n      [onItemClick]\r\n    );\r\n\r\n    const renderSeparator = useCallback(\r\n      (index: number) => {\r\n        if (separator === 'custom' && !customSeparator) {\r\n          return null;\r\n        }\r\n\r\n        const separatorClasses = cn(\r\n          styles.breadcrumbSeparator,\r\n          separator !== 'slash' && styles[`breadcrumbSeparator--${separator}`],\r\n          separator === 'custom' && styles['breadcrumbSeparator--custom']\r\n        );\r\n\r\n        return (\r\n          <span\r\n            key={`separator-${index}`}\r\n            className={separatorClasses}\r\n            aria-hidden=\"true\"\r\n            data-separator={separator}\r\n          >\r\n            {separator === 'custom' ? customSeparator : null}\r\n          </span>\r\n        );\r\n      },\r\n      [customSeparator, separator]\r\n    );\r\n\r\n    const renderItemContent = useCallback(\r\n      (item: BreadcrumbItem, labelProps?: React.HTMLAttributes<HTMLSpanElement>) => (\r\n        <>\r\n          {item.icon ? (\r\n            <span className={styles.breadcrumbIcon} aria-hidden=\"true\">\r\n              {item.icon}\r\n            </span>\r\n          ) : null}\r\n          <span className={styles.breadcrumbText} {...labelProps}>\r\n            {item.label}\r\n          </span>\r\n        </>\r\n      ),\r\n      []\r\n    );\r\n\r\n    const renderItem = useCallback(\r\n      (visibleItem: VisibleItem, index: number, array: VisibleItem[]) => {\r\n        const { item } = visibleItem;\r\n        const isLast = index === array.length - 1;\r\n        const isCurrent = Boolean(item.current) || (isLast && !item.href);\r\n        const isLink = Boolean(item.href) && !isCurrent;\r\n        const listItemClasses = cn(\r\n          styles.breadcrumbItem,\r\n          item.showWhenCollapsed && styles['breadcrumbItem--show']\r\n        );\r\n\r\n        const listItemProps = enableStructuredData\r\n          ? {\r\n              itemProp: 'itemListElement' as const,\r\n              itemScope: true,\r\n              itemType: 'https://schema.org/ListItem',\r\n            }\r\n          : undefined;\r\n\r\n        const itemContent = isLink ? (\r\n          <LinkComponent\r\n            href={item.href}\r\n            className={styles.breadcrumbLink}\r\n            onClick={handleItemClick(item)}\r\n            {...item.linkProps}\r\n            {...(enableStructuredData ? { itemProp: 'item' } : undefined)}\r\n          >\r\n            {enableStructuredData\r\n              ? renderItemContent(item, { itemProp: 'name' })\r\n              : renderItemContent(item)}\r\n          </LinkComponent>\r\n        ) : (\r\n          <span\r\n            className={isCurrent ? styles.breadcrumbCurrent : styles.breadcrumbStatic}\r\n            {...(isCurrent ? { 'aria-current': 'page' as const } : undefined)}\r\n            {...(enableStructuredData ? { itemProp: 'name' } : undefined)}\r\n          >\r\n            {renderItemContent(item)}\r\n          </span>\r\n        );\r\n\r\n        return (\r\n          <li\r\n            key={item.id ?? `breadcrumb-item-${visibleItem.originalIndex}`}\r\n            className={listItemClasses}\r\n            {...listItemProps}\r\n          >\r\n            {itemContent}\r\n            {enableStructuredData ? (\r\n              <meta itemProp=\"position\" content={String(index + 1)} />\r\n            ) : null}\r\n            {!isLast && renderSeparator(visibleItem.originalIndex)}\r\n          </li>\r\n        );\r\n      },\r\n      [enableStructuredData, handleItemClick, renderItemContent, renderSeparator]\r\n    );\r\n\r\n    const renderEllipsis = useCallback(() => {\r\n      if (!hasHiddenItems || !showEllipsis) {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <li\r\n            key=\"ellipsis\"\r\n            className={cn(styles.breadcrumbItem, styles['breadcrumbItem--ellipsis'])}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className={styles['breadcrumbItem--ellipsis']}\r\n              onClick={handleEllipsisClick}\r\n              aria-label={`Show ${hiddenItemCount} hidden breadcrumb items`}\r\n              aria-expanded={expanded}\r\n            >\r\n              …\r\n            </button>\r\n          </li>\r\n          {renderSeparator(-1)}\r\n        </>\r\n      );\r\n    }, [expanded, handleEllipsisClick, hasHiddenItems, hiddenItemCount, renderSeparator, showEllipsis]);\r\n\r\n    if (visibleItems.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const breadcrumbClasses = cn(\r\n      styles.breadcrumb,\r\n      styles[`breadcrumb--${size}`],\r\n      shouldCollapse && showEllipsis && styles['breadcrumb--collapsed'],\r\n      className\r\n    );\r\n\r\n    const navStructuredDataProps = enableStructuredData\r\n      ? {\r\n          itemScope: true,\r\n          itemType: 'https://schema.org/BreadcrumbList',\r\n        }\r\n      : undefined;\r\n\r\n    return (\r\n      <nav\r\n        ref={ref}\r\n        id={navId}\r\n        className={breadcrumbClasses}\r\n        aria-label={ariaLabel ?? navigationLabel}\r\n        data-testid={dataTestId}\r\n        {...navStructuredDataProps}\r\n        {...rest}\r\n      >\r\n        <ol className={styles.breadcrumbList}>\r\n          {visibleItems[0] && renderItem(visibleItems[0], 0, visibleItems)}\r\n          {visibleItems.length > 1 ? (\r\n            <>\r\n              {renderEllipsis()}\r\n              {visibleItems.slice(1).map((visibleItem, index) =>\r\n                renderItem(visibleItem, index + 1, visibleItems)\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </ol>\r\n        {children}\r\n      </nav>\r\n    );\r\n  }\r\n);\r\n\r\nDynBreadcrumb.displayName = 'DynBreadcrumb';\r\n\r\nexport default DynBreadcrumb;\r\n","import type { BaseComponentProps } from '../../types';\r\n\r\nexport interface ChartDataPoint {\r\n  label?: string;\r\n  value: number;\r\n  color?: string;\r\n}\r\n\r\nexport interface ChartSeries {\r\n  name: string;\r\n  data: ChartDataPoint[];\r\n  color?: string;\r\n}\r\n\r\nexport interface ChartAxis {\r\n  title?: string;\r\n  min?: number;\r\n  max?: number;\r\n  showLabels?: boolean;\r\n}\r\n\r\nexport type ChartType = 'line' | 'bar' | 'pie' | 'area';\r\n\r\nexport type DynChartData = ChartDataPoint[] | ChartSeries[];\r\n\r\nexport interface DynChartOptions {\r\n  showLegend?: boolean;\r\n  showTooltip?: boolean;\r\n  showGrid?: boolean;\r\n}\r\n\r\nexport interface DynChartProps extends BaseComponentProps, DynChartOptions {\r\n  /** Chart type */\r\n  type?: ChartType;\r\n\r\n  /** Chart data - can be array of data points or series */\r\n  data?: DynChartData;\r\n\r\n  /** Chart title */\r\n  title?: string;\r\n\r\n  /** Chart subtitle */\r\n  subtitle?: string;\r\n\r\n  /** Chart width in pixels */\r\n  width?: number;\r\n\r\n  /** Chart height in pixels */\r\n  height?: number;\r\n\r\n  /** Color palette for chart elements */\r\n  colors?: string[];\r\n\r\n  /** X axis configuration */\r\n  xAxis?: ChartAxis;\r\n\r\n  /** Y axis configuration */\r\n  yAxis?: ChartAxis;\r\n\r\n  /** Accessible description for assistive technologies */\r\n  ariaDescription?: string;\r\n}\r\n\r\nexport interface NormalizedChartSeries extends ChartSeries {\r\n  color: string;\r\n}\r\n\r\nexport interface DynChartLegendItem {\r\n  id: string;\r\n  label: string;\r\n  color: string;\r\n  seriesIndex: number;\r\n}\r\n\r\nexport type DynChartDefaultProps = Required<\r\n  Pick<\r\n    DynChartProps,\r\n    'type' | 'data' | 'width' | 'height' | 'colors' | 'showLegend' | 'showTooltip' | 'showGrid'\r\n  >\r\n>;\r\n\r\nexport const DYN_CHART_DEFAULT_PROPS: DynChartDefaultProps = {\r\n  type: 'line',\r\n  data: [],\r\n  width: 400,\r\n  height: 300,\r\n  colors: ['#0066cc', '#00b248', '#f44336', '#ff9800', '#9c27b0'],\r\n  showLegend: true,\r\n  showTooltip: true,\r\n  showGrid: true,\r\n};\r\n\r\nexport type DynChartType = DynChartProps;\r\n","import type {\r\n  ChartAxis,\r\n  ChartDataPoint,\r\n  ChartSeries,\r\n  DynChartData,\r\n  DynChartLegendItem,\r\n  NormalizedChartSeries,\r\n} from './DynChart.types';\r\n\r\nexport interface ChartDimensions {\r\n  padding: { top: number; right: number; bottom: number; left: number };\r\n  chartWidth: number;\r\n  chartHeight: number;\r\n  totalWidth: number;\r\n  totalHeight: number;\r\n}\r\n\r\nexport interface DataRanges {\r\n  minX: number;\r\n  maxX: number;\r\n  minY: number;\r\n  maxY: number;\r\n}\r\n\r\nconst DEFAULT_PADDING = { top: 20, right: 20, bottom: 60, left: 60 } as const;\r\n\r\nconst FALLBACK_COLORS = ['#0066cc', '#00b248', '#f44336', '#ff9800', '#9c27b0'];\r\n\r\nexport const EMPTY_DATA_RANGES: DataRanges = {\r\n  minX: 0,\r\n  maxX: 0,\r\n  minY: 0,\r\n  maxY: 1,\r\n};\r\n\r\nexport function isSeriesCollection(data?: DynChartData): data is ChartSeries[] {\r\n  return Array.isArray(data) && data.length > 0 && typeof data[0] === 'object' && 'name' in (data[0] as ChartSeries);\r\n}\r\n\r\nexport function normalizeSeries(\r\n  data: DynChartData | undefined,\r\n  palette: string[] = FALLBACK_COLORS\r\n): NormalizedChartSeries[] {\r\n  if (!data || data.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  if (isSeriesCollection(data)) {\r\n    return data.map((series, index) => ({\r\n      ...series,\r\n      color: series.color ?? palette[index % palette.length] ?? FALLBACK_COLORS[index % FALLBACK_COLORS.length],\r\n    } as NormalizedChartSeries));\r\n  }\r\n\r\n  const fallbackColor = palette[0] ?? FALLBACK_COLORS[0];\r\n\r\n  return [\r\n    {\r\n      name: 'Series 1',\r\n      data: data as ChartDataPoint[],\r\n      color: fallbackColor!,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function calculateChartDimensions(width: number, height: number): ChartDimensions {\r\n  const chartWidth = Math.max(0, width - (DEFAULT_PADDING.left + DEFAULT_PADDING.right));\r\n  const chartHeight = Math.max(0, height - (DEFAULT_PADDING.top + DEFAULT_PADDING.bottom));\r\n\r\n  return {\r\n    padding: { ...DEFAULT_PADDING },\r\n    chartWidth,\r\n    chartHeight,\r\n    totalWidth: width,\r\n    totalHeight: height,\r\n  };\r\n}\r\n\r\nexport function calculateDataRanges(\r\n  seriesCollection: NormalizedChartSeries[],\r\n  axis?: ChartAxis\r\n): DataRanges {\r\n  if (seriesCollection.length === 0) {\r\n    if (axis?.min !== undefined && axis?.max !== undefined) {\r\n      return { minX: 0, maxX: 0, minY: axis.min, maxY: axis.max };\r\n    }\r\n\r\n    return EMPTY_DATA_RANGES;\r\n  }\r\n\r\n  let minY = axis?.min ?? Number.POSITIVE_INFINITY;\r\n  let maxY = axis?.max ?? Number.NEGATIVE_INFINITY;\r\n  let maxX = 0;\r\n\r\n  seriesCollection.forEach(series => {\r\n    series.data.forEach((point, index) => {\r\n      maxX = Math.max(maxX, index);\r\n\r\n      if (axis?.min === undefined) {\r\n        minY = Math.min(minY, point.value);\r\n      }\r\n\r\n      if (axis?.max === undefined) {\r\n        maxY = Math.max(maxY, point.value);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (!Number.isFinite(minY) || !Number.isFinite(maxY)) {\r\n    return { ...EMPTY_DATA_RANGES, maxX };\r\n  }\r\n\r\n  if (axis?.min === undefined) {\r\n    minY = Math.min(minY, 0);\r\n  }\r\n\r\n  if (axis?.max === undefined) {\r\n    maxY = maxY === minY ? minY + 1 : maxY;\r\n  }\r\n\r\n  return {\r\n    minX: 0,\r\n    maxX,\r\n    minY,\r\n    maxY,\r\n  };\r\n}\r\n\r\nexport function buildLegendItems(seriesCollection: NormalizedChartSeries[]): DynChartLegendItem[] {\r\n  return seriesCollection.map((series, index) => ({\r\n    id: `${series.name}-${index}`,\r\n    label: series.name,\r\n    color: series.color,\r\n    seriesIndex: index,\r\n  }));\r\n}\r\n\r\nexport function getEmptyStateMessage(seriesCollection: NormalizedChartSeries[]): string {\r\n  if (seriesCollection.length === 0) {\r\n    return 'No chart data available';\r\n  }\r\n\r\n  const totalValues = seriesCollection.reduce((total, series) => {\r\n    return total + series.data.reduce((sum, point) => sum + Math.abs(point.value), 0);\r\n  }, 0);\r\n\r\n  return totalValues === 0 ? 'Chart data contains no measurable values' : '';\r\n}\r\n","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { MouseEvent } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { DYN_CHART_DEFAULT_PROPS, DynChartProps } from './DynChart.types';\r\nimport {\r\n  buildLegendItems,\r\n  calculateChartDimensions,\r\n  calculateDataRanges,\r\n  getEmptyStateMessage,\r\n  normalizeSeries,\r\n} from './DynChart.utils';\r\nimport styles from './DynChart.module.css';\r\n\r\ntype TooltipTarget =\r\n  | {\r\n      kind: 'point';\r\n      x: number;\r\n      y: number;\r\n      radius: number;\r\n      value: number;\r\n      label?: string;\r\n      series: string;\r\n      color: string;\r\n    }\r\n  | {\r\n      kind: 'bar';\r\n      x: number;\r\n      y: number;\r\n      width: number;\r\n      height: number;\r\n      value: number;\r\n      label?: string;\r\n      series: string;\r\n      color: string;\r\n    }\r\n  | {\r\n      kind: 'slice';\r\n      startAngle: number;\r\n      endAngle: number;\r\n      centerX: number;\r\n      centerY: number;\r\n      radius: number;\r\n      value: number;\r\n      label?: string;\r\n      series: string;\r\n      color: string;\r\n      percentage: number;\r\n    };\r\n\r\ninterface TooltipState {\r\n  visible: boolean;\r\n  x: number;\r\n  y: number;\r\n  value: number;\r\n  label?: string;\r\n  series?: string;\r\n  color?: string;\r\n  percentage?: number;\r\n}\r\n\r\nconst normalizeAngle = (angle: number) => {\r\n  const twoPi = Math.PI * 2;\r\n  const normalized = angle % twoPi;\r\n  return normalized >= 0 ? normalized : normalized + twoPi;\r\n};\r\n\r\n// const createTooltipState = (\r\n//   target: TooltipTarget,\r\n//   offsetX: number,\r\n//   offsetY: number\r\n// ): TooltipState => {\r\n//   const nextState: TooltipState = {\r\n//     visible: true,\r\n//     x: offsetX + 12,\r\n//     y: offsetY - 12,\r\n//     value: target.value,\r\n//   };\r\n\r\n//   if (typeof target.series === 'string' && target.series.length > 0) {\r\n//     nextState.series = target.series;\r\n//   }\r\n\r\n//   if (typeof target.color === 'string' && target.color.length > 0) {\r\n//     nextState.color = target.color;\r\n//   }\r\n\r\n//   if (typeof target.label === 'string' && target.label.length > 0) {\r\n//     nextState.label = target.label;\r\n//   }\r\n\r\n//   if (target.kind === 'slice') {\r\n//     nextState.percentage = target.percentage;\r\n//   }\r\n\r\n//   return nextState;\r\n// };\r\n\r\nconst typeClassNameMap: Record<'line' | 'bar' | 'pie' | 'area', string | undefined> = {\r\n  line: styles.typeLine,\r\n  bar: styles.typeBar,\r\n  pie: styles.typePie,\r\n  area: styles.typeArea,\r\n};\r\n\r\nconst DynChart = forwardRef<HTMLDivElement, DynChartProps>((props, ref) => {\r\n  const {\r\n    type = DYN_CHART_DEFAULT_PROPS.type,\r\n    data = DYN_CHART_DEFAULT_PROPS.data,\r\n    title,\r\n    subtitle,\r\n    width = DYN_CHART_DEFAULT_PROPS.width,\r\n    height = DYN_CHART_DEFAULT_PROPS.height,\r\n    colors = DYN_CHART_DEFAULT_PROPS.colors,\r\n    showLegend = DYN_CHART_DEFAULT_PROPS.showLegend,\r\n    showTooltip = DYN_CHART_DEFAULT_PROPS.showTooltip,\r\n    showGrid = DYN_CHART_DEFAULT_PROPS.showGrid,\r\n    xAxis,\r\n    yAxis,\r\n    ariaDescription,\r\n    className,\r\n    id,\r\n    children,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const tooltipTargetsRef = useRef<TooltipTarget[]>([]);\r\n  const [tooltipState, setTooltipState] = useState<TooltipState>({\r\n    visible: false,\r\n    x: 0,\r\n    y: 0,\r\n    value: 0,\r\n  });\r\n\r\n  const instanceId = useId();\r\n  const titleId = title ? `${id ?? instanceId}-title` : undefined;\r\n  const subtitleId = subtitle ? `${id ?? instanceId}-subtitle` : undefined;\r\n  const descriptionId = ariaDescription ? `${id ?? instanceId}-description` : undefined;\r\n\r\n  const normalizedData = useMemo(\r\n    () => normalizeSeries(data, colors),\r\n    [data, colors]\r\n  );\r\n\r\n  const chartDimensions = useMemo(\r\n    () => calculateChartDimensions(width, height),\r\n    [width, height]\r\n  );\r\n\r\n  const dataRanges = useMemo(\r\n    () => calculateDataRanges(normalizedData, yAxis),\r\n    [normalizedData, yAxis]\r\n  );\r\n\r\n  const legendItems = useMemo(\r\n    () => buildLegendItems(normalizedData),\r\n    [normalizedData]\r\n  );\r\n\r\n  const emptyStateMessage = useMemo(\r\n    () => getEmptyStateMessage(normalizedData),\r\n    [normalizedData]\r\n  );\r\n\r\n  const hideTooltip = useCallback(() => {\r\n    setTooltipState(prev => (prev.visible ? { ...prev, visible: false } : prev));\r\n  }, []);\r\n\r\n  const findTooltipTarget = useCallback((x: number, y: number) => {\r\n    for (const target of tooltipTargetsRef.current) {\r\n      if (target.kind === 'point') {\r\n        const distance = Math.hypot(x - target.x, y - target.y);\r\n        if (distance <= target.radius + 6) {\r\n          return target;\r\n        }\r\n      } else if (target.kind === 'bar') {\r\n        if (\r\n          x >= target.x &&\r\n          x <= target.x + target.width &&\r\n          y >= target.y &&\r\n          y <= target.y + target.height\r\n        ) {\r\n          return target;\r\n        }\r\n      } else if (target.kind === 'slice') {\r\n        const dx = x - target.centerX;\r\n        const dy = y - target.centerY;\r\n        const distance = Math.hypot(dx, dy);\r\n\r\n        if (distance > target.radius) {\r\n          continue;\r\n        }\r\n\r\n        const angle = normalizeAngle(Math.atan2(dy, dx));\r\n        const start = normalizeAngle(target.startAngle);\r\n        const end = normalizeAngle(target.endAngle);\r\n\r\n        if (end < start) {\r\n          if (angle >= start || angle <= end) {\r\n            return target;\r\n          }\r\n        } else if (angle >= start && angle <= end) {\r\n          return target;\r\n        }\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event: MouseEvent<HTMLCanvasElement>) => {\r\n      if (!showTooltip) {\r\n        return;\r\n      }\r\n\r\n      const { offsetX, offsetY } = event.nativeEvent;\r\n      const target = findTooltipTarget(offsetX, offsetY);\r\n\r\n      if (!target) {\r\n        hideTooltip();\r\n        return;\r\n      }\r\n\r\n      setTooltipState(prev => {\r\n        const nextState: TooltipState = {\r\n          visible: true,\r\n          x: offsetX + 12,\r\n          y: offsetY - 12,\r\n          value: target.value,\r\n          series: target.series,\r\n          color: target.color,\r\n        };\r\n        if (target.kind === 'slice') {\r\n          nextState.percentage = target.percentage;\r\n        }\r\n\r\n        if (typeof target.label === 'string' && target.label.length > 0) {\r\n          nextState.label = target.label;\r\n        }\r\n\r\n        if (\r\n          prev.visible &&\r\n          prev.x === nextState.x &&\r\n          prev.y === nextState.y &&\r\n          prev.value === nextState.value &&\r\n          prev.label === nextState.label &&\r\n          prev.series === nextState.series &&\r\n          prev.color === nextState.color &&\r\n          prev.percentage === nextState.percentage\r\n        ) {\r\n          return prev;\r\n        }\r\n\r\n        return nextState;\r\n      });\r\n    },\r\n    [findTooltipTarget, hideTooltip, showTooltip]\r\n  );\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    if (!showTooltip) {\r\n      return;\r\n    }\r\n\r\n    hideTooltip();\r\n  }, [hideTooltip, showTooltip]);\r\n\r\n  useEffect(() => {\r\n    if (!showTooltip) {\r\n      hideTooltip();\r\n    }\r\n  }, [hideTooltip, showTooltip]);\r\n\r\n  useEffect(() => () => hideTooltip(), [hideTooltip]);\r\n\r\n  const drawGrid = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      if (!showGrid || type === 'pie') return;\r\n\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n\r\n      ctx.save();\r\n      ctx.strokeStyle = '#e0e0e0';\r\n      ctx.lineWidth = 1;\r\n      ctx.setLineDash([2, 2]);\r\n\r\n      for (let i = 0; i <= 5; i++) {\r\n        const y = padding.top + (chartHeight / 5) * i;\r\n        ctx.beginPath();\r\n        ctx.moveTo(padding.left, y);\r\n        ctx.lineTo(padding.left + chartWidth, y);\r\n        ctx.stroke();\r\n      }\r\n\r\n      const maxDataPoints = normalizedData.length\r\n        ? Math.max(...normalizedData.map(series => series.data.length))\r\n        : 0;\r\n\r\n      if (maxDataPoints > 1) {\r\n        const stepCount = Math.min(maxDataPoints - 1, 10);\r\n        for (let i = 0; i <= stepCount; i++) {\r\n          const x = padding.left + (chartWidth / stepCount) * i;\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, padding.top);\r\n          ctx.lineTo(x, padding.top + chartHeight);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      ctx.restore();\r\n    },\r\n    [chartDimensions, normalizedData, showGrid, type]\r\n  );\r\n\r\n  const drawAxes = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      if (type === 'pie') return;\r\n\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n\r\n      ctx.save();\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth = 2;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding.left, padding.top + chartHeight);\r\n      ctx.lineTo(padding.left + chartWidth, padding.top + chartHeight);\r\n      ctx.stroke();\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding.left, padding.top);\r\n      ctx.lineTo(padding.left, padding.top + chartHeight);\r\n      ctx.stroke();\r\n\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'center';\r\n\r\n      if (xAxis?.title) {\r\n        ctx.fillText(xAxis.title, padding.left + chartWidth / 2, chartDimensions.totalHeight - 10);\r\n      }\r\n\r\n      if (yAxis?.title) {\r\n        ctx.save();\r\n        ctx.translate(15, padding.top + chartHeight / 2);\r\n        ctx.rotate(-Math.PI / 2);\r\n        ctx.fillText(yAxis.title, 0, 0);\r\n        ctx.restore();\r\n      }\r\n\r\n      ctx.textAlign = 'right';\r\n      for (let i = 0; i <= 5; i++) {\r\n        const value = dataRanges.minY + ((dataRanges.maxY - dataRanges.minY) / 5) * (5 - i);\r\n        const y = padding.top + (chartHeight / 5) * i;\r\n        ctx.fillText(value.toFixed(1), padding.left - 10, y + 5);\r\n      }\r\n\r\n      ctx.restore();\r\n    },\r\n    [chartDimensions, dataRanges, type, xAxis?.title, yAxis?.title]\r\n  );\r\n\r\n  const drawLineOrAreaChart = useCallback(\r\n    (ctx: CanvasRenderingContext2D, variant: 'line' | 'area') => {\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n      const yRange = Math.max(dataRanges.maxY - dataRanges.minY || 0, 1);\r\n\r\n      normalizedData.forEach((series, seriesIndex) => {\r\n        const color = series.color || colors[seriesIndex % colors.length] || '#0066cc';\r\n\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.lineWidth = 3;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineJoin = 'round';\r\n\r\n        if (series.data.length === 0) return;\r\n\r\n        ctx.beginPath();\r\n\r\n        series.data.forEach((point, index) => {\r\n          const x = padding.left + (chartWidth / Math.max(series.data.length - 1, 1)) * index;\r\n          const y =\r\n            padding.top +\r\n            chartHeight -\r\n            ((point.value - dataRanges.minY) / yRange) * chartHeight;\r\n\r\n          if (index === 0) {\r\n            ctx.moveTo(x, y);\r\n          } else {\r\n            ctx.lineTo(x, y);\r\n          }\r\n        });\r\n\r\n        if (variant === 'area') {\r\n          const lastX =\r\n            padding.left +\r\n            (chartWidth / Math.max(series.data.length - 1, 1)) * (series.data.length - 1);\r\n          const firstX = padding.left;\r\n          const baseY = padding.top + chartHeight;\r\n\r\n          ctx.lineTo(lastX, baseY);\r\n          ctx.lineTo(firstX, baseY);\r\n          ctx.closePath();\r\n          ctx.globalAlpha = 0.15;\r\n          ctx.fill();\r\n          ctx.globalAlpha = 1;\r\n        }\r\n\r\n        ctx.stroke();\r\n\r\n        series.data.forEach((point, index) => {\r\n          const x = padding.left + (chartWidth / Math.max(series.data.length - 1, 1)) * index;\r\n          const y =\r\n            padding.top +\r\n            chartHeight -\r\n            ((point.value - dataRanges.minY) / yRange) * chartHeight;\r\n\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n\r\n          if (showTooltip) {\r\n            tooltipTargetsRef.current.push({\r\n              kind: 'point',\r\n              x,\r\n              y,\r\n              radius: 6,\r\n              value: point.value,\r\n              label: point.label ?? `Point ${index + 1}`,\r\n              series: series.name,\r\n              color,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n    [chartDimensions, colors, dataRanges, normalizedData, showTooltip]\r\n  );\r\n\r\n  const drawBarChart = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n      const yRange = Math.max(dataRanges.maxY - dataRanges.minY || 0, 1);\r\n\r\n      if (!normalizedData.length) return;\r\n\r\n      const maxDataPoints = normalizedData[0]?.data.length || 0;\r\n      if (maxDataPoints === 0) return;\r\n\r\n      const groupWidth = chartWidth / maxDataPoints;\r\n      const barWidth = groupWidth * 0.8;\r\n      const barSpacing = groupWidth * 0.2;\r\n\r\n      normalizedData.forEach((series, seriesIndex) => {\r\n        const color = series.color || colors[seriesIndex % colors.length] || '#0066cc';\r\n        ctx.fillStyle = color;\r\n\r\n        series.data.forEach((point, index) => {\r\n          const x =\r\n            padding.left +\r\n            groupWidth * index +\r\n            barSpacing / 2 +\r\n            (barWidth / normalizedData.length) * seriesIndex;\r\n          const individualWidth = barWidth / Math.max(normalizedData.length, 1);\r\n          const barHeight = ((point.value - dataRanges.minY) / yRange) * chartHeight;\r\n          const y = padding.top + chartHeight - barHeight;\r\n\r\n          ctx.fillRect(x, y, individualWidth, barHeight);\r\n\r\n          if (showTooltip) {\r\n            tooltipTargetsRef.current.push({\r\n              kind: 'bar',\r\n              x,\r\n              y,\r\n              width: individualWidth,\r\n              height: barHeight,\r\n              value: point.value,\r\n              label: point.label ?? `Category ${index + 1}`,\r\n              series: series.name,\r\n              color,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n    [chartDimensions, colors, dataRanges, normalizedData, showTooltip]\r\n  );\r\n\r\n  const drawPieChart = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      const { chartWidth, chartHeight } = chartDimensions;\r\n      const centerX = width / 2;\r\n      const centerY = height / 2;\r\n      const radius = Math.min(chartWidth, chartHeight) / 3;\r\n\r\n      if (!normalizedData.length) return;\r\n\r\n      const series = normalizedData[0];\r\n      const dataPoints = series?.data ?? [];\r\n      const total = dataPoints.reduce((sum, point) => sum + point.value, 0);\r\n\r\n      if (total === 0) return;\r\n\r\n      let currentAngle = -Math.PI / 2;\r\n\r\n      dataPoints.forEach((point, index) => {\r\n        const sliceAngle = (point.value / total) * 2 * Math.PI;\r\n        const color = point.color || colors[index % colors.length] || '#0066cc';\r\n        const nextAngle = currentAngle + sliceAngle;\r\n        const percentage = total ? (point.value / total) * 100 : 0;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(centerX, centerY);\r\n        ctx.arc(centerX, centerY, radius, currentAngle, nextAngle);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if (point.value / total > 0.05) {\r\n          const labelAngle = currentAngle + sliceAngle / 2;\r\n          const labelX = centerX + Math.cos(labelAngle) * (radius * 0.7);\r\n          const labelY = centerY + Math.sin(labelAngle) * (radius * 0.7);\r\n\r\n          ctx.fillStyle = '#fff';\r\n          ctx.font = '12px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.fillText(`${percentage.toFixed(1)}%`, labelX, labelY);\r\n        }\r\n\r\n        if (showTooltip) {\r\n          tooltipTargetsRef.current.push({\r\n            kind: 'slice',\r\n            startAngle: currentAngle,\r\n            endAngle: nextAngle,\r\n            centerX,\r\n            centerY,\r\n            radius,\r\n            value: point.value,\r\n            label: point.label ?? '',\r\n            series: series?.name ?? 'Series 1',\r\n            color,\r\n            percentage,\r\n          });\r\n        }\r\n\r\n        currentAngle = nextAngle;\r\n      });\r\n    },\r\n    [chartDimensions, colors, height, normalizedData, showTooltip, width]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    canvas.width = chartDimensions.totalWidth;\r\n    canvas.height = chartDimensions.totalHeight;\r\n\r\n    tooltipTargetsRef.current = [];\r\n    hideTooltip();\r\n\r\n    context.clearRect(0, 0, chartDimensions.totalWidth, chartDimensions.totalHeight);\r\n\r\n    if (!normalizedData.length) {\r\n      return;\r\n    }\r\n\r\n    drawGrid(context);\r\n    drawAxes(context);\r\n\r\n    switch (type) {\r\n      case 'line':\r\n        drawLineOrAreaChart(context, 'line');\r\n        break;\r\n      case 'area':\r\n        drawLineOrAreaChart(context, 'area');\r\n        break;\r\n      case 'bar':\r\n        drawBarChart(context);\r\n        break;\r\n      case 'pie':\r\n        drawPieChart(context);\r\n        break;\r\n      default:\r\n        drawLineOrAreaChart(context, 'line');\r\n    }\r\n  }, [\r\n    chartDimensions,\r\n    drawAxes,\r\n    drawBarChart,\r\n    drawGrid,\r\n    drawLineOrAreaChart,\r\n    drawPieChart,\r\n    hideTooltip,\r\n    normalizedData,\r\n    type,\r\n  ]);\r\n\r\n  const canvasAriaLabel = title ?? 'Chart visualization';\r\n  const describedBy = [subtitle ? subtitleId : undefined, ariaDescription ? descriptionId : undefined]\r\n    .filter(Boolean)\r\n    .join(' ');\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      ref={ref}\r\n      id={id}\r\n      data-testid={dataTestId}\r\n      className={cn(styles.root, typeClassNameMap[type], className)}\r\n    >\r\n      <figure className={styles.figure} aria-labelledby={titleId} aria-describedby={describedBy || undefined}>\r\n        {(title || subtitle) && (\r\n          <header className={styles.header}>\r\n            {title && (\r\n              <h3 id={titleId} className={styles.title}>\r\n                {title}\r\n              </h3>\r\n            )}\r\n            {subtitle && (\r\n              <p id={subtitleId} className={styles.subtitle}>\r\n                {subtitle}\r\n              </p>\r\n            )}\r\n          </header>\r\n        )}\r\n\r\n        <div className={styles.content}>\r\n          <canvas\r\n            ref={canvasRef}\r\n            className={styles.canvas}\r\n            role=\"img\"\r\n            aria-label={canvasAriaLabel}\r\n            aria-describedby={describedBy || undefined}\r\n            width={chartDimensions.totalWidth}\r\n            height={chartDimensions.totalHeight}\r\n            style={{ width, height }}\r\n            onMouseMove={showTooltip ? handleMouseMove : undefined}\r\n            onMouseLeave={showTooltip ? handleMouseLeave : undefined}\r\n          />\r\n\r\n          {showTooltip && (\r\n            <div\r\n              className={styles.tooltip}\r\n              data-visible={tooltipState.visible}\r\n              aria-hidden={!tooltipState.visible}\r\n              style={{\r\n                left: `${tooltipState.x}px`,\r\n                top: `${tooltipState.y}px`,\r\n              }}\r\n            >\r\n              {(tooltipState.series || tooltipState.color || typeof tooltipState.percentage === 'number') && (\r\n                <div className={styles.tooltipHeader}>\r\n                  {tooltipState.color && (\r\n                    <span\r\n                      className={styles.tooltipColor}\r\n                      style={{ backgroundColor: tooltipState.color }}\r\n                    />\r\n                  )}\r\n                  {tooltipState.series && (\r\n                    <span className={styles.tooltipSeries}>{tooltipState.series}</span>\r\n                  )}\r\n                  {typeof tooltipState.percentage === 'number' && (\r\n                    <span className={styles.tooltipPercentage}>\r\n                      {tooltipState.percentage.toFixed(1)}%\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className={styles.tooltipValue}>{tooltipState.value}</div>\r\n              {tooltipState.label && <div className={styles.tooltipLabel}>{tooltipState.label}</div>}\r\n            </div>\r\n          )}\r\n\r\n          {emptyStateMessage && (\r\n            <p className={styles.emptyState} role=\"status\">\r\n              {emptyStateMessage}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {showLegend && legendItems.length > 0 && (\r\n          <div className={styles.legend} role=\"list\">\r\n            {legendItems.map(item => (\r\n              <div key={item.id} className={styles.legendItem} role=\"listitem\">\r\n                <span\r\n                  className={styles.legendColor}\r\n                  style={{ backgroundColor: normalizedData[item.seriesIndex]?.color }}\r\n                />\r\n                <span className={styles.legendLabel}>{item.label}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {children}\r\n\r\n        {ariaDescription && (\r\n          <figcaption id={descriptionId} className={styles.visuallyHidden}>\r\n            {ariaDescription}\r\n          </figcaption>\r\n        )}\r\n      </figure>\r\n    </div>\r\n  );\r\n});\r\n\r\nDynChart.displayName = 'DynChart';\r\n\r\nexport { DynChart };\r\nexport default DynChart;\r\n","import type { HTMLAttributes, ReactNode } from 'react';\r\nimport type { BaseComponentProps } from '../../types';\r\n\r\nexport interface DynFieldContainerOwnProps {\r\n  /** Form field element that should be wrapped */\r\n  children: ReactNode;\r\n  /** Optional label to display above the field */\r\n  label?: string;\r\n  /** Indicates the field is required */\r\n  required?: boolean;\r\n  /** Indicates the field is optional */\r\n  optional?: boolean;\r\n  /** Informational helper text displayed below the field */\r\n  helpText?: string;\r\n  /** Error message displayed below the field */\r\n  errorText?: string;\r\n  /** Controls whether validation messages are shown */\r\n  showValidation?: boolean;\r\n  /** Id of the input element for the label association */\r\n  htmlFor?: string;\r\n}\r\n\r\nexport type DynFieldContainerProps = Omit<BaseComponentProps, 'children'> &\r\n  DynFieldContainerOwnProps &\r\n  Omit<HTMLAttributes<HTMLDivElement>, 'children'>;\r\n\r\nexport interface DynFieldContainerDefaultProps {\r\n  showValidation: boolean;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_FIELD_CONTAINER_DEFAULT_PROPS: DynFieldContainerDefaultProps = {\r\n  showValidation: true,\r\n  'data-testid': 'dyn-field-container',\r\n};\r\n","import { forwardRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_FIELD_CONTAINER_DEFAULT_PROPS,\r\n  type DynFieldContainerProps,\r\n} from './DynFieldContainer.types';\r\nimport styles from './DynFieldContainer.module.css';\r\n\r\nexport const DynFieldContainer = forwardRef<HTMLDivElement, DynFieldContainerProps>(\r\n  (props, ref) => {\r\n    const {\r\n      children,\r\n      label,\r\n      required = false,\r\n      optional = false,\r\n      helpText,\r\n      errorText,\r\n      showValidation = DYN_FIELD_CONTAINER_DEFAULT_PROPS.showValidation,\r\n      className,\r\n      htmlFor,\r\n      id,\r\n      'data-testid': dataTestIdProp,\r\n      ...rest\r\n    } = props;\r\n\r\n    const dataTestId =\r\n      dataTestIdProp ?? DYN_FIELD_CONTAINER_DEFAULT_PROPS['data-testid'];\r\n\r\n    const containerClasses = cn(\r\n      styles.container,\r\n      errorText && styles.containerError,\r\n      required && styles.containerRequired,\r\n      optional && styles.containerOptional,\r\n      className\r\n    );\r\n\r\n    const errorId = htmlFor ? `${htmlFor}-error` : undefined;\r\n    const helpId = htmlFor ? `${htmlFor}-help` : undefined;\r\n    const labelId = label && htmlFor ? `${htmlFor}-label` : undefined;\r\n\r\n    return (\r\n      <div\r\n        {...rest}\r\n        ref={ref}\r\n        id={id}\r\n        className={containerClasses}\r\n        data-testid={dataTestId}\r\n      >\r\n        {label && (\r\n          <label\r\n            className={styles.label}\r\n            htmlFor={htmlFor}\r\n            id={labelId}\r\n          >\r\n            {label}\r\n            {required && (\r\n              <span className={styles.required} aria-label=\"obrigatório\">\r\n                *\r\n              </span>\r\n            )}\r\n            {optional && (\r\n              <span className={styles.optional} aria-label=\"opcional\">\r\n                (opcional)\r\n              </span>\r\n            )}\r\n          </label>\r\n        )}\r\n\r\n        {children}\r\n\r\n        {showValidation && (helpText || errorText) && (\r\n          <div className={styles.feedback}>\r\n            {errorText ? (\r\n              <div\r\n                className={styles.error}\r\n                id={errorId}\r\n                role=\"alert\"\r\n                aria-live=\"polite\"\r\n              >\r\n                {errorText}\r\n              </div>\r\n            ) : helpText ? (\r\n              <div className={styles.help} id={helpId}>\r\n                {helpText}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynFieldContainer.displayName = 'DynFieldContainer';\r\n\r\nexport default DynFieldContainer;\r\n","/**\r\n * Validation hook for DYN UI form components\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport type { ValidationRule } from '../types/field.types';\r\n\r\ninterface UseFieldValidationOptions {\r\n  value: any;\r\n  required?: boolean;\r\n  validation?: ValidationRule[];\r\n  customError?: string;\r\n}\r\n\r\nexport const useDynFieldValidation = ({\r\n  value,\r\n  required,\r\n  validation,\r\n  customError\r\n}: UseFieldValidationOptions) => {\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const validate = useCallback(async (): Promise<boolean> => {\r\n    // Clear previous error\r\n    setError('');\r\n\r\n    // Custom error takes precedence\r\n    if (customError) {\r\n      setError(customError);\r\n      return false;\r\n    }\r\n\r\n    // Required validation\r\n    if (required) {\r\n      if (\r\n        value === undefined ||\r\n        value === null ||\r\n        value === '' ||\r\n        (Array.isArray(value) && value.length === 0)\r\n      ) {\r\n        setError('Este campo é obrigatório');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Custom validation rules\r\n    if (validation && value !== undefined && value !== null && value !== '') {\r\n      for (const rule of validation) {\r\n        let isValid = true;\r\n        let errorMessage = rule.message;\r\n\r\n        switch (rule.type) {\r\n          case 'minLength':\r\n            if (typeof rule.value === 'number' && String(value).length < rule.value) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'maxLength':\r\n            if (typeof rule.value === 'number' && String(value).length > rule.value) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'email':\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(String(value))) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'url':\r\n            try {\r\n              new URL(String(value));\r\n            } catch {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'pattern':\r\n            const regex = typeof rule.value === 'string' ? new RegExp(rule.value) : rule.value;\r\n            if (regex && !regex.test(String(value))) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'custom':\r\n            if (rule.validator) {\r\n              try {\r\n                const result = await rule.validator(value);\r\n                isValid = result;\r\n              } catch (error) {\r\n                isValid = false;\r\n                errorMessage = error instanceof Error ? error.message : rule.message;\r\n              }\r\n            }\r\n            break;\r\n        }\r\n\r\n        if (!isValid) {\r\n          setError(errorMessage);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }, [value, required, validation, customError]);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError('');\r\n  }, []);\r\n\r\n  return {\r\n    error,\r\n    isValid: !error,\r\n    validate,\r\n    clearError\r\n  };\r\n};\r\n\r\n// Export individual validation functions for reuse\r\nexport const validators = {\r\n  required: (value: any): boolean => {\r\n    return value !== undefined && value !== null && value !== '' && (!Array.isArray(value) || value.length > 0);\r\n  },\r\n\r\n  email: (value: string): boolean => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(value);\r\n  },\r\n\r\n  url: (value: string): boolean => {\r\n    try {\r\n      new URL(value);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  minLength: (value: string, minLength: number): boolean => {\r\n    return value.length >= minLength;\r\n  },\r\n\r\n  maxLength: (value: string, maxLength: number): boolean => {\r\n    return value.length <= maxLength;\r\n  },\r\n\r\n  pattern: (value: string, pattern: string | RegExp): boolean => {\r\n    const regex = typeof pattern === 'string' ? new RegExp(pattern) : pattern;\r\n    return regex.test(value);\r\n  }\r\n};\r\n","import type { BaseComponentProps } from '../../types';\r\nimport type { DynFieldRef, ValidationRule } from '../../types/field.types';\r\n\r\nexport type DynCheckboxSize = 'small' | 'medium' | 'large';\r\n\r\nexport interface DynCheckboxProps extends BaseComponentProps {\r\n  /** Field name */\r\n  name?: string;\r\n  /** Label displayed next to the checkbox */\r\n  label?: string;\r\n  /** Helper text displayed below the field */\r\n  help?: string;\r\n  /** Disables user interaction */\r\n  disabled?: boolean;\r\n  /** Prevents value changes while keeping the field focusable */\r\n  readonly?: boolean;\r\n  /** Marks the field as required */\r\n  required?: boolean;\r\n  /** Shows the optional indicator */\r\n  optional?: boolean;\r\n  /** Controls visibility of the field */\r\n  visible?: boolean;\r\n  /** Controlled checked state */\r\n  checked?: boolean;\r\n  /** Shows the indeterminate state */\r\n  indeterminate?: boolean;\r\n  /** Custom validation error message */\r\n  errorMessage?: string;\r\n  /** Validation rules */\r\n  validation?: ValidationRule[];\r\n  /** Size variant */\r\n  size?: DynCheckboxSize;\r\n  /** Change handler */\r\n  onChange?: (checked: boolean) => void;\r\n  /** Blur handler */\r\n  onBlur?: () => void;\r\n  /** Focus handler */\r\n  onFocus?: () => void;\r\n}\r\n\r\nexport type DynCheckboxRef = DynFieldRef;\r\n\r\nexport interface DynCheckboxDefaultProps\r\n  extends Required<\r\n      Pick<\r\n        DynCheckboxProps,\r\n        | 'disabled'\r\n        | 'readonly'\r\n        | 'required'\r\n        | 'optional'\r\n        | 'visible'\r\n        | 'checked'\r\n        | 'indeterminate'\r\n        | 'size'\r\n      >\r\n    > {\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_CHECKBOX_DEFAULT_PROPS: DynCheckboxDefaultProps = {\r\n  disabled: false,\r\n  readonly: false,\r\n  required: false,\r\n  optional: false,\r\n  visible: true,\r\n  checked: false,\r\n  indeterminate: false,\r\n  size: 'medium',\r\n  'data-testid': 'dyn-checkbox',\r\n};\r\n","import {\r\n  forwardRef,\r\n  useEffect,\r\n  useId,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { ChangeEvent, ForwardedRef, KeyboardEvent } from 'react';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport type { DynFieldContainerProps } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { DynCheckboxProps, DynCheckboxRef } from './DynCheckbox.types';\r\nimport { DYN_CHECKBOX_DEFAULT_PROPS } from './DynCheckbox.types';\r\nimport styles from './DynCheckbox.module.css';\r\n\r\nconst DynCheckboxComponent = (\r\n  {\r\n    name,\r\n    label,\r\n    help,\r\n    disabled = DYN_CHECKBOX_DEFAULT_PROPS.disabled,\r\n    readonly = DYN_CHECKBOX_DEFAULT_PROPS.readonly,\r\n    required = DYN_CHECKBOX_DEFAULT_PROPS.required,\r\n    optional = DYN_CHECKBOX_DEFAULT_PROPS.optional,\r\n    visible = DYN_CHECKBOX_DEFAULT_PROPS.visible,\r\n    checked: checkedProp = DYN_CHECKBOX_DEFAULT_PROPS.checked,\r\n    indeterminate = DYN_CHECKBOX_DEFAULT_PROPS.indeterminate,\r\n    errorMessage,\r\n    validation,\r\n    className,\r\n    size = DYN_CHECKBOX_DEFAULT_PROPS.size,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    id,\r\n    'data-testid': dataTestId = DYN_CHECKBOX_DEFAULT_PROPS['data-testid'],\r\n  }: DynCheckboxProps,\r\n  ref: ForwardedRef<DynCheckboxRef>\r\n) => {\r\n  const [checked, setChecked] = useState<boolean>(checkedProp);\r\n  const checkboxRef = useRef<HTMLInputElement>(null);\r\n  const fallbackId = useId();\r\n  const fieldId = id ?? name ?? `${fallbackId}-checkbox`;\r\n\r\n  const validationOptions: Parameters<typeof useDynFieldValidation>[0] = {\r\n    value: checked ? 'checked' : '',\r\n    required,\r\n  };\r\n\r\n  if (validation) {\r\n    validationOptions.validation = validation;\r\n  }\r\n\r\n  if (errorMessage) {\r\n    validationOptions.customError = errorMessage;\r\n  }\r\n\r\n  const { error, validate, clearError } = useDynFieldValidation(validationOptions);\r\n\r\n  const resolvedError = errorMessage ?? (error || undefined);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      focus: () => checkboxRef.current?.focus(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setChecked(false);\r\n        onChange?.(false);\r\n        clearError();\r\n      },\r\n      getValue: () => checked,\r\n      setValue: (newValue: unknown) => {\r\n        const booleanValue = Boolean(newValue);\r\n        setChecked(booleanValue);\r\n        onChange?.(booleanValue);\r\n      },\r\n    }),\r\n    [checked, clearError, onChange, validate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setChecked(checkedProp);\r\n  }, [checkedProp]);\r\n\r\n  useEffect(() => {\r\n    if (checkboxRef.current) {\r\n      checkboxRef.current.indeterminate = indeterminate;\r\n    }\r\n  }, [indeterminate]);\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (readonly || disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    const nextValue = event.target.checked;\r\n    setChecked(nextValue);\r\n    onChange?.(nextValue);\r\n    clearError();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    void validate();\r\n    onBlur?.();\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === ' ' || event.key === 'Enter') {\r\n      event.preventDefault();\r\n\r\n      if (disabled || readonly) {\r\n        return;\r\n      }\r\n\r\n      const nextValue = !checked;\r\n      setChecked(nextValue);\r\n      onChange?.(nextValue);\r\n      clearError();\r\n    }\r\n  };\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  const sizeClassMap: Record<NonNullable<DynCheckboxProps['size']>, string | undefined> = {\r\n    small: styles.boxSmall,\r\n    medium: undefined,\r\n    large: styles.boxLarge,\r\n  };\r\n\r\n  const checkboxClasses = cn(\r\n    styles.box,\r\n    sizeClassMap[size],\r\n    checked && !indeterminate && styles.boxChecked,\r\n    indeterminate && styles.boxIndeterminate,\r\n    resolvedError && styles.boxError,\r\n    disabled && styles.boxDisabled,\r\n    readonly && styles.boxReadonly\r\n  );\r\n\r\n  const containerClasses = cn(\r\n    styles.container,\r\n    disabled && styles.containerDisabled,\r\n    readonly && styles.containerReadonly,\r\n    className\r\n  );\r\n\r\n  const wrapperClasses = cn(\r\n    styles.wrapper,\r\n    disabled && styles.wrapperDisabled,\r\n    readonly && styles.wrapperReadonly\r\n  );\r\n\r\n  const describedById = resolvedError\r\n    ? `${fieldId}-error`\r\n    : help\r\n    ? `${fieldId}-help`\r\n    : undefined;\r\n\r\n  const visualState = indeterminate ? 'indeterminate' : checked ? 'checked' : 'unchecked';\r\n\r\n  const fieldContainerProps: Omit<DynFieldContainerProps, 'children'> = {\r\n    required,\r\n    optional,\r\n    className: containerClasses,\r\n    htmlFor: fieldId,\r\n  };\r\n\r\n  if (help) {\r\n    fieldContainerProps.helpText = help;\r\n  }\r\n\r\n  if (resolvedError) {\r\n    fieldContainerProps.errorText = resolvedError;\r\n  }\r\n\r\n  return (\r\n    <DynFieldContainer {...fieldContainerProps}>\r\n      <label className={wrapperClasses} htmlFor={fieldId}>\r\n        <input\r\n          ref={checkboxRef}\r\n          type=\"checkbox\"\r\n          id={fieldId}\r\n          name={name}\r\n          className={styles.input}\r\n          checked={checked}\r\n          disabled={disabled}\r\n          readOnly={readonly}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          onFocus={onFocus}\r\n          onKeyDown={handleKeyDown}\r\n          aria-invalid={Boolean(resolvedError)}\r\n          aria-describedby={describedById}\r\n          aria-required={required || undefined}\r\n          data-testid={dataTestId}\r\n        />\r\n\r\n        <span\r\n          className={checkboxClasses}\r\n          aria-hidden=\"true\"\r\n          data-state={visualState}\r\n          data-size={size}\r\n        >\r\n          <span className={styles.checkmark}>\r\n            {indeterminate ? (\r\n              <span className={styles.indeterminateMark}>-</span>\r\n            ) : checked ? (\r\n              <span className={styles.checkMark}>✓</span>\r\n            ) : null}\r\n          </span>\r\n        </span>\r\n        {label && (\r\n          <span className={styles.label}>\r\n            {label}\r\n            {required && (\r\n              <span className={styles.requiredIndicator} aria-hidden=\"true\">\r\n                *\r\n              </span>\r\n            )}\r\n            {optional && !required && (\r\n              <span className={styles.optionalIndicator} aria-label=\"opcional\">\r\n                (opcional)\r\n              </span>\r\n            )}\r\n          </span>\r\n        )}\r\n      </label>\r\n    </DynFieldContainer>\r\n  );\r\n};\r\n\r\nconst DynCheckbox = forwardRef<DynCheckboxRef, DynCheckboxProps>(DynCheckboxComponent);\r\n\r\nDynCheckbox.displayName = 'DynCheckbox';\r\n\r\nexport { DynCheckbox };\r\nexport default DynCheckbox;\r\n","import type { CSSProperties, HTMLAttributes, ReactNode } from 'react';\r\nimport type { BaseComponentProps } from '../../types/theme';\r\nimport type {\r\n  LayoutAlignment,\r\n  LayoutDirection,\r\n  LayoutJustify,\r\n  LayoutSize,\r\n  LayoutSpacing,\r\n} from '../../types/layout.types';\r\n\r\nexport type DynContainerBackground = 'none' | 'surface' | 'card';\r\nexport type DynContainerLayout = 'fluid' | 'fixed';\r\nexport type DynContainerMaxWidthToken = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\r\nexport type DynContainerSpaceValue = LayoutSpacing | number | string;\r\n\r\nexport interface DynContainerOwnProps {\r\n  /** Optional title displayed above the content */\r\n  title?: string;\r\n  /** Optional subtitle displayed under the title */\r\n  subtitle?: string;\r\n  /** Layout direction for the content area */\r\n  direction?: LayoutDirection;\r\n  /** Cross-axis alignment for content */\r\n  align?: LayoutAlignment;\r\n  /** Main-axis alignment for content */\r\n  justify?: LayoutJustify;\r\n  /** Spacing between content elements */\r\n  spacing?: LayoutSpacing;\r\n  /** Visual size variant which controls internal padding */\r\n  size?: LayoutSize;\r\n  /** Controls whether the container has a border */\r\n  bordered?: boolean;\r\n  /** Controls whether the container has a shadow */\r\n  shadow?: boolean;\r\n  /** Background style variant */\r\n  background?: DynContainerBackground;\r\n  /** Fixed height for the container */\r\n  height?: number | string;\r\n  /** Maximum width constraint, accepts design tokens or raw CSS values */\r\n  maxWidth?: number | string | DynContainerMaxWidthToken;\r\n  /** Layout behavior for responsive alignment */\r\n  layout?: DynContainerLayout;\r\n  /** Optional padding override using spacing tokens or raw CSS values */\r\n  padding?: DynContainerSpaceValue;\r\n  /** Optional margin override using spacing tokens or raw CSS values */\r\n  margin?: DynContainerSpaceValue;\r\n  /** Render prop children are supported in addition to nodes */\r\n  children?: ReactNode;\r\n  /** Removes border regardless of bordered value (legacy prop support) */\r\n  noBorder?: boolean;\r\n  /** Removes padding regardless of size value (legacy prop support) */\r\n  noPadding?: boolean;\r\n  /** Inline style overrides */\r\n  style?: CSSProperties;\r\n}\r\n\r\nexport type DynContainerProps = BaseComponentProps &\r\n  DynContainerOwnProps &\r\n  Omit<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    keyof BaseComponentProps | keyof DynContainerOwnProps\r\n  >;\r\n\r\nexport type DynContainerRef = HTMLDivElement;\r\n\r\nexport interface DynContainerDefaultProps {\r\n  direction: LayoutDirection;\r\n  spacing: LayoutSpacing;\r\n  size: LayoutSize;\r\n  background: DynContainerBackground;\r\n  bordered: boolean;\r\n  shadow: boolean;\r\n  layout: DynContainerLayout;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_CONTAINER_DEFAULT_PROPS: DynContainerDefaultProps = {\r\n  direction: 'vertical',\r\n  spacing: 'md',\r\n  size: 'medium',\r\n  background: 'surface',\r\n  bordered: true,\r\n  shadow: false,\r\n  layout: 'fluid',\r\n  'data-testid': 'dyn-container',\r\n};\r\n","import { forwardRef, useMemo } from 'react';\r\nimport type { CSSProperties, ForwardedRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_CONTAINER_DEFAULT_PROPS,\r\n  DynContainerProps,\r\n  DynContainerRef,\r\n  type DynContainerMaxWidthToken,\r\n  type DynContainerSpaceValue,\r\n} from './DynContainer.types';\r\nimport styles from './DynContainer.module.css';\r\n\r\nconst toPascalCase = (value: string) => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\nconst SPACING_TOKENS: Record<string, string> = {\r\n  none: '0',\r\n  xs: 'var(--dyn-spacing-xs, var(--spacing-xs, 0.25rem))',\r\n  sm: 'var(--dyn-spacing-sm, var(--spacing-sm, 0.5rem))',\r\n  md: 'var(--dyn-spacing-md, var(--spacing-md, 1rem))',\r\n  lg: 'var(--dyn-spacing-lg, var(--spacing-lg, 1.5rem))',\r\n  xl: 'var(--dyn-spacing-xl, var(--spacing-xl, 2rem))',\r\n};\r\n\r\nconst MAX_WIDTH_TOKENS: Record<DynContainerMaxWidthToken, string> = {\r\n  xs: 'min(100%, var(--dyn-container-max-width-xs))',\r\n  sm: 'min(100%, var(--dyn-container-max-width-sm))',\r\n  md: 'min(100%, var(--dyn-container-max-width-md))',\r\n  lg: 'min(100%, var(--dyn-container-max-width-lg))',\r\n  xl: 'min(100%, var(--dyn-container-max-width-xl))',\r\n  full: '100%',\r\n};\r\n\r\ntype CSSVarProperties = CSSProperties & Record<string, string | number | undefined>;\r\n\r\nconst resolveSpacingValue = (value?: DynContainerSpaceValue): string | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return `${value}px`;\r\n  }\r\n\r\n  const normalized = value.trim();\r\n\r\n  if (normalized in SPACING_TOKENS) {\r\n    return SPACING_TOKENS[normalized];\r\n  }\r\n\r\n  return normalized;\r\n};\r\n\r\nconst resolveMaxWidth = (\r\n  value?: DynContainerProps['maxWidth']\r\n): string | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return `${value}px`;\r\n  }\r\n\r\n  const normalized = value.trim();\r\n\r\n  if (normalized in MAX_WIDTH_TOKENS) {\r\n    return MAX_WIDTH_TOKENS[normalized as DynContainerMaxWidthToken];\r\n  }\r\n\r\n  return normalized;\r\n};\r\n\r\nconst DynContainerComponent = (\r\n  {\r\n    title,\r\n    subtitle,\r\n    direction = DYN_CONTAINER_DEFAULT_PROPS.direction,\r\n    align,\r\n    justify,\r\n    spacing = DYN_CONTAINER_DEFAULT_PROPS.spacing,\r\n    size = DYN_CONTAINER_DEFAULT_PROPS.size,\r\n    bordered = DYN_CONTAINER_DEFAULT_PROPS.bordered,\r\n    shadow = DYN_CONTAINER_DEFAULT_PROPS.shadow,\r\n    background = DYN_CONTAINER_DEFAULT_PROPS.background,\r\n    height,\r\n    maxWidth,\r\n    layout = DYN_CONTAINER_DEFAULT_PROPS.layout,\r\n    padding,\r\n    margin,\r\n    noBorder,\r\n    noPadding,\r\n    className,\r\n    children,\r\n    style,\r\n    'data-testid': dataTestId = DYN_CONTAINER_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  }: DynContainerProps,\r\n  ref: ForwardedRef<DynContainerRef>\r\n) => {\r\n  const resolvedBordered = noBorder ? false : bordered;\r\n  const hasTitleContent = Boolean(title || subtitle);\r\n  const resolvedMaxWidth = resolveMaxWidth(maxWidth);\r\n  const resolvedPadding = resolveSpacingValue(padding);\r\n  const resolvedMargin = resolveSpacingValue(margin);\r\n\r\n  const containerStyle = useMemo<CSSProperties | undefined>(() => {\r\n    const next: CSSVarProperties = { ...(style as CSSVarProperties) };\r\n\r\n    if (typeof height === 'number') {\r\n      next.height = `${height}px`;\r\n    } else if (typeof height === 'string') {\r\n      next.height = height;\r\n    }\r\n\r\n    if (resolvedMaxWidth) {\r\n      next.maxWidth = resolvedMaxWidth;\r\n      next['--dyn-container-max-width'] = resolvedMaxWidth;\r\n    }\r\n\r\n    if (resolvedPadding) {\r\n      next['--dyn-container-padding'] = resolvedPadding;\r\n    }\r\n\r\n    if (resolvedMargin) {\r\n      next['--dyn-container-margin'] = resolvedMargin;\r\n    }\r\n\r\n    return Object.keys(next).length > 0 ? next : undefined;\r\n  }, [height, resolvedMargin, resolvedMaxWidth, resolvedPadding, style]);\r\n\r\n  const directionClass = styles[`direction${toPascalCase(direction)}` as keyof typeof styles];\r\n  const spacingClass = spacing\r\n    ? styles[`spacing${toPascalCase(spacing)}` as keyof typeof styles]\r\n    : undefined;\r\n  const sizeClass = size\r\n    ? styles[`size${toPascalCase(size)}` as keyof typeof styles]\r\n    : undefined;\r\n  const backgroundClass = background\r\n    ? styles[`background${toPascalCase(background)}` as keyof typeof styles]\r\n    : undefined;\r\n  const alignClass = align\r\n    ? styles[`align${toPascalCase(align)}` as keyof typeof styles]\r\n    : undefined;\r\n  const justifyClass = justify\r\n    ? styles[`justify${toPascalCase(justify)}` as keyof typeof styles]\r\n    : undefined;\r\n\r\n  const containerClassName = cn(\r\n    styles.root,\r\n    directionClass,\r\n    spacingClass,\r\n    sizeClass,\r\n    backgroundClass,\r\n    alignClass,\r\n    justifyClass,\r\n    layout === 'fixed' && styles.layoutFixed,\r\n    resolvedBordered && styles.bordered,\r\n    shadow && styles.shadow,\r\n    noPadding && styles.noPadding,\r\n    hasTitleContent && styles.withTitle,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={containerClassName}\r\n      style={containerStyle}\r\n      data-testid={dataTestId}\r\n      {...rest}\r\n    >\r\n      {hasTitleContent && (\r\n        <div className={styles.header}>\r\n          {title && <h2 className={styles.title}>{title}</h2>}\r\n          {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\r\n        </div>\r\n      )}\r\n      <div className={styles.content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DynContainer = forwardRef<DynContainerRef, DynContainerProps>(DynContainerComponent);\r\n\r\nDynContainer.displayName = 'DynContainer';\r\n\r\nexport { DynContainer };\r\nexport default DynContainer;\r\n","/**\r\n * Date parsing hook for DYN UI DatePicker component\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\n\r\ninterface DateParserOptions {\r\n  format?: string;\r\n  locale?: string;\r\n  customParser?: (input: string) => Date | null;\r\n}\r\n\r\n/**\r\n * Hook for date parsing with custom formats and locales\r\n * @param options - Date parser configuration\r\n * @returns Date parsing utilities\r\n */\r\nexport const useDynDateParser = ({\r\n  format = 'dd/MM/yyyy',\r\n  locale = 'pt-BR',\r\n  customParser\r\n}: DateParserOptions = {}) => {\r\n  // Locale support is reserved for future enhancements; consume the value to satisfy linting.\r\n  void locale;\r\n\r\n  const [displayValue, setDisplayValue] = useState<string>('');\r\n\r\n  const formatDate = useCallback((date: Date | null, formatStr: string = format): string => {\r\n    if (!date) return '';\r\n\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = date.getFullYear().toString();\r\n\r\n    return formatStr\r\n      .replace('dd', day)\r\n      .replace('MM', month)\r\n      .replace('yyyy', year);\r\n  }, [format]);\r\n\r\n  const parseDate = useCallback((dateStr: string): Date | null => {\r\n    if (!dateStr || dateStr.trim() === '') return null;\r\n\r\n    // Try custom parser first\r\n    if (customParser) {\r\n      try {\r\n        return customParser(dateStr);\r\n      } catch {\r\n        // Fall back to default parsing if custom parser fails\r\n      }\r\n    }\r\n\r\n    // Handle natural language inputs (Portuguese)\r\n    const today = new Date();\r\n    const normalizedInput = dateStr.toLowerCase().trim();\r\n\r\n    switch (normalizedInput) {\r\n      case 'hoje':\r\n      case 'today':\r\n        return today;\r\n      \r\n      case 'ontem':\r\n      case 'yesterday':\r\n        const yesterday = new Date(today);\r\n        yesterday.setDate(today.getDate() - 1);\r\n        return yesterday;\r\n      \r\n      case 'amanhã':\r\n      case 'amanha':\r\n      case 'tomorrow':\r\n        const tomorrow = new Date(today);\r\n        tomorrow.setDate(today.getDate() + 1);\r\n        return tomorrow;\r\n    }\r\n\r\n    // Try to parse standard formats\r\n    const cleanStr = dateStr.replace(/[^0-9]/g, '');\r\n    \r\n    if (cleanStr.length === 8) {\r\n      // DDMMYYYY format\r\n      const day = parseInt(cleanStr.substr(0, 2));\r\n      const month = parseInt(cleanStr.substr(2, 2)) - 1; // Month is 0-indexed\r\n      const year = parseInt(cleanStr.substr(4, 4));\r\n\r\n      if (day >= 1 && day <= 31 && month >= 0 && month <= 11 && year >= 1900) {\r\n        const date = new Date(year, month, day);\r\n        // Validate the date is actually valid (handles things like Feb 30th)\r\n        if (\r\n          date.getDate() === day &&\r\n          date.getMonth() === month &&\r\n          date.getFullYear() === year\r\n        ) {\r\n          return date;\r\n        }\r\n      }\r\n    } else if (cleanStr.length === 6) {\r\n      // DDMMYY format\r\n      const day = parseInt(cleanStr.substr(0, 2));\r\n      const month = parseInt(cleanStr.substr(2, 2)) - 1;\r\n      let year = parseInt(cleanStr.substr(4, 2));\r\n      \r\n      // Handle 2-digit year (assume 20XX for years 00-30, 19XX for 31-99)\r\n      year = year <= 30 ? 2000 + year : 1900 + year;\r\n\r\n      if (day >= 1 && day <= 31 && month >= 0 && month <= 11) {\r\n        const date = new Date(year, month, day);\r\n        if (\r\n          date.getDate() === day &&\r\n          date.getMonth() === month &&\r\n          date.getFullYear() === year\r\n        ) {\r\n          return date;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Try standard date parsing as last resort\r\n    try {\r\n      const parsed = new Date(dateStr);\r\n      if (!isNaN(parsed.getTime())) {\r\n        return parsed;\r\n      }\r\n    } catch {\r\n      // Ignore parsing errors\r\n    }\r\n\r\n    return null;\r\n  }, [customParser]);\r\n\r\n  const isValidDate = useCallback((date: Date | null): boolean => {\r\n    return date !== null && date instanceof Date && !isNaN(date.getTime());\r\n  }, []);\r\n\r\n  const getRelativeDescription = useCallback((date: Date | null): string | null => {\r\n    if (!date) return null;\r\n\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const targetDate = new Date(date);\r\n    targetDate.setHours(0, 0, 0, 0);\r\n    \r\n    const diffTime = targetDate.getTime() - today.getTime();\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays === 0) return 'hoje';\r\n    if (diffDays === 1) return 'amanhã';\r\n    if (diffDays === -1) return 'ontem';\r\n    if (diffDays > 1 && diffDays <= 7) return `em ${diffDays} dias`;\r\n    if (diffDays < -1 && diffDays >= -7) return `${Math.abs(diffDays)} dias atrás`;\r\n\r\n    return null;\r\n  }, []);\r\n\r\n  return {\r\n    displayValue,\r\n    setDisplayValue,\r\n    formatDate,\r\n    parseDate,\r\n    isValidDate,\r\n    getRelativeDescription\r\n  };\r\n};\r\n\r\n/**\r\n * Predefined date formats\r\n */\r\nexport const DATE_FORMATS = {\r\n  'pt-BR': 'dd/MM/yyyy',\r\n  'en-US': 'MM/dd/yyyy',\r\n  'ISO': 'yyyy-MM-dd',\r\n  'short': 'dd/MM/yy',\r\n  'long': 'dd de MMMM de yyyy'\r\n} as const;\r\n\r\n/**\r\n * Get date format by locale\r\n * @param locale - Locale string\r\n * @returns Date format pattern\r\n */\r\nexport const getDateFormat = (locale: keyof typeof DATE_FORMATS = 'pt-BR'): string => {\r\n  return DATE_FORMATS[locale] || DATE_FORMATS['pt-BR'];\r\n};\r\n","/**\r\n * DynDatePicker - Advanced date picker with custom parsing\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { ChangeEvent, KeyboardEvent } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { DynDatePickerProps, DynFieldRef, InputSize } from '../../types/field.types';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { useDynDateParser } from '../../hooks/useDynDateParser';\r\nimport { DynIcon } from '../DynIcon';\r\nimport styles from './DynDatePicker.module.css';\r\n\r\nconst MAX_DATE_LENGTH = 10;\r\n\r\nconst sizeClassMap: Record<InputSize, string | undefined> = {\r\n  small: styles.sizeSmall,\r\n  medium: undefined,\r\n  large: styles.sizeLarge,\r\n};\r\n\r\nexport const DynDatePicker = forwardRef<DynFieldRef, DynDatePickerProps>((props, ref) => {\r\n  const {\r\n    id: idProp,\r\n    name,\r\n    label,\r\n    help,\r\n    placeholder = 'dd/mm/aaaa',\r\n    disabled = false,\r\n    readonly = false,\r\n    required = false,\r\n    optional = false,\r\n    visible = true,\r\n    value: propValue,\r\n    errorMessage,\r\n    validation,\r\n    className,\r\n    format = 'dd/MM/yyyy',\r\n    locale = 'pt-BR',\r\n    minDate,\r\n    maxDate,\r\n    customParser,\r\n    size = 'medium',\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    children: _children,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const instanceId = useId();\r\n  const inputId = idProp ?? name ?? instanceId;\r\n  const dropdownId = `${inputId}-dropdown`;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [value, setValue] = useState<Date | null>(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [focused, setFocused] = useState(false);\r\n\r\n  const { error, validate, clearError } = useDynFieldValidation({\r\n    value,\r\n    ...(required ? { required } : {}),\r\n    ...(validation ? { validation } : {}),\r\n  });\r\n\r\n  const {\r\n    displayValue,\r\n    setDisplayValue,\r\n    formatDate,\r\n    parseDate,\r\n    isValidDate,\r\n    getRelativeDescription,\r\n  } = useDynDateParser({\r\n    format,\r\n    locale,\r\n    ...(customParser ? { customParser } : {}),\r\n  });\r\n\r\n  const parseExternalValue = useCallback(\r\n    (input: DynDatePickerProps['value']): Date | null => {\r\n      if (!input) {\r\n        return null;\r\n      }\r\n\r\n      const candidate = input instanceof Date ? input : new Date(input);\r\n      return isValidDate(candidate) ? candidate : null;\r\n    },\r\n    [isValidDate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const nextValue = parseExternalValue(propValue);\r\n    setValue(prev => {\r\n      const prevTime = prev?.getTime();\r\n      const nextTime = nextValue?.getTime();\r\n      return prevTime === nextTime ? prev : nextValue;\r\n    });\r\n    setDisplayValue(nextValue ? formatDate(nextValue) : '');\r\n  }, [propValue, formatDate, parseExternalValue, setDisplayValue]);\r\n\r\n  const handleDocumentClick = useCallback((event: MouseEvent) => {\r\n    if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\r\n      setIsOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      return;\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleDocumentClick);\r\n    };\r\n  }, [isOpen, handleDocumentClick]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => inputRef.current?.focus(),\r\n    validate: () => validate(),\r\n    clear: () => {\r\n      setValue(null);\r\n      setDisplayValue('');\r\n      onChange?.(null);\r\n      clearError();\r\n    },\r\n    getValue: () => value,\r\n    setValue: (newValue: any) => {\r\n      const nextValue = parseExternalValue(newValue);\r\n      setValue(nextValue);\r\n      setDisplayValue(nextValue ? formatDate(nextValue) : '');\r\n      onChange?.(nextValue);\r\n    },\r\n  }));\r\n\r\n  const emitChange = useCallback(\r\n    (nextValue: Date | null) => {\r\n      setValue(nextValue);\r\n      setDisplayValue(nextValue ? formatDate(nextValue) : '');\r\n      onChange?.(nextValue);\r\n    },\r\n    [formatDate, onChange, setDisplayValue]\r\n  );\r\n\r\n  const handleInputChange = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const inputValue = event.target.value;\r\n      setDisplayValue(inputValue);\r\n\r\n      const parsedDate = parseDate(inputValue);\r\n      if (parsedDate && isValidDate(parsedDate)) {\r\n        if (minDate && parsedDate < minDate) {\r\n          return;\r\n        }\r\n        if (maxDate && parsedDate > maxDate) {\r\n          return;\r\n        }\r\n\r\n        emitChange(parsedDate);\r\n        clearError();\r\n      } else if (!inputValue) {\r\n        emitChange(null);\r\n        clearError();\r\n      }\r\n    },\r\n    [parseDate, isValidDate, minDate, maxDate, emitChange, clearError]\r\n  );\r\n\r\n  const handleCalendarToggle = useCallback(() => {\r\n    if (disabled || readonly) {\r\n      return;\r\n    }\r\n    setIsOpen(prev => !prev);\r\n    inputRef.current?.focus();\r\n  }, [disabled, readonly]);\r\n\r\n  const handleTodayClick = useCallback(() => {\r\n    const today = new Date();\r\n    emitChange(today);\r\n    clearError();\r\n    setIsOpen(false);\r\n  }, [emitChange, clearError]);\r\n\r\n  const handleClearClick = useCallback(() => {\r\n    emitChange(null);\r\n    clearError();\r\n    inputRef.current?.focus();\r\n  }, [emitChange, clearError]);\r\n\r\n  const handleBlur = useCallback(() => {\r\n    setFocused(false);\r\n    validate();\r\n    onBlur?.();\r\n  }, [validate, onBlur]);\r\n\r\n  const handleFocus = useCallback(() => {\r\n    setFocused(true);\r\n    clearError();\r\n    onFocus?.();\r\n  }, [clearError, onFocus]);\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event: KeyboardEvent<HTMLInputElement>) => {\r\n      switch (event.key) {\r\n        case 'Enter':\r\n        case 'ArrowDown':\r\n          if (!isOpen) {\r\n            setIsOpen(true);\r\n            event.preventDefault();\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          if (isOpen) {\r\n            setIsOpen(false);\r\n            event.preventDefault();\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [isOpen]\r\n  );\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  const fieldError = errorMessage ?? (error || undefined);\r\n\r\n  const inputClasses = cn(\r\n    styles.input,\r\n    sizeClassMap[size],\r\n    focused && styles.stateFocused,\r\n    Boolean(fieldError) && styles.stateError,\r\n    disabled && styles.stateDisabled,\r\n    readonly && styles.stateReadonly,\r\n    isOpen && styles.stateOpen\r\n  );\r\n\r\n  const describedBy =\r\n    [\r\n      fieldError ? `${inputId}-error` : null,\r\n      help ? `${inputId}-help` : null,\r\n    ]\r\n      .filter(Boolean)\r\n      .join(' ') || undefined;\r\n\r\n  const relativeText = useMemo(\r\n    () => (value ? getRelativeDescription(value) : null),\r\n    [value, getRelativeDescription]\r\n  );\r\n\r\n  return (\r\n    <DynFieldContainer\r\n      {...(label !== undefined ? { label } : {})}\r\n      {...(help !== undefined ? { helpText: help } : {})}\r\n      {...(required ? { required } : {})}\r\n      {...(optional ? { optional } : {})}\r\n      {...(fieldError ? { errorText: fieldError } : {})}\r\n      {...(className !== undefined ? { className } : {})}\r\n      htmlFor={inputId}\r\n    >\r\n      <div ref={containerRef} className={styles.container} data-testid={dataTestId}>\r\n        <div className={styles.inputContainer}>\r\n          <input\r\n            ref={inputRef}\r\n            id={inputId}\r\n            name={name ?? inputId}\r\n            type=\"text\"\r\n            className={inputClasses}\r\n            placeholder={placeholder}\r\n            value={displayValue}\r\n            disabled={disabled}\r\n            readOnly={readonly}\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            onFocus={handleFocus}\r\n            onKeyDown={handleKeyDown}\r\n            aria-invalid={Boolean(fieldError)}\r\n            aria-describedby={describedBy}\r\n            aria-expanded={isOpen}\r\n            aria-controls={isOpen ? dropdownId : undefined}\r\n            maxLength={MAX_DATE_LENGTH}\r\n            data-size={size}\r\n            {...rest}\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={styles.calendarButton}\r\n            onClick={handleCalendarToggle}\r\n            disabled={disabled}\r\n            tabIndex={-1}\r\n            aria-label=\"Abrir calendário\"\r\n            aria-expanded={isOpen}\r\n            aria-controls={isOpen ? dropdownId : undefined}\r\n          >\r\n            <DynIcon icon=\"dyn-icon-calendar\" />\r\n          </button>\r\n\r\n          {displayValue && !readonly && !disabled && (\r\n            <button\r\n              type=\"button\"\r\n              className={styles.clearButton}\r\n              onClick={handleClearClick}\r\n              tabIndex={-1}\r\n              aria-label=\"Limpar data\"\r\n            >\r\n              <DynIcon icon=\"dyn-icon-close\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {relativeText && <div className={styles.relativeText}>{relativeText}</div>}\r\n\r\n        {isOpen && (\r\n          <div id={dropdownId} className={styles.dropdown} role=\"dialog\">\r\n            <div className={styles.shortcuts}>\r\n              <button type=\"button\" className={styles.shortcut} onClick={handleTodayClick}>\r\n                Hoje\r\n              </button>\r\n              <button type=\"button\" className={styles.shortcut} onClick={handleClearClick}>\r\n                Limpar\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className={styles.helpTitle}>Formatos aceitos:</div>\r\n              <ul className={styles.helpList}>\r\n                <li className={styles.helpListItem}>dd/mm/aaaa (ex: 25/12/2023)</li>\r\n                <li className={styles.helpListItem}>hoje, amanhã, ontem</li>\r\n                <li className={styles.helpListItem}>Texto natural</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DynFieldContainer>\r\n  );\r\n});\r\n\r\nDynDatePicker.displayName = 'DynDatePicker';\r\n\r\nexport default DynDatePicker;\r\n","import type { ComponentPropsWithoutRef, ElementRef } from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types/theme';\r\n\r\n// Local type definitions (previously from ../../types)\r\nexport type DynDividerColor = 'default' | 'subtle' | 'primary' | 'secondary' | 'success' | 'warning' | 'danger';\r\nexport type DynDividerLabelPosition = 'left' | 'center' | 'right';\r\nexport type DynDividerLineStyle = 'solid' | 'dashed' | 'dotted';\r\nexport type DynDividerThickness = 'thin' | 'medium' | 'thick';\r\nexport type LayoutDirection = 'horizontal' | 'vertical';\r\nexport type LayoutSpacing = 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n\r\nexport interface DynDividerProps \r\n  extends BaseComponentProps,\r\n    AccessibilityProps,\r\n    Omit<ComponentPropsWithoutRef<'div'>, keyof BaseComponentProps> {\r\n  /** Direction of the divider */\r\n  direction?: LayoutDirection;\r\n  /** Thickness of the divider line */\r\n  thickness?: DynDividerThickness;\r\n  /** Style of the divider line */\r\n  lineStyle?: DynDividerLineStyle;\r\n  /** Color variant of the divider */\r\n  color?: DynDividerColor;\r\n  /** Label text to display */\r\n  label?: string;\r\n  /** Position of the label */\r\n  labelPosition?: DynDividerLabelPosition;\r\n  /** Spacing around the divider */\r\n  spacing?: LayoutSpacing;\r\n  /** Additional CSS classes */\r\n  className?: string;\r\n  /** Custom styles */\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport type DynDividerRef = HTMLDivElement;\r\n\r\nexport interface DynDividerDefaultProps {\r\n  direction: LayoutDirection;\r\n  thickness: DynDividerThickness;\r\n  lineStyle: DynDividerLineStyle;\r\n  color: DynDividerColor;\r\n  labelPosition: DynDividerLabelPosition;\r\n  spacing: LayoutSpacing;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_DIVIDER_DEFAULT_PROPS: DynDividerDefaultProps = {\r\n  direction: 'horizontal',\r\n  thickness: 'thin',\r\n  lineStyle: 'solid',\r\n  color: 'default',\r\n  labelPosition: 'center',\r\n  spacing: 'md',\r\n  'data-testid': 'dyn-divider',\r\n};","import { forwardRef, useId } from 'react';\r\nimport type { ForwardedRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_DIVIDER_DEFAULT_PROPS,\r\n  DynDividerProps,\r\n  DynDividerRef,\r\n} from './DynDivider.types';\r\nimport styles from './DynDivider.module.css';\r\n\r\nconst toPascalCase = (value: string) => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\nconst DynDividerComponent = (\r\n  {\r\n    label,\r\n    labelPosition = DYN_DIVIDER_DEFAULT_PROPS.labelPosition,\r\n    direction = DYN_DIVIDER_DEFAULT_PROPS.direction,\r\n    thickness = DYN_DIVIDER_DEFAULT_PROPS.thickness,\r\n    lineStyle = DYN_DIVIDER_DEFAULT_PROPS.lineStyle,\r\n    color = DYN_DIVIDER_DEFAULT_PROPS.color,\r\n    spacing = DYN_DIVIDER_DEFAULT_PROPS.spacing,\r\n    children,\r\n    className,\r\n    id,\r\n    'data-testid': dataTestId = DYN_DIVIDER_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  }: DynDividerProps,\r\n  ref: ForwardedRef<DynDividerRef>\r\n) => {\r\n  const generatedId = useId();\r\n  const orientation = direction === 'vertical' ? 'vertical' : 'horizontal';\r\n  const labelContent = children ?? label;\r\n  const labelId = labelContent ? `${id ?? `dyn-divider-${generatedId}`}-label` : undefined;\r\n  const ariaLabel =\r\n    !labelId && typeof labelContent === 'string' ? labelContent : undefined;\r\n\r\n  const directionClass = styles[`direction${toPascalCase(orientation)}` as keyof typeof styles];\r\n  const thicknessClass = styles[`thickness${toPascalCase(thickness)}` as keyof typeof styles];\r\n  const styleClass = styles[`lineStyle${toPascalCase(lineStyle)}` as keyof typeof styles];\r\n  const colorClass = styles[`color${toPascalCase(color)}` as keyof typeof styles];\r\n  const spacingClass = styles[`spacing${toPascalCase(spacing)}` as keyof typeof styles];\r\n  const labelPositionClass = labelContent\r\n    ? styles[`label${toPascalCase(labelPosition)}` as keyof typeof styles]\r\n    : undefined;\r\n\r\n  const dividerClassName = cn(\r\n    styles.root,\r\n    directionClass,\r\n    thicknessClass,\r\n    styleClass,\r\n    colorClass,\r\n    spacingClass,\r\n    Boolean(labelContent) && styles.withLabel,\r\n    labelPositionClass,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      id={id}\r\n      role=\"separator\"\r\n      aria-orientation={orientation}\r\n      aria-labelledby={labelId}\r\n      aria-label={ariaLabel}\r\n      className={dividerClassName}\r\n      data-testid={dataTestId}\r\n      {...rest}\r\n    >\r\n      <span className={styles.line} aria-hidden=\"true\" />\r\n      {labelContent ? (\r\n        <span className={styles.label} id={labelId}>\r\n          {labelContent}\r\n        </span>\r\n      ) : null}\r\n      <span className={styles.line} aria-hidden=\"true\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DynDivider = forwardRef<DynDividerRef, DynDividerProps>(DynDividerComponent);\r\n\r\nDynDivider.displayName = 'DynDivider';\r\n\r\nexport { DynDivider };\r\nexport default DynDivider;\r\n","import { BaseComponentProps } from '../../types';\r\n\r\nexport interface GaugeRange {\r\n  from: number;\r\n  to: number;\r\n  color: string;\r\n  label?: string;\r\n}\r\n\r\nexport type GaugeSize = 'small' | 'medium' | 'large';\r\nexport type GaugeType = 'arc' | 'circle' | 'line';\r\n\r\nexport interface DynGaugeProps extends BaseComponentProps {\r\n  /** Current value to display */\r\n  value: number;\r\n  \r\n  /** Minimum value */\r\n  min?: number;\r\n  \r\n  /** Maximum value */\r\n  max?: number;\r\n  \r\n  /** Gauge title */\r\n  title?: string;\r\n  \r\n  /** Gauge label (alias for title) */\r\n  label?: string;\r\n  \r\n  /** Gauge subtitle */\r\n  subtitle?: string;\r\n  \r\n  /** Gauge type/style */\r\n  type?: GaugeType;\r\n  \r\n  /** Unit of measurement */\r\n  unit?: string;\r\n  \r\n  /** Color ranges */\r\n  ranges?: GaugeRange[];\r\n  \r\n  /** Show the numeric value */\r\n  showValue?: boolean;\r\n  \r\n  /** Show range indicators */\r\n  showRanges?: boolean;\r\n  \r\n  /** Gauge size */\r\n  size?: GaugeSize;\r\n  \r\n  /** Arc thickness */\r\n  thickness?: number;\r\n  \r\n  /** Rounded line caps */\r\n  rounded?: boolean;\r\n  \r\n  /** Animated transitions */\r\n  animated?: boolean;\r\n  \r\n  /** Custom color (overrides range colors) */\r\n  color?: string;\r\n  \r\n  /** Background arc color */\r\n  backgroundColor?: string;\r\n  \r\n  /** Custom value formatter */\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport type DynGaugeDefaultProps = Required<\r\n  Pick<\r\n    DynGaugeProps,\r\n    | 'min'\r\n    | 'max'\r\n    | 'type'\r\n    | 'unit'\r\n    | 'ranges'\r\n    | 'showValue'\r\n    | 'showRanges'\r\n    | 'size'\r\n    | 'thickness'\r\n    | 'rounded'\r\n    | 'animated'\r\n    | 'backgroundColor'\r\n  >\r\n>;\r\n\r\nexport const DYN_GAUGE_DEFAULT_PROPS: DynGaugeDefaultProps = {\r\n  min: 0,\r\n  max: 100,\r\n  type: 'arc',\r\n  unit: '%',\r\n  ranges: [],\r\n  showValue: true,\r\n  showRanges: true,\r\n  size: 'medium',\r\n  thickness: 20,\r\n  rounded: true,\r\n  animated: true,\r\n  backgroundColor: '#e0e0e0',\r\n};","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\n\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_GAUGE_DEFAULT_PROPS,\r\n  DynGaugeProps,\r\n  GaugeRange,\r\n  GaugeSize,\r\n  GaugeType,\r\n} from './DynGauge.types';\r\nimport styles from './DynGauge.module.css';\r\n\r\nconst gaugeDimensionsMap: Record<GaugeSize, { width: number; height: number }> = {\r\n  small: { width: 120, height: 120 },\r\n  medium: { width: 200, height: 200 },\r\n  large: { width: 280, height: 280 },\r\n};\r\n\r\nconst sizeClassNameMap: Partial<Record<GaugeSize, string | undefined>> = {\r\n  small: styles.sizeSmall,\r\n  medium: styles.sizeMedium,\r\n  large: styles.sizeLarge,\r\n};\r\n\r\nconst typeClassNameMap: Partial<Record<GaugeType, string | undefined>> = {\r\n  arc: styles.typeArc,\r\n  circle: styles.typeCircle,\r\n  line: styles.typeLine,\r\n};\r\n\r\nconst clampGaugeValue = (value: number, min: number, max: number): number => {\r\n  if (!Number.isFinite(value)) {\r\n    return min;\r\n  }\r\n\r\n  if (max <= min) {\r\n    return min;\r\n  }\r\n\r\n  return Math.min(max, Math.max(min, value));\r\n};\r\n\r\nconst findRangeForValue = (ranges: GaugeRange[], value: number) =>\r\n  ranges.find(range => value >= range.from && value <= range.to);\r\n\r\nexport const DynGauge = forwardRef<HTMLDivElement, DynGaugeProps>((props, ref) => {\r\n  const {\r\n    value,\r\n    min = DYN_GAUGE_DEFAULT_PROPS.min,\r\n    max = DYN_GAUGE_DEFAULT_PROPS.max,\r\n    title,\r\n    label,\r\n    subtitle,\r\n    type = DYN_GAUGE_DEFAULT_PROPS.type,\r\n    unit = DYN_GAUGE_DEFAULT_PROPS.unit,\r\n    ranges = DYN_GAUGE_DEFAULT_PROPS.ranges,\r\n    showValue = DYN_GAUGE_DEFAULT_PROPS.showValue,\r\n    showRanges = DYN_GAUGE_DEFAULT_PROPS.showRanges,\r\n    size = DYN_GAUGE_DEFAULT_PROPS.size,\r\n    thickness = DYN_GAUGE_DEFAULT_PROPS.thickness,\r\n    rounded = DYN_GAUGE_DEFAULT_PROPS.rounded,\r\n    animated = DYN_GAUGE_DEFAULT_PROPS.animated,\r\n    color,\r\n    backgroundColor = DYN_GAUGE_DEFAULT_PROPS.backgroundColor,\r\n    className,\r\n    format,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const instanceId = useId();\r\n  const componentId = id ?? instanceId;\r\n  const titleId = title || label ? `${componentId}-title` : undefined;\r\n  const subtitleId = subtitle ? `${componentId}-subtitle` : undefined;\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const animationFrameRef = useRef<number | undefined>(undefined);\r\n  const currentValueRef = useRef<number>(clampGaugeValue(value, min, max));\r\n\r\n  const gaugeDimensions = gaugeDimensionsMap[size] ?? gaugeDimensionsMap.medium;\r\n  const resolvedTitle = title ?? label;\r\n  const safeValue = clampGaugeValue(value, min, max);\r\n\r\n  const numberFormatter = useMemo(\r\n    () =>\r\n      new Intl.NumberFormat(undefined, {\r\n        maximumFractionDigits: 1,\r\n      }),\r\n    []\r\n  );\r\n\r\n  const formatValue = useCallback(\r\n    (val: number): string => {\r\n      if (typeof format === 'function') {\r\n        return format(val);\r\n      }\r\n\r\n      const formattedNumber = numberFormatter.format(val);\r\n\r\n      if (!unit) {\r\n        return formattedNumber;\r\n      }\r\n\r\n      const trimmedUnit = unit.trim();\r\n      const shouldJoin = trimmedUnit.startsWith('%') || trimmedUnit.startsWith('°');\r\n\r\n      return shouldJoin\r\n        ? `${formattedNumber}${trimmedUnit}`\r\n        : `${formattedNumber} ${trimmedUnit}`;\r\n    },\r\n    [format, numberFormatter, unit]\r\n  );\r\n\r\n  const getColorForValue = useCallback(\r\n    (val: number) => {\r\n      if (typeof color === 'string' && color.length > 0) {\r\n        return color;\r\n      }\r\n\r\n      return findRangeForValue(ranges, val)?.color ?? '#0066cc';\r\n    },\r\n    [color, ranges]\r\n  );\r\n\r\n  const drawGauge = useCallback(\r\n    (displayValue: number) => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) {\r\n        return;\r\n      }\r\n\r\n      const context = canvas.getContext('2d');\r\n      if (!context) {\r\n        return;\r\n      }\r\n\r\n      const { width, height } = gaugeDimensions;\r\n      const centerX = width / 2;\r\n      const centerY = height / 2;\r\n      const radius = Math.min(width, height) / 2 - thickness / 2 - 10;\r\n      const startAngle = -Math.PI * 0.75;\r\n      const sweepAngle = Math.PI * 1.5;\r\n      const span = Math.max(max - min, Number.EPSILON);\r\n      const normalizedValue = (clampGaugeValue(displayValue, min, max) - min) / span;\r\n      const currentColor = getColorForValue(displayValue);\r\n\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      context.clearRect(0, 0, width, height);\r\n\r\n      context.beginPath();\r\n      context.arc(centerX, centerY, radius, startAngle, startAngle + sweepAngle);\r\n      context.strokeStyle = backgroundColor;\r\n      context.lineWidth = thickness;\r\n      context.lineCap = rounded ? 'round' : 'butt';\r\n      context.stroke();\r\n\r\n      if (showRanges && ranges.length > 0) {\r\n        for (const range of ranges) {\r\n          const rangeStart = startAngle + ((range.from - min) / span) * sweepAngle;\r\n          const rangeEnd = startAngle + ((range.to - min) / span) * sweepAngle;\r\n\r\n          context.beginPath();\r\n          context.arc(centerX, centerY, radius, rangeStart, rangeEnd);\r\n          context.strokeStyle = range.color;\r\n          context.lineWidth = thickness * 0.3;\r\n          context.lineCap = rounded ? 'round' : 'butt';\r\n          context.stroke();\r\n        }\r\n      }\r\n\r\n      if (normalizedValue > 0) {\r\n        const endAngle = startAngle + normalizedValue * sweepAngle;\r\n\r\n        context.beginPath();\r\n        context.arc(centerX, centerY, radius, startAngle, endAngle);\r\n        context.strokeStyle = currentColor;\r\n        context.lineWidth = thickness;\r\n        context.lineCap = rounded ? 'round' : 'butt';\r\n        context.stroke();\r\n      }\r\n\r\n      const tickCount = 11;\r\n      for (let index = 0; index < tickCount; index += 1) {\r\n        const angle = startAngle + (index / (tickCount - 1)) * sweepAngle;\r\n        const isMajorTick = index % 2 === 0;\r\n        const tickLength = isMajorTick ? 15 : 8;\r\n        const tickWidth = isMajorTick ? 2 : 1;\r\n\r\n        const outerRadius = radius + thickness / 2 + 5;\r\n        const innerRadius = outerRadius + tickLength;\r\n\r\n        const startX = centerX + Math.cos(angle) * outerRadius;\r\n        const startY = centerY + Math.sin(angle) * outerRadius;\r\n        const endX = centerX + Math.cos(angle) * innerRadius;\r\n        const endY = centerY + Math.sin(angle) * innerRadius;\r\n\r\n        context.beginPath();\r\n        context.moveTo(startX, startY);\r\n        context.lineTo(endX, endY);\r\n        context.strokeStyle = '#666666';\r\n        context.lineWidth = tickWidth;\r\n        context.lineCap = 'round';\r\n        context.stroke();\r\n\r\n        if (isMajorTick) {\r\n          const labelRadius = innerRadius + 15;\r\n          const labelX = centerX + Math.cos(angle) * labelRadius;\r\n          const labelY = centerY + Math.sin(angle) * labelRadius;\r\n          const tickValue = min + (index / (tickCount - 1)) * span;\r\n\r\n          context.fillStyle = '#666666';\r\n          context.font =\r\n            size === 'small'\r\n              ? '10px Arial'\r\n              : size === 'large'\r\n                ? '14px Arial'\r\n                : '12px Arial';\r\n          context.textAlign = 'center';\r\n          context.textBaseline = 'middle';\r\n          context.fillText(numberFormatter.format(tickValue), labelX, labelY);\r\n        }\r\n      }\r\n\r\n      const needleAngle = startAngle + normalizedValue * sweepAngle;\r\n      const needleLength = radius - 20;\r\n      const needleX = centerX + Math.cos(needleAngle) * needleLength;\r\n      const needleY = centerY + Math.sin(needleAngle) * needleLength;\r\n\r\n      context.beginPath();\r\n      context.arc(centerX, centerY, 8, 0, Math.PI * 2);\r\n      context.fillStyle = currentColor;\r\n      context.fill();\r\n\r\n      context.beginPath();\r\n      context.moveTo(centerX, centerY);\r\n      context.lineTo(needleX, needleY);\r\n      context.strokeStyle = currentColor;\r\n      context.lineWidth = 3;\r\n      context.lineCap = 'round';\r\n      context.stroke();\r\n\r\n      context.beginPath();\r\n      context.arc(centerX, centerY, 4, 0, Math.PI * 2);\r\n      context.fillStyle = '#ffffff';\r\n      context.fill();\r\n      context.strokeStyle = currentColor;\r\n      context.lineWidth = 2;\r\n      context.stroke();\r\n    },\r\n    [\r\n      backgroundColor,\r\n      gaugeDimensions,\r\n      getColorForValue,\r\n      max,\r\n      min,\r\n      numberFormatter,\r\n      ranges,\r\n      rounded,\r\n      showRanges,\r\n      size,\r\n      thickness,\r\n    ]\r\n  );\r\n\r\n  const animateToValue = useCallback(\r\n    (target: number) => {\r\n      const clampedTarget = clampGaugeValue(target, min, max);\r\n\r\n      if (!animated) {\r\n        currentValueRef.current = clampedTarget;\r\n        drawGauge(clampedTarget);\r\n        return;\r\n      }\r\n\r\n      const startValue = currentValueRef.current;\r\n      const distance = clampedTarget - startValue;\r\n\r\n      if (Math.abs(distance) <= 0.001) {\r\n        currentValueRef.current = clampedTarget;\r\n        drawGauge(clampedTarget);\r\n        return;\r\n      }\r\n\r\n      let startTime: number | null = null;\r\n      const duration = 800;\r\n\r\n      const step = (timestamp: number) => {\r\n        if (startTime === null) {\r\n          startTime = timestamp;\r\n        }\r\n\r\n        const elapsed = timestamp - startTime;\r\n        const progress = Math.min(elapsed / duration, 1);\r\n        const easedProgress = 1 - Math.pow(1 - progress, 3);\r\n        const nextValue = startValue + distance * easedProgress;\r\n\r\n        currentValueRef.current = nextValue;\r\n        drawGauge(nextValue);\r\n\r\n        if (progress < 1) {\r\n          animationFrameRef.current = requestAnimationFrame(step);\r\n        } else {\r\n          currentValueRef.current = clampedTarget;\r\n          drawGauge(clampedTarget);\r\n        }\r\n      };\r\n\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n\r\n      animationFrameRef.current = requestAnimationFrame(step);\r\n    },\r\n    [animated, drawGauge, max, min]\r\n  );\r\n\r\n  useEffect(() => {\r\n    animateToValue(value);\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [animateToValue, value]);\r\n\r\n  useEffect(() => {\r\n    drawGauge(currentValueRef.current);\r\n  }, [drawGauge]);\r\n\r\n  const currentRange = useMemo(\r\n    () => findRangeForValue(ranges, safeValue),\r\n    [ranges, safeValue]\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    sizeClassNameMap[size] ?? styles.sizeMedium,\r\n    typeClassNameMap[type],\r\n    animated && styles.animated,\r\n    rounded && styles.rounded,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      id={componentId}\r\n      role=\"progressbar\"\r\n      aria-valuemin={min}\r\n      aria-valuemax={max}\r\n      aria-valuenow={safeValue}\r\n      aria-labelledby={titleId}\r\n      aria-describedby={subtitleId}\r\n      data-testid={dataTestId ?? 'dyn-gauge'}\r\n      data-size={size}\r\n      data-type={type}\r\n      className={rootClassName}\r\n      {...rest}\r\n    >\r\n      <figure className={styles.figure}>\r\n        {(resolvedTitle || subtitle) && (\r\n          <header className={styles.header}>\r\n            {resolvedTitle ? (\r\n              <h3 id={titleId} className={styles.title}>\r\n                {resolvedTitle}\r\n              </h3>\r\n            ) : null}\r\n            {subtitle ? (\r\n              <p id={subtitleId} className={styles.subtitle}>\r\n                {subtitle}\r\n              </p>\r\n            ) : null}\r\n          </header>\r\n        )}\r\n\r\n        <div className={styles.content}>\r\n          <div className={styles.canvasContainer}>\r\n            <canvas\r\n              ref={canvasRef}\r\n              className={styles.canvas}\r\n              style={{\r\n                width: gaugeDimensions.width,\r\n                height: gaugeDimensions.height,\r\n              }}\r\n            />\r\n\r\n            {showValue ? (\r\n              <div className={styles.value}>\r\n                <span className={styles.valueText}>{formatValue(safeValue)}</span>\r\n                {currentRange?.label ? (\r\n                  <span className={styles.valueLabel}>{currentRange.label}</span>\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        {showRanges && ranges.length > 0 ? (\r\n          <figcaption className={styles.legend}>\r\n            {ranges.map((range, index) => (\r\n              <div\r\n                key={`${range.from}-${range.to}-${index}`}\r\n                className={styles.legendItem}\r\n              >\r\n                <span\r\n                  className={styles.legendColor}\r\n                  style={{ backgroundColor: range.color }}\r\n                  aria-hidden=\"true\"\r\n                />\r\n                <span className={styles.legendLabel}>\r\n                  {range.label ?? `${formatValue(range.from)} - ${formatValue(range.to)}`}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </figcaption>\r\n        ) : null}\r\n      </figure>\r\n    </div>\r\n  );\r\n});\r\n\r\nDynGauge.displayName = 'DynGauge';\r\n\r\nexport default DynGauge;\r\n","import type { HTMLAttributes, ReactNode } from 'react';\r\nimport type { BaseComponentProps } from '../../types';\r\nimport type { LayoutSize } from '../../types/layout.types';\r\n\r\nexport type DynGridSortDirection = 'asc' | 'desc';\r\n\r\nexport interface DynGridColumn {\r\n  key: string;\r\n  title: ReactNode;\r\n  width?: string | number;\r\n  minWidth?: string | number;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  resizable?: boolean;\r\n  render?: (value: unknown, record: Record<string, unknown>, index: number) => ReactNode;\r\n  align?: 'left' | 'center' | 'right';\r\n  fixed?: 'left' | 'right';\r\n  hidden?: boolean;\r\n}\r\n\r\nexport interface DynGridPagination {\r\n  current: number;\r\n  pageSize: number;\r\n  total: number;\r\n  showSizeChanger?: boolean;\r\n  showQuickJumper?: boolean;\r\n  showTotal?: (total: number, range: [number, number]) => ReactNode;\r\n  onChange?: (page: number, pageSize: number) => void;\r\n}\r\n\r\nexport type DynGridSelectable = boolean | 'single' | 'multiple';\r\n\r\nexport interface DynGridProps\r\n  extends BaseComponentProps,\r\n    Omit<HTMLAttributes<HTMLDivElement>, keyof BaseComponentProps | 'children'> {\r\n  columns: DynGridColumn[];\r\n  data: Record<string, unknown>[];\r\n  loading?: boolean;\r\n  size?: LayoutSize;\r\n  bordered?: boolean;\r\n  striped?: boolean;\r\n  hoverable?: boolean;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  selectable?: DynGridSelectable;\r\n  selectedKeys?: string[];\r\n  onSelectionChange?: (selectedKeys: string[], selectedRows: Record<string, unknown>[]) => void;\r\n  onSort?: (column: string, direction: DynGridSortDirection) => void;\r\n  onFilter?: (filters: Record<string, unknown>) => void;\r\n  pagination?: DynGridPagination;\r\n  emptyText?: ReactNode;\r\n}\r\n\r\nexport interface DynGridDefaultProps\r\n  extends Required<\r\n      Pick<\r\n        DynGridProps,\r\n        | 'loading'\r\n        | 'size'\r\n        | 'bordered'\r\n        | 'striped'\r\n        | 'hoverable'\r\n        | 'sortable'\r\n        | 'filterable'\r\n        | 'selectable'\r\n        | 'selectedKeys'\r\n        | 'emptyText'\r\n      >\r\n    > {\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_GRID_DEFAULT_PROPS: DynGridDefaultProps = {\r\n  loading: false,\r\n  size: 'medium',\r\n  bordered: true,\r\n  striped: false,\r\n  hoverable: true,\r\n  sortable: true,\r\n  filterable: false,\r\n  selectable: false,\r\n  selectedKeys: [],\r\n  emptyText: 'No data available',\r\n  'data-testid': 'dyn-grid',\r\n};\r\n","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport type { ReactNode } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport type {\r\n  DynGridColumn,\r\n  DynGridProps,\r\n  DynGridSortDirection,\r\n} from './DynGrid.types';\r\nimport { DYN_GRID_DEFAULT_PROPS } from './DynGrid.types';\r\nimport styles from './DynGrid.module.css';\r\n\r\nconst headerAlignClassMap: Record<'center' | 'right', string> = {\r\n  center: styles.headerCellAlignCenter,\r\n  right: styles.headerCellAlignRight,\r\n};\r\n\r\nconst cellAlignClassMap: Record<'center' | 'right', string> = {\r\n  center: styles.cellAlignCenter,\r\n  right: styles.cellAlignRight,\r\n};\r\n\r\nconst sizeClassNameMap: Record<NonNullable<DynGridProps['size']>, string | undefined> = {\r\n  small: styles.sizeSmall,\r\n  medium: undefined,\r\n  large: styles.sizeLarge,\r\n};\r\n\r\nconst DynGrid = forwardRef<HTMLDivElement, DynGridProps>((props, ref) => {\r\n  const {\r\n    columns,\r\n    data,\r\n    loading = DYN_GRID_DEFAULT_PROPS.loading,\r\n    size = DYN_GRID_DEFAULT_PROPS.size,\r\n    bordered = DYN_GRID_DEFAULT_PROPS.bordered,\r\n    striped = DYN_GRID_DEFAULT_PROPS.striped,\r\n    hoverable = DYN_GRID_DEFAULT_PROPS.hoverable,\r\n    sortable = DYN_GRID_DEFAULT_PROPS.sortable,\r\n    filterable = DYN_GRID_DEFAULT_PROPS.filterable,\r\n    selectable = DYN_GRID_DEFAULT_PROPS.selectable,\r\n    selectedKeys,\r\n    onSelectionChange,\r\n    onSort,\r\n    onFilter,\r\n    pagination,\r\n    emptyText = DYN_GRID_DEFAULT_PROPS.emptyText,\r\n    className,\r\n    id,\r\n    'data-testid': dataTestId = DYN_GRID_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  } = props;\r\n\r\n  const selectionName = useId();\r\n\r\n  void filterable;\r\n  void onFilter;\r\n\r\n  const selectionMode: 'none' | 'single' | 'multiple' = useMemo(() => {\r\n    if (selectable === 'single') {\r\n      return 'single';\r\n    }\r\n\r\n    if (selectable === 'multiple' || selectable === true) {\r\n      return 'multiple';\r\n    }\r\n\r\n    return 'none';\r\n  }, [selectable]);\r\n\r\n  const [sortConfig, setSortConfig] = useState<{\r\n    key: string;\r\n    direction: DynGridSortDirection;\r\n  } | null>(null);\r\n\r\n  const resolvedSelectedKeys = useMemo(\r\n    () => selectedKeys ?? DYN_GRID_DEFAULT_PROPS.selectedKeys,\r\n    [selectedKeys]\r\n  );\r\n\r\n  const [selectedRows, setSelectedRows] = useState<string[]>(resolvedSelectedKeys);\r\n\r\n  useEffect(() => {\r\n    setSelectedRows(resolvedSelectedKeys);\r\n  }, [resolvedSelectedKeys]);\r\n\r\n  const visibleColumns = useMemo(\r\n    () => columns.filter(column => !column.hidden),\r\n    [columns]\r\n  );\r\n\r\n  const getRowKey = useCallback((record: Record<string, unknown>, index: number) => {\r\n    const candidate =\r\n      (record.id as string | number | undefined) ??\r\n      (record.key as string | number | undefined) ??\r\n      (record.rowKey as string | number | undefined);\r\n\r\n    if (typeof candidate === 'string' || typeof candidate === 'number') {\r\n      return String(candidate);\r\n    }\r\n\r\n    return index.toString();\r\n  }, []);\r\n\r\n  const handleSort = useCallback(\r\n    (columnKey: string) => {\r\n      if (!sortable) {\r\n        return;\r\n      }\r\n\r\n      const column = visibleColumns.find(col => col.key === columnKey);\r\n      if (!column?.sortable) {\r\n        return;\r\n      }\r\n\r\n      let direction: DynGridSortDirection = 'asc';\r\n\r\n      if (sortConfig?.key === columnKey && sortConfig.direction === 'asc') {\r\n        direction = 'desc';\r\n      }\r\n\r\n      setSortConfig({ key: columnKey, direction });\r\n      onSort?.(columnKey, direction);\r\n    },\r\n    [sortable, visibleColumns, sortConfig, onSort]\r\n  );\r\n\r\n  const getSelectedRowData = useCallback(\r\n    (keys: string[]): Record<string, unknown>[] =>\r\n      keys\r\n        .map(key => {\r\n          const rowIndex = data.findIndex((record, index) => getRowKey(record, index) === key);\r\n          return rowIndex >= 0 ? data[rowIndex] : undefined;\r\n        })\r\n        .filter((record): record is Record<string, unknown> => Boolean(record)),\r\n    [data, getRowKey]\r\n  );\r\n\r\n  const handleRowSelect = useCallback(\r\n    (rowKey: string, selected: boolean) => {\r\n      if (selectionMode === 'none') {\r\n        return;\r\n      }\r\n\r\n      let newSelection: string[];\r\n\r\n      if (selectionMode === 'single') {\r\n        newSelection = selected ? [rowKey] : [];\r\n      } else {\r\n        newSelection = selected\r\n          ? [...new Set([...selectedRows, rowKey])]\r\n          : selectedRows.filter(key => key !== rowKey);\r\n      }\r\n\r\n      setSelectedRows(newSelection);\r\n      onSelectionChange?.(newSelection, getSelectedRowData(newSelection));\r\n    },\r\n    [selectionMode, selectedRows, onSelectionChange, getSelectedRowData]\r\n  );\r\n\r\n  const handleSelectAll = useCallback(\r\n    (selected: boolean) => {\r\n      if (selectionMode !== 'multiple') {\r\n        return;\r\n      }\r\n\r\n      const allKeys = data.map((record, index) => getRowKey(record, index));\r\n      const newSelection = selected ? allKeys : [];\r\n\r\n      setSelectedRows(newSelection);\r\n      onSelectionChange?.(newSelection, selected ? data : []);\r\n    },\r\n    [selectionMode, data, getRowKey, onSelectionChange]\r\n  );\r\n\r\n  const renderCell = useCallback(\r\n    (column: DynGridColumn, record: Record<string, unknown>, rowIndex: number) => {\r\n      if (column.render) {\r\n        return column.render(record[column.key], record, rowIndex);\r\n      }\r\n\r\n      return record[column.key] as ReactNode;\r\n    },\r\n    []\r\n  );\r\n\r\n  const isAllSelected = useMemo(() => {\r\n    if (selectionMode !== 'multiple' || data.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const allKeys = data.map((record, index) => getRowKey(record, index));\r\n    return allKeys.every(key => selectedRows.includes(key));\r\n  }, [selectionMode, data, getRowKey, selectedRows]);\r\n\r\n  const isSelectionIndeterminate = useMemo(() => {\r\n    if (selectionMode !== 'multiple' || data.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const selectedCount = data.filter((record, index) => selectedRows.includes(getRowKey(record, index))).length;\r\n    return selectedCount > 0 && selectedCount < data.length;\r\n  }, [selectionMode, data, getRowKey, selectedRows]);\r\n\r\n  const gridClassName = cn(\r\n    styles.root,\r\n    sizeClassNameMap[size],\r\n    bordered && styles.bordered,\r\n    striped && styles.striped,\r\n    hoverable && styles.hoverable,\r\n    loading && styles.loading,\r\n    className\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div ref={ref} className={gridClassName} id={id} data-testid={dataTestId} {...rest}>\r\n        <div className={styles.loadingState} role=\"status\" aria-live=\"polite\">\r\n          <div className={styles.spinner} aria-hidden=\"true\" />\r\n          <span>Loading data…</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div ref={ref} className={gridClassName} id={id} data-testid={dataTestId} {...rest}>\r\n        <div className={styles.emptyState}>\r\n          {typeof emptyText === 'string' ? (\r\n            <span>{emptyText}</span>\r\n          ) : (\r\n            emptyText\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} className={gridClassName} id={id} data-testid={dataTestId} {...rest}>\r\n      <div className={styles.wrapper}>\r\n        <table className={styles.table} role=\"table\">\r\n          <thead className={styles.header}>\r\n            <tr className={styles.headerRow}>\r\n              {selectionMode === 'multiple' && (\r\n                <th className={cn(styles.headerCell, styles.selectionCell)} scope=\"col\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className={styles.checkbox}\r\n                    checked={isAllSelected}\r\n                    onChange={event => handleSelectAll(event.target.checked)}\r\n                    aria-checked={isSelectionIndeterminate ? 'mixed' : isAllSelected}\r\n                    aria-label=\"Select all rows\"\r\n                  />\r\n                </th>\r\n              )}\r\n              {visibleColumns.map(column => {\r\n                const isSorted = sortConfig?.key === column.key;\r\n                const direction = isSorted ? sortConfig?.direction : undefined;\r\n                const headerAlignmentClass =\r\n                  column.align && column.align !== 'left'\r\n                    ? headerAlignClassMap[column.align]\r\n                    : undefined;\r\n\r\n                return (\r\n                  <th\r\n                    key={column.key}\r\n                    className={cn(\r\n                      styles.headerCell,\r\n                      headerAlignmentClass,\r\n                      column.sortable && sortable && styles.headerCellSortable,\r\n                      isSorted && styles.headerCellSorted\r\n                    )}\r\n                    style={{ width: column.width, minWidth: column.minWidth }}\r\n                    onClick={() => column.sortable && handleSort(column.key)}\r\n                    aria-sort={\r\n                      column.sortable && sortable\r\n                        ? direction === 'asc'\r\n                          ? 'ascending'\r\n                          : direction === 'desc'\r\n                          ? 'descending'\r\n                          : 'none'\r\n                        : undefined\r\n                    }\r\n                    scope=\"col\"\r\n                  >\r\n                    <div className={styles.headerContent}>\r\n                      <span>{column.title}</span>\r\n                      {column.sortable && sortable && (\r\n                        <span className={styles.sortIndicator} aria-hidden=\"true\">\r\n                          {isSorted ? (direction === 'asc' ? '↑' : '↓') : '↕'}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.body}>\r\n            {data.map((record, rowIndex) => {\r\n              const rowKey = getRowKey(record, rowIndex);\r\n              const isSelected = selectedRows.includes(rowKey);\r\n\r\n              return (\r\n                <tr\r\n                  key={rowKey}\r\n                  className={cn(\r\n                    styles.row,\r\n                    rowIndex % 2 === 0 ? styles.rowEven : styles.rowOdd,\r\n                    isSelected && styles.rowSelected\r\n                  )}\r\n                  role=\"row\"\r\n                >\r\n                  {selectionMode !== 'none' && (\r\n                    <td className={cn(styles.cell, styles.selectionCell)}>\r\n                      <input\r\n                        type={selectionMode === 'single' ? 'radio' : 'checkbox'}\r\n                        className={styles.checkbox}\r\n                        name={selectionMode === 'single' ? selectionName : undefined}\r\n                        checked={isSelected}\r\n                        onChange={event => handleRowSelect(rowKey, event.target.checked)}\r\n                        aria-label={`Select row ${rowIndex + 1}`}\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  {visibleColumns.map(column => (\r\n                    <td\r\n                      key={column.key}\r\n                      className={cn(\r\n                        styles.cell,\r\n                        column.align && column.align !== 'left'\r\n                          ? cellAlignClassMap[column.align]\r\n                          : undefined\r\n                      )}\r\n                    >\r\n                      {renderCell(column, record, rowIndex)}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {pagination && (\r\n        <div className={styles.pagination} role=\"navigation\" aria-label=\"Table pagination\">\r\n          <div className={styles.paginationInfo}>\r\n            {pagination.showTotal?.(\r\n              pagination.total,\r\n              [\r\n                (pagination.current - 1) * pagination.pageSize + 1,\r\n                Math.min(pagination.current * pagination.pageSize, pagination.total),\r\n              ]\r\n            )}\r\n          </div>\r\n          <div className={styles.paginationControls}>\r\n            <span>\r\n              Page {pagination.current} of {Math.ceil(pagination.total / pagination.pageSize)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nDynGrid.displayName = 'DynGrid';\r\n\r\nexport { DynGrid };\r\nexport default DynGrid;\r\n","/**\r\n * Input masking hook for DYN UI input components\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\n\r\ninterface MaskOptions {\r\n  mask?: string;\r\n  formatModel?: boolean;\r\n}\r\n\r\n/**\r\n * Hook for input masking functionality\r\n * @param mask - Mask pattern (e.g., \"(##) ####-####\" for phone)\r\n * @param initialValue - Initial value\r\n * @param formatModel - Whether to format the model value\r\n * @returns Masked value, unmasked value, and change handler\r\n */\r\nexport const useDynMask = (\r\n  mask?: string,\r\n  initialValue: string = '',\r\n  formatModel: boolean = false\r\n) => {\r\n  const [maskedValue, setMaskedValue] = useState<string>(\r\n    mask ? applyMask(initialValue, mask) : initialValue\r\n  );\r\n\r\n  const unmaskValue = useCallback((value: string): string => {\r\n    if (!mask) return value;\r\n    return value.replace(/[^0-9a-zA-Z]/g, '');\r\n  }, [mask]);\r\n\r\n  const handleMaskedChange = useCallback((newValue: string): string => {\r\n    if (!mask) return newValue;\r\n    \r\n    const maskedResult = applyMask(newValue, mask);\r\n    setMaskedValue(maskedResult);\r\n    \r\n    return formatModel ? maskedResult : unmaskValue(maskedResult);\r\n  }, [mask, formatModel, unmaskValue]);\r\n\r\n  return {\r\n    maskedValue,\r\n    unmaskValue,\r\n    handleMaskedChange\r\n  };\r\n};\r\n\r\n/**\r\n * Apply mask to a value\r\n * @param value - Input value\r\n * @param mask - Mask pattern\r\n * @returns Masked value\r\n */\r\nfunction applyMask(value: string, mask: string): string {\r\n  if (!mask || !value) return value;\r\n\r\n  const cleanValue = value.replace(/[^0-9a-zA-Z]/g, '');\r\n  let maskedValue = '';\r\n  let valueIndex = 0;\r\n\r\n  for (let i = 0; i < mask.length && valueIndex < cleanValue.length; i++) {\r\n    const maskChar = mask[i];\r\n    \r\n    if (maskChar === '#') {\r\n      // Numeric placeholder\r\n      if (/[0-9]/.test(cleanValue[valueIndex])) {\r\n        maskedValue += cleanValue[valueIndex];\r\n        valueIndex++;\r\n      } else {\r\n        break;\r\n      }\r\n    } else if (maskChar === 'A') {\r\n      // Alpha placeholder\r\n      if (/[a-zA-Z]/.test(cleanValue[valueIndex])) {\r\n        maskedValue += cleanValue[valueIndex];\r\n        valueIndex++;\r\n      } else {\r\n        break;\r\n      }\r\n    } else if (maskChar === '*') {\r\n      // Alphanumeric placeholder\r\n      maskedValue += cleanValue[valueIndex];\r\n      valueIndex++;\r\n    } else {\r\n      // Literal character\r\n      maskedValue += maskChar;\r\n    }\r\n  }\r\n\r\n  return maskedValue;\r\n}\r\n\r\n/**\r\n * Predefined mask patterns\r\n */\r\nexport const MASK_PATTERNS = {\r\n  phone: '(##) ####-####',\r\n  phoneWithCountry: '+## (##) ####-####',\r\n  cpf: '###.###.###-##',\r\n  cnpj: '##.###.###/####-##',\r\n  cep: '#####-###',\r\n  creditCard: '#### #### #### ####',\r\n  date: '##/##/####',\r\n  time: '##:##',\r\n  currency: '###.###.###,##'\r\n} as const;\r\n\r\n/**\r\n * Get mask pattern by type\r\n * @param type - Mask type\r\n * @returns Mask pattern\r\n */\r\nexport const getMaskPattern = (type: keyof typeof MASK_PATTERNS): string => {\r\n  return MASK_PATTERNS[type];\r\n};","/**\r\n * DynInput - Advanced input component with validation and masking\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback\r\n} from 'react';\r\nimport styles from './DynInput.module.css';\r\nimport { cn } from '../../utils/classNames';\r\n\r\nimport type {\r\n  DynInputProps,\r\n  DynInputRef,\r\n  CurrencyInputConfig,\r\n} from './DynInput.types';\r\nimport type { ValidationRule } from '../../types/field.types';\r\nimport type { DynCurrencyConfig } from '../../utils/dynFormatters';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { useDynMask } from '../../hooks/useDynMask';\r\nimport { DynIcon } from '../DynIcon';\r\n// NOTE: DynInput implements its own formatting helpers; do not import formatCurrencyValue\r\n// from utils to avoid name collision with local implementations.\r\n\r\ninterface ResolvedCurrencyConfig {\r\n  currencyCode: string;\r\n  precision: number;\r\n  thousandSeparator: string;\r\n  decimalSeparator: string;\r\n  showSymbol: boolean;\r\n  symbol: string;\r\n  symbolPosition: 'prefix' | 'suffix';\r\n  autoFormat: boolean;\r\n  symbolSpacing: string;\r\n}\r\n\r\nconst DEFAULT_CURRENCY_CODE = 'BRL';\r\nconst DEFAULT_PRECISION = 2;\r\n\r\nconst getStyleClass = (className: string): string => styles[className] ?? className;\r\n\r\nexport const DynInput = forwardRef<DynInputRef, DynInputProps>(\r\n  (\r\n    {\r\n      name,\r\n      id,\r\n      label,\r\n      help,\r\n      helpText,\r\n      placeholder,\r\n      disabled = false,\r\n      readOnly,\r\n      readonly,\r\n      required = false,\r\n      optional = false,\r\n      visible = true,\r\n      value: propValue = '',\r\n      showSpinButtons = false,\r\n      errorMessage,\r\n      validation,\r\n      validationRules,\r\n      className,\r\n      type = 'text',\r\n      size = 'medium',\r\n      maxLength,\r\n      minLength,\r\n      mask,\r\n      maskFormatModel = false,\r\n      pattern,\r\n      icon,\r\n      showClearButton,\r\n      showCleanButton,\r\n      step,\r\n      min,\r\n      max,\r\n      currencyConfig,\r\n      onChange,\r\n      onBlur,\r\n      onFocus,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const { ['aria-describedby']: ariaDescribedBy, ...restProps } = rest;\r\n    const isCurrencyType = type === 'currency';\r\n    const resolvedCurrencyConfig = useMemo(\r\n      () => resolveCurrencyConfig(currencyConfig, type),\r\n      [currencyConfig, type]\r\n    );\r\n\r\n    const [inputValue, setInputValue] = useState<string>(() =>\r\n      initializeInputValue(propValue, type, resolvedCurrencyConfig)\r\n    );\r\n    const [focused, setFocused] = useState(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    // generate stable id for the input when not provided\r\n    const generatedIdRef = useRef<string>(`dyn-input-${Math.random().toString(36).slice(2, 9)}`);\r\n    const inputId = id ?? name ?? generatedIdRef.current;\r\n    const isReadOnly = Boolean(readOnly ?? readonly);\r\n    const fieldHelpText = helpText ?? help;\r\n    const shouldShowClearButton = Boolean(showClearButton ?? showCleanButton);\r\n\r\n    const normalizedValidationRules = useMemo<ValidationRule[] | undefined>(() => {\r\n      const collected: ValidationRule[] = [];\r\n\r\n      const pushRules = (rules?: DynInputProps['validation']) => {\r\n        if (!rules) {\r\n          return;\r\n        }\r\n\r\n        if (Array.isArray(rules)) {\r\n          collected.push(...rules);\r\n        } else {\r\n          collected.push(rules);\r\n        }\r\n      };\r\n\r\n      pushRules(validation);\r\n      if (validationRules?.length) {\r\n        collected.push(...validationRules);\r\n      }\r\n\r\n      return collected.length > 0 ? collected : undefined;\r\n    }, [validation, validationRules]);\r\n\r\n    const { error, validate, clearError: clearValidationError } = useDynFieldValidation({\r\n      value: inputValue,\r\n      required,\r\n      validation: normalizedValidationRules,\r\n      customError: errorMessage\r\n    });\r\n\r\n    const resolvedMaskPattern = typeof mask === 'string' ? mask : mask?.pattern;\r\n    const resolvedMaskFormatModel =\r\n      typeof mask === 'object' && mask !== null\r\n        ? mask.formatModel ?? maskFormatModel\r\n        : maskFormatModel;\r\n\r\n    const { maskedValue, unmaskValue, handleMaskedChange } = useDynMask(\r\n      resolvedMaskPattern,\r\n      inputValue,\r\n      resolvedMaskFormatModel\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      focus: () => inputRef.current?.focus(),\r\n      blur: () => inputRef.current?.blur(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setInputValue('');\r\n        onChange?.('');\r\n        clearValidationError();\r\n      },\r\n      clearError: () => {\r\n        clearValidationError();\r\n      },\r\n      getValue: () => {\r\n        if (isCurrencyType) {\r\n          const numericValue = parseCurrencyLikeValue(inputValue, resolvedCurrencyConfig);\r\n          return numericValue ?? '';\r\n        }\r\n        return mask && !maskFormatModel ? unmaskValue(inputValue) : inputValue;\r\n      },\r\n      setValue: (newValue: string | number | null | undefined) => {\r\n        if (isCurrencyType) {\r\n          const numericValue = parseCurrencyLikeValue(newValue, resolvedCurrencyConfig);\r\n          if (numericValue == null) {\r\n            setInputValue('');\r\n            onChange?.('');\r\n            return;\r\n          }\r\n\r\n          const normalizedValue = roundToPrecision(numericValue, resolvedCurrencyConfig.precision);\r\n          const formattedValue = resolvedCurrencyConfig.autoFormat\r\n            ? formatCurrencyValue(normalizedValue, { ...resolvedCurrencyConfig, showSymbol: false })\r\n            : formatPlainCurrencyValue(normalizedValue, resolvedCurrencyConfig);\r\n\r\n          setInputValue(formattedValue);\r\n          onChange?.(normalizedValue);\r\n          return;\r\n        }\r\n\r\n        const stringValue = newValue == null ? '' : String(newValue);\r\n        setInputValue(stringValue);\r\n        onChange?.(stringValue);\r\n      },\r\n      getElement: () => inputRef.current\r\n    }));\r\n\r\n    const mergedCurrencyConfig = useMemo<Required<DynCurrencyConfig> & {\r\n      showCurrencyCode: boolean;\r\n    }>(() => {\r\n      const defaultConfig: Required<DynCurrencyConfig> & {\r\n        showCurrencyCode: boolean;\r\n      } = {\r\n        symbol: 'R$',\r\n        currencyCode: 'BRL',\r\n        showCurrencyCode: false,\r\n        precision: 2,\r\n        decimalSeparator: ',',\r\n        thousandSeparator: '.'\r\n      };\r\n\r\n      return {\r\n        ...defaultConfig,\r\n        ...(currencyConfig ?? {})\r\n      };\r\n    }, [currencyConfig]);\r\n\r\n    const sanitizeCurrencyValue = useCallback(\r\n      (rawValue: string | number | null | undefined) => {\r\n        if (rawValue == null || rawValue === '') {\r\n          return '';\r\n        }\r\n\r\n        const valueAsString = String(rawValue);\r\n        const { decimalSeparator, thousandSeparator, symbol, currencyCode } =\r\n          mergedCurrencyConfig;\r\n\r\n        let sanitized = valueAsString.replace(/\\s/g, '');\r\n\r\n        if (symbol) {\r\n          sanitized = sanitized.replace(new RegExp(escapeRegExp(symbol), 'g'), '');\r\n        }\r\n\r\n        if (currencyCode) {\r\n          sanitized = sanitized.replace(new RegExp(escapeRegExp(currencyCode), 'gi'), '');\r\n        }\r\n\r\n        const allowedSeparator = decimalSeparator ?? '.';\r\n        sanitized = sanitized.replace(\r\n          new RegExp(`[^0-9${escapeRegExp(allowedSeparator)}\\\\.\\\\-]`, 'g'),\r\n          ''\r\n        );\r\n\r\n        const dotMatches = sanitized.match(/\\./g) ?? [];\r\n        let decimalMarker: string | null = null;\r\n\r\n        if (sanitized.includes(allowedSeparator)) {\r\n          decimalMarker = allowedSeparator;\r\n        } else if (sanitized.includes('.')) {\r\n          const digitsAfterLastDot = sanitized.length - sanitized.lastIndexOf('.') - 1;\r\n          if (\r\n            thousandSeparator === '.' &&\r\n            (dotMatches.length > 1 || digitsAfterLastDot === 3)\r\n          ) {\r\n            decimalMarker = null;\r\n          } else {\r\n            decimalMarker = '.';\r\n          }\r\n        }\r\n\r\n        if (thousandSeparator && thousandSeparator !== decimalMarker) {\r\n          sanitized = sanitized.replace(new RegExp(escapeRegExp(thousandSeparator), 'g'), '');\r\n        }\r\n\r\n        if (decimalMarker) {\r\n          const escapedDecimal = escapeRegExp(decimalMarker);\r\n          const lastDecimalIndex = sanitized.lastIndexOf(decimalMarker);\r\n          if (lastDecimalIndex !== -1) {\r\n            const before = sanitized\r\n              .slice(0, lastDecimalIndex)\r\n              .replace(new RegExp(escapedDecimal, 'g'), '')\r\n              .replace(/\\./g, '');\r\n            const after = sanitized\r\n              .slice(lastDecimalIndex + 1)\r\n              .replace(new RegExp(escapedDecimal, 'g'), '')\r\n              .replace(/\\./g, '');\r\n            sanitized = `${before}.${after}`;\r\n          }\r\n        }\r\n\r\n        sanitized = sanitized.replace(/[^0-9.\\-]/g, '');\r\n\r\n        const minusIndex = sanitized.indexOf('-');\r\n        if (minusIndex > 0) {\r\n          sanitized = sanitized.replace(/-/g, '');\r\n        } else if (minusIndex === 0) {\r\n          sanitized = `-${sanitized.slice(1).replace(/-/g, '')}`;\r\n        } else {\r\n          sanitized = sanitized.replace(/-/g, '');\r\n        }\r\n\r\n        if (sanitized.split('.').length > 2) {\r\n          const [integerPart, ...decimalParts] = sanitized.split('.');\r\n          sanitized = `${integerPart}.${decimalParts.join('')}`;\r\n        }\r\n\r\n        return sanitized;\r\n      },\r\n      [mergedCurrencyConfig]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (isCurrencyType) {\r\n        const formattedValue = initializeInputValue(propValue, type, resolvedCurrencyConfig);\r\n        setInputValue(formattedValue);\r\n      } else {\r\n        const stringValue = propValue == null ? '' : String(propValue);\r\n        setInputValue(stringValue);\r\n      }\r\n    }, [propValue, isCurrencyType, type, resolvedCurrencyConfig]);\r\n\r\n    const handleCurrencyChange = (rawValue: string) => {\r\n      processCurrencyChange(rawValue, resolvedCurrencyConfig, setInputValue, onChange);\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const newValue = e.target.value;\r\n\r\n      if (mask) {\r\n        const processedValue = handleMaskedChange(newValue);\r\n        setInputValue(processedValue);\r\n        onChange?.(maskFormatModel ? processedValue : unmaskValue(processedValue));\r\n      } else if (isCurrencyType) {\r\n        handleCurrencyChange(newValue);\r\n      } else {\r\n        setInputValue(newValue);\r\n\r\n        if (type === 'number') {\r\n          if (newValue === '' || newValue === '-' || newValue === '.') {\r\n            onChange?.('');\r\n          } else {\r\n            const numericValue = Number(newValue);\r\n            onChange?.(Number.isNaN(numericValue) ? newValue : numericValue);\r\n          }\r\n        } else {\r\n          onChange?.(newValue);\r\n        }\r\n      }\r\n\r\n      clearValidationError();\r\n    };\r\n\r\n    const handleStepChange = useCallback(\r\n      (direction: 1 | -1) => {\r\n        if (disabled || isReadOnly) return;\r\n\r\n        const stepValue = step ?? 1;\r\n        const currentNumeric = type === 'currency'\r\n          ? (parseCurrencyLikeValue(inputValue, resolvedCurrencyConfig) ?? 0)\r\n          : Number(inputValue || 0);\r\n\r\n        const baseValue = Number.isNaN(currentNumeric) ? 0 : currentNumeric;\r\n        let nextValue = baseValue + direction * stepValue;\r\n\r\n        if (typeof min === 'number') {\r\n          nextValue = Math.max(nextValue, min);\r\n        }\r\n\r\n        if (typeof max === 'number') {\r\n          nextValue = Math.min(nextValue, max);\r\n        }\r\n\r\n        const nextValueString = String(nextValue);\r\n\r\n        if (type === 'currency') {\r\n          const normalizedNext = roundToPrecision(nextValue, resolvedCurrencyConfig.precision);\r\n          const formatted = resolvedCurrencyConfig.autoFormat\r\n            ? formatCurrencyValue(normalizedNext, { ...resolvedCurrencyConfig, showSymbol: false })\r\n            : formatPlainCurrencyValue(normalizedNext, resolvedCurrencyConfig);\r\n          setInputValue(formatted);\r\n          onChange?.(normalizedNext);\r\n        } else {\r\n          setInputValue(nextValueString);\r\n          onChange?.(type === 'number' ? nextValue : nextValueString);\r\n        }\r\n\r\n        clearValidationError();\r\n      },\r\n      [\r\n        clearValidationError,\r\n        disabled,\r\n        inputValue,\r\n        isReadOnly,\r\n        max,\r\n        min,\r\n        onChange,\r\n        resolvedCurrencyConfig,\r\n        step,\r\n        type\r\n      ]\r\n    );\r\n\r\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(false);\r\n      validate();\r\n      onBlur?.(event);\r\n    };\r\n\r\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(true);\r\n      clearValidationError();\r\n      onFocus?.(event);\r\n    };\r\n\r\n    const handleClean = () => {\r\n      setInputValue('');\r\n      onChange?.('');\r\n      clearValidationError();\r\n      inputRef.current?.focus();\r\n    };\r\n\r\n    if (!visible) return null;\r\n\r\n    const showSpin = showSpinButtons && (type === 'number' || type === 'currency');\r\n\r\n    const inputClasses = cn(\r\n      getStyleClass('dyn-input'),\r\n      getStyleClass(`dyn-input--${size}`),\r\n      focused && getStyleClass('dyn-input--focused'),\r\n      !!error && getStyleClass('dyn-input--error'),\r\n      disabled && getStyleClass('dyn-input--disabled'),\r\n      isReadOnly && getStyleClass('dyn-input--readonly'),\r\n      !!icon && getStyleClass('dyn-input--with-icon'),\r\n      !!(shouldShowClearButton && inputValue && !isReadOnly && !disabled) &&\r\n        getStyleClass('dyn-input--cleanable')\r\n    );\r\n\r\n    const displayValue = mask ? maskedValue : inputValue;\r\n\r\n    const containerDivClass = cn(\r\n      getStyleClass('dyn-input-container'),\r\n      className,\r\n      type === 'currency' && getStyleClass('dyn-input-container--currency'),\r\n      showSpin && getStyleClass('dyn-input-container--with-spin-buttons')\r\n    );\r\n\r\n    const errorId = `${inputId}-error`;\r\n    const helpId = `${inputId}-help`;\r\n    const describedBy = [\r\n      ariaDescribedBy,\r\n      help ? helpId : undefined,\r\n      error ? errorId : undefined\r\n    ]\r\n      .filter(Boolean)\r\n      .join(' ') || undefined;\r\n\r\n    return (\r\n      <DynFieldContainer\r\n        label={label}\r\n        helpText={fieldHelpText}\r\n        required={required}\r\n        optional={optional}\r\n        errorText={error}\r\n        className={className}\r\n        htmlFor={inputId}\r\n        id={id}\r\n      >\r\n        <div className={containerDivClass}>\r\n          {type === 'currency' && resolvedCurrencyConfig.symbol && (\r\n            <span className={getStyleClass('dyn-input-currency-symbol')} aria-hidden=\"true\">\r\n              {resolvedCurrencyConfig.symbol}\r\n            </span>\r\n          )}\r\n\r\n          {icon && (\r\n            <div className={getStyleClass('dyn-input-icon-container')}>\r\n              <DynIcon icon={icon} />\r\n            </div>\r\n          )}\r\n\r\n          <input\r\n            ref={inputRef}\r\n            id={inputId}\r\n            name={name}\r\n            type={type === 'number' || isCurrencyType ? 'text' : type}\r\n            className={inputClasses}\r\n            placeholder={placeholder}\r\n            value={displayValue}\r\n            disabled={disabled}\r\n            readOnly={isReadOnly}\r\n            required={required}\r\n            aria-required={required}\r\n            aria-disabled={disabled}\r\n            maxLength={maxLength}\r\n            minLength={minLength}\r\n            pattern={pattern}\r\n            step={type === 'number' ? step : undefined}\r\n            min={type === 'number' ? min : undefined}\r\n            max={type === 'number' ? max : undefined}\r\n            inputMode={type === 'number' || isCurrencyType ? 'decimal' : undefined}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            onFocus={handleFocus}\r\n            aria-invalid={!!error}\r\n            aria-describedby={describedBy}\r\n            {...restProps}\r\n          />\r\n\r\n          {shouldShowClearButton && inputValue && !isReadOnly && !disabled && (\r\n            <button\r\n              type=\"button\"\r\n              className={getStyleClass('dyn-input-clean-button')}\r\n              onClick={handleClean}\r\n              tabIndex={-1}\r\n              aria-label=\"Limpar campo\"\r\n            >\r\n              <DynIcon icon=\"dyn-icon-close\" />\r\n            </button>\r\n          )}\r\n\r\n          {showSpin && (\r\n            <div\r\n              className={getStyleClass('dyn-input-spin-buttons')}\r\n              aria-hidden={disabled || isReadOnly}\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                className={cn(\r\n                  getStyleClass('dyn-input-spin-button'),\r\n                  getStyleClass('dyn-input-spin-button--increment')\r\n                )}\r\n                onClick={() => handleStepChange(1)}\r\n                tabIndex={-1}\r\n                aria-label=\"Increase value\"\r\n                disabled={disabled || isReadOnly}\r\n              >\r\n                ▲\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={cn(\r\n                  getStyleClass('dyn-input-spin-button'),\r\n                  getStyleClass('dyn-input-spin-button--decrement')\r\n                )}\r\n                onClick={() => handleStepChange(-1)}\r\n                tabIndex={-1}\r\n                aria-label=\"Decrease value\"\r\n                disabled={disabled || isReadOnly}\r\n              >\r\n                ▼\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DynFieldContainer>\r\n    );\r\n  }\r\n);\r\n\r\nDynInput.displayName = 'DynInput';\r\n\r\nexport default DynInput;\r\n\r\nfunction resolveCurrencyConfig(\r\n  config: CurrencyInputConfig | undefined,\r\n  type: DynInputProps['type']\r\n): ResolvedCurrencyConfig {\r\n  const precision = Math.max(0, config?.precision ?? DEFAULT_PRECISION);\r\n  const currencyCode = config?.currencyCode ?? DEFAULT_CURRENCY_CODE;\r\n\r\n  if (type !== 'currency') {\r\n    return {\r\n      currencyCode,\r\n      precision,\r\n      thousandSeparator: config?.thousandSeparator ?? ',',\r\n      decimalSeparator: config?.decimalSeparator ?? '.',\r\n      showSymbol: config?.showSymbol ?? true,\r\n      symbol: config?.symbol ?? currencyCode,\r\n      symbolPosition: config?.symbolPosition ?? 'prefix',\r\n      autoFormat: config?.autoFormat ?? true,\r\n      symbolSpacing: ' '\r\n    };\r\n  }\r\n\r\n  const defaults = deriveCurrencyDefaults(currencyCode, precision);\r\n\r\n  return {\r\n    currencyCode,\r\n    precision,\r\n    thousandSeparator: config?.thousandSeparator ?? defaults.group,\r\n    decimalSeparator: config?.decimalSeparator ?? defaults.decimal,\r\n    showSymbol: config?.showSymbol ?? true,\r\n    symbol: config?.symbol ?? defaults.symbol,\r\n    symbolPosition: config?.symbolPosition ?? 'prefix',\r\n    autoFormat: config?.autoFormat ?? true,\r\n    symbolSpacing: defaults.spacing\r\n  };\r\n}\r\n\r\nfunction initializeInputValue(\r\n  value: string | number,\r\n  type: DynInputProps['type'],\r\n  config: ResolvedCurrencyConfig\r\n): string {\r\n  if (type === 'currency') {\r\n    const numericValue = parseCurrencyLikeValue(value, config);\r\n    if (numericValue == null) {\r\n      return typeof value === 'string' ? value : '';\r\n    }\r\n\r\n    const normalizedValue = roundToPrecision(numericValue, config.precision);\r\n    // Input should not include the currency symbol (it's rendered separately)\r\n    return config.autoFormat\r\n      ? formatCurrencyValue(normalizedValue, { ...config, showSymbol: false })\r\n      : formatPlainCurrencyValue(normalizedValue, config);\r\n  }\r\n\r\n  if (value == null) return '';\r\n  return typeof value === 'string' ? value : String(value);\r\n}\r\n\r\nfunction parseCurrencyLikeValue(\r\n  value: unknown,\r\n  config: ResolvedCurrencyConfig\r\n): number | null {\r\n  if (value == null || value === '') {\r\n    return null;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return Number.isFinite(value) ? value : null;\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    const sanitized = sanitizeCurrencyInput(value, config);\r\n    if (!/[0-9]/.test(sanitized)) {\r\n      return null;\r\n    }\r\n\r\n    const numericValue = Number(sanitized);\r\n    return Number.isNaN(numericValue) ? null : numericValue;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction processCurrencyChange(\r\n  rawValue: string,\r\n  config: ResolvedCurrencyConfig,\r\n  setValue: (value: string) => void,\r\n  notifyChange?: DynInputProps['onChange']\r\n) {\r\n  const sanitizedValue = sanitizeCurrencyInput(rawValue, config);\r\n\r\n  if (!/[0-9]/.test(sanitizedValue)) {\r\n    setValue(rawValue);\r\n    notifyChange?.('');\r\n    return;\r\n  }\r\n\r\n  const numericValue = Number(sanitizedValue);\r\n\r\n  if (Number.isNaN(numericValue)) {\r\n    setValue(rawValue);\r\n    notifyChange?.(sanitizedValue);\r\n    return;\r\n  }\r\n\r\n  const normalizedValue = roundToPrecision(numericValue, config.precision);\r\n  const formattedValue = config.autoFormat\r\n    ? formatCurrencyValue(normalizedValue, { ...config, showSymbol: false })\r\n    : formatPlainCurrencyValue(normalizedValue, config);\r\n\r\n  setValue(formattedValue);\r\n  notifyChange?.(normalizedValue);\r\n}\r\n\r\nfunction roundToPrecision(value: number, precision: number): number {\r\n  if (!Number.isFinite(value)) return value;\r\n  return Number(value.toFixed(precision));\r\n}\r\n\r\nfunction formatCurrencyValue(value: number, config: ResolvedCurrencyConfig): string {\r\n  const {\r\n    precision,\r\n    thousandSeparator,\r\n    decimalSeparator,\r\n    showSymbol,\r\n    symbol,\r\n    symbolPosition,\r\n    symbolSpacing,\r\n    currencyCode\r\n  } = config;\r\n\r\n  const absoluteValue = Math.abs(value);\r\n  const [integerPartRaw, fractionalPartRaw = ''] = absoluteValue\r\n    .toFixed(precision)\r\n    .split('.');\r\n\r\n  const groupedInteger =\r\n    thousandSeparator && thousandSeparator.length > 0\r\n      ? integerPartRaw.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandSeparator)\r\n      : integerPartRaw;\r\n\r\n  let formatted = groupedInteger;\r\n  if (precision > 0) {\r\n    formatted += `${decimalSeparator}${fractionalPartRaw}`;\r\n  }\r\n\r\n  if (showSymbol) {\r\n    const symbolValue = symbol || currencyCode;\r\n    const spacing = symbolSpacing ?? '';\r\n\r\n    if (symbolPosition === 'suffix') {\r\n      formatted = `${formatted}${spacing}${symbolValue}`;\r\n    } else {\r\n      formatted = `${symbolValue}${spacing}${formatted}`;\r\n    }\r\n  }\r\n\r\n  if (value < 0) {\r\n    formatted = `-${formatted}`;\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\nfunction formatPlainCurrencyValue(value: number, config: ResolvedCurrencyConfig): string {\r\n  const { precision, decimalSeparator } = config;\r\n  const absoluteValue = Math.abs(value);\r\n  const [integerPart, fractionalPart = ''] = absoluteValue.toFixed(precision).split('.');\r\n\r\n  let formatted = integerPart;\r\n  if (precision > 0) {\r\n    formatted += `${decimalSeparator}${fractionalPart}`;\r\n  }\r\n\r\n  if (value < 0) {\r\n    formatted = `-${formatted}`;\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\nfunction sanitizeCurrencyInput(value: string, config: ResolvedCurrencyConfig): string {\r\n  if (!value) return '';\r\n\r\n  let normalized = value;\r\n\r\n  if (config.thousandSeparator) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.thousandSeparator), 'g'), '');\r\n  }\r\n\r\n  if (config.symbolSpacing) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.symbolSpacing), 'g'), '');\r\n  }\r\n\r\n  if (config.symbol) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.symbol), 'g'), '');\r\n  }\r\n\r\n  if (config.currencyCode) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.currencyCode), 'gi'), '');\r\n  }\r\n\r\n  normalized = normalized.replace(/\\s+/g, '');\r\n\r\n  if (config.decimalSeparator && config.decimalSeparator !== '.') {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.decimalSeparator), 'g'), '.');\r\n  }\r\n\r\n  normalized = normalized.replace(/[^0-9.-]/g, '');\r\n\r\n  const hasNegative = normalized.includes('-');\r\n  normalized = normalized.replace(/-/g, '');\r\n  if (hasNegative) {\r\n    normalized = normalized.length > 0 ? `-${normalized}` : '-';\r\n  }\r\n\r\n  const firstDecimalIndex = normalized.indexOf('.');\r\n  if (firstDecimalIndex !== -1) {\r\n    const before = normalized.slice(0, firstDecimalIndex + 1);\r\n    const after = normalized.slice(firstDecimalIndex + 1).replace(/\\./g, '');\r\n    normalized = before + after;\r\n  }\r\n\r\n  return normalized;\r\n}\r\n\r\nfunction deriveCurrencyDefaults(currencyCode: string, precision: number) {\r\n  try {\r\n    const formatter = new Intl.NumberFormat(undefined, {\r\n      style: 'currency',\r\n      currency: currencyCode,\r\n      minimumFractionDigits: precision,\r\n      maximumFractionDigits: precision\r\n    });\r\n    const parts = formatter.formatToParts(1234567.89);\r\n    const group = parts.find((part) => part.type === 'group')?.value ?? ',';\r\n    const decimal = parts.find((part) => part.type === 'decimal')?.value ?? '.';\r\n    const symbol = parts.find((part) => part.type === 'currency')?.value ?? currencyCode;\r\n\r\n    let spacing = '';\r\n    const currencyIndex = parts.findIndex((part) => part.type === 'currency');\r\n    if (currencyIndex !== -1) {\r\n      const nextPart = parts[currencyIndex + 1];\r\n      const previousPart = parts[currencyIndex - 1];\r\n      if (nextPart?.type === 'literal') {\r\n        spacing = nextPart.value;\r\n      } else if (previousPart?.type === 'literal') {\r\n        spacing = previousPart.value;\r\n      }\r\n    }\r\n\r\n    return { group, decimal, symbol, spacing };\r\n  } catch (error) {\r\n    return { group: ',', decimal: '.', symbol: currencyCode, spacing: ' ' };\r\n  }\r\n}\r\n\r\nfunction escapeRegExp(value: string): string {\r\n  return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n","import type { TextareaHTMLAttributes } from 'react';\r\nimport type { DynFieldBase, DynFieldRef } from '../../types/field.types';\r\n\r\nexport type DynTextAreaResize = 'none' | 'vertical' | 'horizontal' | 'both';\r\n\r\nexport interface DynTextAreaProps\r\n  extends DynFieldBase,\r\n    Omit<\r\n      TextareaHTMLAttributes<HTMLTextAreaElement>,\r\n      | 'value'\r\n      | 'defaultValue'\r\n      | 'onChange'\r\n      | 'onBlur'\r\n      | 'onFocus'\r\n      | 'rows'\r\n      | 'cols'\r\n      | keyof DynFieldBase\r\n    > {\r\n  /** Number of visible text lines */\r\n  rows?: number;\r\n  /** Number of visible columns */\r\n  cols?: number;\r\n  /** Controls the resize behavior of the textarea */\r\n  resize?: DynTextAreaResize;\r\n  /** Controlled value for the textarea */\r\n  value?: string;\r\n  /** Change handler returning the textarea value */\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nexport type DynTextAreaRef = DynFieldRef;\r\n\r\nexport interface DynTextAreaDefaultProps {\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  required: boolean;\r\n  optional: boolean;\r\n  visible: boolean;\r\n  value: string;\r\n  resize: DynTextAreaResize;\r\n  rows: number;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_TEXT_AREA_DEFAULT_PROPS: DynTextAreaDefaultProps = {\r\n  disabled: false,\r\n  readonly: false,\r\n  required: false,\r\n  optional: false,\r\n  visible: true,\r\n  value: '',\r\n  resize: 'vertical',\r\n  rows: 4,\r\n  'data-testid': 'dyn-textarea',\r\n};\r\n","import {\r\n  forwardRef,\r\n  useEffect,\r\n  useId,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { ChangeEvent, ForwardedRef } from 'react';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport type { DynFieldContainerProps } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { DynTextAreaProps, DynTextAreaRef } from './DynTextArea.types';\r\nimport { DYN_TEXT_AREA_DEFAULT_PROPS } from './DynTextArea.types';\r\nimport styles from './DynTextArea.module.css';\r\n\r\nconst DynTextAreaComponent = (\r\n  {\r\n    name,\r\n    id,\r\n    label,\r\n    help,\r\n    placeholder,\r\n    disabled = DYN_TEXT_AREA_DEFAULT_PROPS.disabled,\r\n    readonly = DYN_TEXT_AREA_DEFAULT_PROPS.readonly,\r\n    required = DYN_TEXT_AREA_DEFAULT_PROPS.required,\r\n    optional = DYN_TEXT_AREA_DEFAULT_PROPS.optional,\r\n    visible = DYN_TEXT_AREA_DEFAULT_PROPS.visible,\r\n    value: valueProp = DYN_TEXT_AREA_DEFAULT_PROPS.value,\r\n    errorMessage,\r\n    validation,\r\n    className,\r\n    resize = DYN_TEXT_AREA_DEFAULT_PROPS.resize,\r\n    rows = DYN_TEXT_AREA_DEFAULT_PROPS.rows,\r\n    cols,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    'data-testid': dataTestId = DYN_TEXT_AREA_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  }: DynTextAreaProps,\r\n  ref: ForwardedRef<DynTextAreaRef>\r\n) => {\r\n  const [value, setValue] = useState<string>(valueProp ?? '');\r\n  const [focused, setFocused] = useState(false);\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const fallbackId = useId();\r\n  const fieldId = id ?? name ?? `${fallbackId}-textarea`;\r\n\r\n  const { error, validate, clearError } = useDynFieldValidation({\r\n    value,\r\n    required,\r\n    validation,\r\n    customError: errorMessage,\r\n  });\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      focus: () => textareaRef.current?.focus(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setValue('');\r\n        onChange?.('');\r\n        clearError();\r\n      },\r\n      getValue: () => value,\r\n      setValue: (newValue: unknown) => {\r\n        const stringValue = String(newValue ?? '');\r\n        setValue(stringValue);\r\n        onChange?.(stringValue);\r\n      },\r\n    }),\r\n    [clearError, onChange, validate, value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setValue(valueProp ?? '');\r\n  }, [valueProp]);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  const resolvedError = errorMessage ?? (error || undefined);\r\n  const describedById = resolvedError\r\n    ? `${fieldId}-error`\r\n    : help\r\n      ? `${fieldId}-help`\r\n      : undefined;\r\n\r\n  const textareaClasses = cn(\r\n    styles.textarea,\r\n    focused && styles.textareaFocused,\r\n    resolvedError && styles.textareaError,\r\n    disabled && styles.textareaDisabled,\r\n    readonly && styles.textareaReadonly,\r\n    resize === 'none' && styles.textareaResizeNone,\r\n    resize === 'horizontal' && styles.textareaResizeHorizontal,\r\n    resize === 'both' && styles.textareaResizeBoth\r\n  );\r\n\r\n  const containerClasses = cn(styles.container, className);\r\n\r\n  const fieldContainerProps: Omit<DynFieldContainerProps, 'children'> = {\r\n    label,\r\n    required,\r\n    optional,\r\n    helpText: help,\r\n    errorText: resolvedError,\r\n    className: containerClasses,\r\n    htmlFor: fieldId,\r\n    id,\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newValue = event.target.value;\r\n\r\n    if (disabled || readonly) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    setValue(newValue);\r\n    onChange?.(newValue);\r\n    clearError();\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    if (disabled) {\r\n      return;\r\n    }\r\n\r\n    setFocused(true);\r\n    clearError();\r\n    onFocus?.();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setFocused(false);\r\n    void validate();\r\n    onBlur?.();\r\n  };\r\n\r\n  return (\r\n    <DynFieldContainer {...fieldContainerProps}>\r\n      <textarea\r\n        {...rest}\r\n        ref={textareaRef}\r\n        id={fieldId}\r\n        name={name}\r\n        className={textareaClasses}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        required={required}\r\n        rows={rows}\r\n        cols={cols}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        aria-invalid={Boolean(resolvedError)}\r\n        aria-required={required || undefined}\r\n        aria-describedby={describedById}\r\n        data-testid={dataTestId}\r\n      />\r\n    </DynFieldContainer>\r\n  );\r\n};\r\n\r\nconst DynTextArea = forwardRef<DynTextAreaRef, DynTextAreaProps>(DynTextAreaComponent);\r\n\r\nDynTextArea.displayName = 'DynTextArea';\r\n\r\nexport { DynTextArea };\r\nexport default DynTextArea;\r\n","import * as React from 'react';\r\nimport { DynLabelProps } from '../../types/label.types';\r\nimport styles from './DynLabel.module.css';\r\n\r\n// Lightweight replacement for the 'classnames' package to avoid adding an external dependency.\r\nconst classNames = (...args: Array<string | false | null | undefined>) =>\r\n  args.filter(Boolean).join(' ');\r\n\r\nexport const DynLabel: React.FC<DynLabelProps> = ({\r\n  children,\r\n  htmlFor,\r\n  disabled = false,\r\n  required = false,\r\n  optional = false,\r\n  helpText,\r\n  className,\r\n  ...restProps\r\n}: DynLabelProps) => {\r\n  const labelClasses = classNames(\r\n    styles['dyn-label'],\r\n    disabled && styles['dyn-label--disabled'],\r\n    (required || optional) && styles['dyn-label--with-requirement'],\r\n    className\r\n  );\r\n\r\n  const renderRequirementIndicator = () => {\r\n    if (required) {\r\n      return (\r\n        <span className={`${styles['dyn-label-requirement']} ${styles['dyn-label--required']}`}>\r\n          <span className={styles['dyn-label-required-asterisk']} aria-hidden=\"true\">*</span>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (optional) {\r\n      return (\r\n        <span \r\n          className={`${styles['dyn-label-requirement']} ${styles['dyn-label--optional']}`}\r\n          data-testid=\"optional-indicator\"\r\n        >\r\n          <span className={styles['dyn-label-optional-text']}>(optional)</span>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderHelpText = () => {\r\n    if (!helpText) return null;\r\n\r\n    return (\r\n      <span className={styles['dyn-label-help-text']} id={htmlFor ? `${htmlFor}-help` : undefined}>\r\n        {helpText}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  // Use React.createElement for dynamic element type to avoid ESBuild JSX parsing issues\r\n  const elementProps = {\r\n    className: labelClasses,\r\n    ...(htmlFor && { htmlFor }),\r\n    ...(helpText && htmlFor && { 'aria-describedby': `${htmlFor}-help` }),\r\n    ...restProps\r\n  };\r\n\r\n  const labelContent = (\r\n    <span className={styles['dyn-label-text']}>\r\n      {children}\r\n      {renderRequirementIndicator()}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div className={styles['dyn-label-container']} role=\"group\">\r\n      {htmlFor ? (\r\n        <label {...elementProps}>\r\n          {labelContent}\r\n        </label>\r\n      ) : (\r\n        <span {...elementProps}>\r\n          {labelContent}\r\n        </span>\r\n      )}\r\n      {renderHelpText()}\r\n    </div>\r\n  );\r\n};\r\n\r\nDynLabel.displayName = 'DynLabel';\r\n\r\n// Add default export\r\nexport default DynLabel;","import React, { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport styles from './DynListView.module.css';\r\nimport type { DynListViewProps, DynListViewRef, ListViewItem, ListAction } from './DynListView.types';\r\n\r\nconst getStyleClass = (n: string) => (styles as Record<string, string>)[n] || '';\r\n\r\nconst getActionButtonVariantClass = (type?: ListAction['type']) => {\r\n  const normalized = (type ?? 'default').toLowerCase();\r\n  const variantKey = `actionButton${normalized.replace(/^[a-z]/, (c) => c.toUpperCase())}`;\r\n  return getStyleClass(variantKey) || getStyleClass('actionButtonDefault');\r\n};\r\n\r\nconst isComplexItem = (item: any) => {\r\n  // Consider item complex if it has more than typical display fields\r\n  const displayKeys = new Set(['id','title','label','value','description','icon','disabled','selected']);\r\n  const keys = Object.keys(item || {});\r\n  return keys.filter(k => !displayKeys.has(k)).length >= 3; // threshold can be tuned\r\n};\r\n\r\nconst resolveBaseKey = (\r\n  item: ListViewItem,\r\n  index: number,\r\n  itemKey?: DynListViewProps['itemKey']\r\n): string => {\r\n  let candidate: unknown;\r\n  if (typeof itemKey === 'function') {\r\n    candidate = itemKey(item);\r\n  } else if (typeof itemKey === 'string') {\r\n    candidate = (item as Record<string, unknown>)[itemKey];\r\n  } else if (item.id !== undefined && item.id !== null) {\r\n    candidate = item.id;\r\n  } else if (item.value !== undefined && item.value !== null) {\r\n    candidate = item.value;\r\n  }\r\n\r\n  const normalized = candidate === undefined || candidate === null || candidate === ''\r\n    ? String(index)\r\n    : String(candidate);\r\n\r\n  return normalized;\r\n};\r\n\r\nconst createUniqueKeys = (\r\n  items: ListViewItem[],\r\n  itemKey?: DynListViewProps['itemKey']\r\n) => {\r\n  const occurrences = new Map<string, number>();\r\n\r\n  return items.map((item, index) => {\r\n    const baseKey = resolveBaseKey(item, index, itemKey);\r\n    const seen = occurrences.get(baseKey) ?? 0;\r\n    occurrences.set(baseKey, seen + 1);\r\n\r\n    if (seen === 0) return baseKey;\r\n    return `${baseKey}-${seen}`;\r\n  });\r\n};\r\n\r\nconst createKeyToItemMap = (items: ListViewItem[], keys: string[]) => {\r\n  const map = new Map<string, ListViewItem>();\r\n  keys.forEach((key, index) => {\r\n    map.set(key, items[index]);\r\n  });\r\n  return map;\r\n};\r\n\r\ntype SelectionInput = string[] | string | undefined;\r\n\r\nconst toInternalValue = (value: SelectionInput, multi: boolean): string[] | string | undefined => {\r\n  if (multi) {\r\n    if (Array.isArray(value)) return value;\r\n    if (typeof value === 'string' && value !== '') return [value];\r\n    return [];\r\n  }\r\n\r\n  if (Array.isArray(value)) return value[0];\r\n  return value;\r\n};\r\n\r\nconst toKeyArray = (value: string[] | string | undefined, multi: boolean): string[] => {\r\n  if (multi) {\r\n    if (Array.isArray(value)) return value;\r\n    if (typeof value === 'string' && value !== '') return [value];\r\n    return [];\r\n  }\r\n\r\n  return typeof value === 'string' && value !== '' ? [value] : [];\r\n};\r\n\r\ninterface SelectionManagerConfig {\r\n  multi: boolean;\r\n  disabled: boolean;\r\n  controlledValue?: string | string[];\r\n  defaultValue?: string | string[];\r\n  onChange?: DynListViewProps['onChange'];\r\n  onSelectionChange?: DynListViewProps['onSelectionChange'];\r\n  getSelectedItems: (keys: string[]) => ListViewItem[];\r\n}\r\n\r\nconst useSelectionManager = ({\r\n  multi,\r\n  disabled,\r\n  controlledValue,\r\n  defaultValue,\r\n  onChange,\r\n  onSelectionChange,\r\n  getSelectedItems,\r\n}: SelectionManagerConfig) => {\r\n  const isControlled = controlledValue !== undefined;\r\n  const [selected, setSelected] = useState<string[] | string | undefined>(() => {\r\n    const initial = isControlled ? controlledValue : defaultValue;\r\n    return toInternalValue(initial, multi);\r\n  });\r\n\r\n  const updateFromExternal = useCallback(\r\n    (value?: string | string[]) => {\r\n      setSelected(toInternalValue(value, multi));\r\n    },\r\n    [multi]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (isControlled) {\r\n      updateFromExternal(controlledValue);\r\n    }\r\n  }, [controlledValue, isControlled, updateFromExternal]);\r\n\r\n  const selectedKeys = useMemo(() => toKeyArray(selected, multi), [selected, multi]);\r\n\r\n  const updateSelection = useCallback(\r\n    (next: SelectionInput) => {\r\n      const internalValue = toInternalValue(next, multi);\r\n\r\n      if (!isControlled) {\r\n        setSelected(internalValue);\r\n      }\r\n\r\n      const keysArray = toKeyArray(internalValue, multi);\r\n      const items = getSelectedItems(keysArray);\r\n      const valueForChange = multi ? keysArray : keysArray[0];\r\n\r\n      onChange?.(valueForChange as any, multi ? items : items[0]);\r\n      onSelectionChange?.(keysArray, items);\r\n    },\r\n    [getSelectedItems, isControlled, multi, onChange, onSelectionChange]\r\n  );\r\n\r\n  const toggle = useCallback(\r\n    (key: string) => {\r\n      if (disabled) return;\r\n\r\n      if (multi) {\r\n        const current = new Set(selectedKeys);\r\n        if (current.has(key)) {\r\n          current.delete(key);\r\n        } else {\r\n          current.add(key);\r\n        }\r\n        updateSelection(Array.from(current));\r\n      } else {\r\n        updateSelection(selectedKeys[0] === key ? undefined : key);\r\n      }\r\n    },\r\n    [disabled, multi, selectedKeys, updateSelection]\r\n  );\r\n\r\n  const selectAll = useCallback(\r\n    (keys: string[]) => {\r\n      if (disabled) return;\r\n      updateSelection(multi ? keys : keys[0]);\r\n    },\r\n    [disabled, multi, updateSelection]\r\n  );\r\n\r\n  const clearSelection = useCallback(() => {\r\n    if (disabled) return;\r\n    updateSelection(multi ? [] : undefined);\r\n  }, [disabled, multi, updateSelection]);\r\n\r\n  const isSelected = useCallback((key: string) => selectedKeys.includes(key), [selectedKeys]);\r\n\r\n  return {\r\n    selectedKeys,\r\n    isSelected,\r\n    toggle,\r\n    selectAll,\r\n    clearSelection,\r\n  } as const;\r\n};\r\n\r\nexport const DynListView = forwardRef<DynListViewRef, DynListViewProps>(function DynListView(\r\n  {\r\n    items = [],\r\n    data = [], // legacy alias\r\n    value,\r\n    defaultValue,\r\n    multiSelect = false,\r\n    selectable = false,\r\n    disabled = false,\r\n    loading = false,\r\n    emptyText = 'No data available',\r\n    actions = [],\r\n    renderItem,\r\n    size,\r\n    height,\r\n    bordered = false,\r\n    selectedKeys,\r\n    itemKey,\r\n    onChange,\r\n    onSelectionChange,\r\n    className,\r\n    id,\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  }, ref) {\r\n  \r\n  // Use items prop, fallback to data for backward compatibility\r\n  const listItems = items.length > 0 ? items : data;\r\n\r\n  const [internalId] = useState(() => id || generateId('listview'));\r\n  const rootRef = useRef<HTMLDivElement | null>(null);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [expanded, setExpanded] = useState<Record<string, boolean>>({});\r\n\r\n  const toggleItemExpansion = useCallback((key: string) => {\r\n    setExpanded((prev) => ({ ...prev, [key]: !prev[key] }));\r\n  }, []);\r\n\r\n  const itemIds = useMemo(\r\n    () => listItems.map((_, i) => `${internalId}-option-${i}`),\r\n    [listItems, internalId]\r\n  );\r\n\r\n  const uniqueItemKeys = useMemo(\r\n    () => createUniqueKeys(listItems, itemKey),\r\n    [itemKey, listItems]\r\n  );\r\n\r\n  const keyToItemMap = useMemo(\r\n    () => createKeyToItemMap(listItems, uniqueItemKeys),\r\n    [listItems, uniqueItemKeys]\r\n  );\r\n\r\n  const getItemsByKeys = useCallback(\r\n    (keys: string[]) =>\r\n      keys\r\n        .map((key) => keyToItemMap.get(key))\r\n        .filter((item): item is ListViewItem => Boolean(item)),\r\n    [keyToItemMap]\r\n  );\r\n\r\n  const selection = useSelectionManager({\r\n    multi: multiSelect || selectable,\r\n    disabled,\r\n    controlledValue: selectedKeys ?? value,\r\n    defaultValue,\r\n    onChange,\r\n    onSelectionChange,\r\n    getSelectedItems: getItemsByKeys,\r\n  });\r\n\r\n  const { selectAll: selectAllKeys, clearSelection } = selection;\r\n  const allKeys = uniqueItemKeys;\r\n\r\n  useImperativeHandle<DynListViewRef | null>(\r\n    ref,\r\n    () => {\r\n      const node = rootRef.current;\r\n\r\n      if (!node) {\r\n        return null;\r\n      }\r\n\r\n      const handle = node as DynListViewRef;\r\n\r\n      handle.selectAll = () => {\r\n        if (!allKeys.length) return;\r\n        selectAllKeys(allKeys);\r\n      };\r\n\r\n      handle.clearSelection = () => {\r\n        clearSelection();\r\n      };\r\n\r\n      return handle;\r\n    },\r\n    [allKeys, clearSelection, selectAllKeys]\r\n  );\r\n\r\n  const moveActive = (delta: number) => {\r\n    const count = listItems.length;\r\n    if (!count) return;\r\n    setActiveIndex(idx => (idx + delta + count) % count);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    switch (e.key) {\r\n      case 'ArrowDown': e.preventDefault(); moveActive(1); break;\r\n      case 'ArrowUp': e.preventDefault(); moveActive(-1); break;\r\n      case 'Home': e.preventDefault(); setActiveIndex(0); break;\r\n      case 'End': e.preventDefault(); setActiveIndex(Math.max(0, listItems.length - 1)); break;\r\n      case 'Enter':\r\n      case ' ': {\r\n        e.preventDefault();\r\n        const item = listItems[activeIndex];\r\n        if (item) {\r\n          const key = uniqueItemKeys[activeIndex];\r\n          if (key) {\r\n            selection.toggle(key);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const rootClasses = cn(\r\n    'dyn-list-view',\r\n    getStyleClass('root'),\r\n    size === 'small' && [getStyleClass('rootSmall'), 'dyn-list-view--small'],\r\n    size === 'large' && [getStyleClass('rootLarge'), 'dyn-list-view--large'],\r\n    bordered && [getStyleClass('rootBordered'), 'dyn-list-view--bordered'],\r\n    className\r\n  );\r\n\r\n  const rootStyle = height ? { \r\n    height: typeof height === 'number' ? `${height}px` : String(height) \r\n  } : undefined;\r\n\r\n  const allChecked =\r\n    (multiSelect || selectable) &&\r\n    allKeys.length > 0 &&\r\n    allKeys.every((key) => selection.isSelected(key));\r\n\r\n  const computedAriaLabel = ariaLabel ?? (ariaLabelledBy ? undefined : 'List view');\r\n  const selectAllButtonLabel = allChecked ? 'Deselect all items' : 'Select all items';\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      id={internalId}\r\n      role=\"listbox\"\r\n      aria-multiselectable={multiSelect || selectable || undefined}\r\n      aria-label={computedAriaLabel}\r\n      aria-labelledby={ariaLabelledBy}\r\n      aria-activedescendant={listItems[activeIndex] ? itemIds[activeIndex] : undefined}\r\n      className={rootClasses}\r\n      data-testid={dataTestId || 'dyn-listview'}\r\n      tabIndex={0}\r\n      onKeyDown={handleKeyDown}\r\n      style={rootStyle}\r\n      {...rest}\r\n    >\r\n      {(multiSelect || selectable) && (\r\n        <div className={getStyleClass('bulkActions')}>\r\n          <button\r\n            type=\"button\"\r\n            className={cn(getStyleClass('option'), getStyleClass('bulkActions__button'))}\r\n            aria-pressed={allChecked}\r\n            aria-label={selectAllButtonLabel}\r\n            onClick={() => selection.selectAll(allChecked ? [] : allKeys)}\r\n          >\r\n            <span\r\n              aria-hidden=\"true\"\r\n              className={cn(\r\n                getStyleClass('option__checkbox'),\r\n                allChecked && getStyleClass('option__checkbox--checked')\r\n              )}\r\n            />\r\n            <span className={getStyleClass('option__label')}>Select All</span>\r\n            <span className={getStyleClass('visuallyHidden')}>\r\n              {allChecked ? 'All items selected' : 'No items selected'}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div role=\"status\" className={getStyleClass('loading')}>\r\n          Loading...\r\n        </div>\r\n      ) : listItems.length === 0 ? (\r\n        <div role=\"note\" className={getStyleClass('empty')}>\r\n          {emptyText}\r\n        </div>\r\n      ) : (\r\n        listItems.map((item, i) => {\r\n          const key = uniqueItemKeys[i];\r\n          const selectedState = selection.isSelected(key);\r\n          const title = (item as any).title ?? (item as any).label ?? (item as any).value ?? String((item as any).id ?? i + 1);\r\n          const desc = (item as any).description;\r\n          const complex = isComplexItem(item);\r\n          const labelId = `${itemIds[i]}-label`;\r\n          const descriptionId = desc ? `${itemIds[i]}-description` : undefined;\r\n          const usesDefaultRenderer = !renderItem;\r\n          const optionLabelledBy = usesDefaultRenderer ? labelId : undefined;\r\n          const optionDescribedBy = usesDefaultRenderer && desc ? descriptionId : undefined;\r\n          const isExpandable = complex;\r\n          const usesTitleAsExpandTrigger = isExpandable && usesDefaultRenderer;\r\n          const renderSeparateExpandControl = isExpandable && !usesDefaultRenderer;\r\n          const isExpanded = !!expanded[key];\r\n          const hasActions = actions && actions.length > 0;\r\n          const shouldRenderControls = hasActions || renderSeparateExpandControl;\r\n\r\n          return (\r\n            <div\r\n              key={key}\r\n              className={cn(\r\n                getStyleClass('option'),\r\n                selectedState && getStyleClass('option--selected'),\r\n                i === activeIndex && getStyleClass('option--active'),\r\n                item.disabled && getStyleClass('option--disabled')\r\n              )}\r\n              onMouseEnter={() => !item.disabled && setActiveIndex(i)}\r\n            >\r\n              <div\r\n                id={itemIds[i]}\r\n                role=\"option\"\r\n                aria-selected={selectedState}\r\n                aria-disabled={item.disabled || undefined}\r\n                aria-labelledby={optionLabelledBy}\r\n                aria-describedby={optionDescribedBy}\r\n                className={getStyleClass('option__main')}\r\n                onMouseDown={(e) => e.preventDefault()}\r\n                onClick={() => !item.disabled && selection.toggle(key)}\r\n              >\r\n                {(selectable || multiSelect) && (\r\n                  <span\r\n                    aria-hidden=\"true\"\r\n                    className={cn(\r\n                      getStyleClass('option__checkbox'),\r\n                      selectedState && getStyleClass('option__checkbox--checked')\r\n                    )}\r\n                  />\r\n                )}\r\n\r\n                <div className={getStyleClass('option__content')}>\r\n                  {renderItem ? (\r\n                    renderItem(item, i)\r\n                  ) : (\r\n                    <>\r\n                      {usesTitleAsExpandTrigger ? (\r\n                        <button\r\n                          type=\"button\"\r\n                          id={labelId}\r\n                          className={cn(\r\n                            getStyleClass('option__label'),\r\n                            getStyleClass('option__label--expandable'),\r\n                            isExpanded && getStyleClass('option__label--expanded')\r\n                          )}\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n                            toggleItemExpansion(key);\r\n                          }}\r\n                          aria-expanded={isExpanded}\r\n                        >\r\n                          {title}\r\n                        </button>\r\n                      ) : (\r\n                        <span id={labelId} className={getStyleClass('option__label')}>\r\n                          {title}\r\n                        </span>\r\n                      )}\r\n                      {desc && (\r\n                        <span\r\n                          id={descriptionId}\r\n                          className={getStyleClass('option__description')}\r\n                        >\r\n                          {desc}\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {shouldRenderControls && (\r\n                <div\r\n                  className={getStyleClass('option__controls')}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                >\r\n                  {renderSeparateExpandControl && (\r\n                    <button\r\n                      type=\"button\"\r\n                      aria-expanded={isExpanded}\r\n                      aria-label={`${isExpanded ? 'Collapse' : 'Expand'} details for ${title}`}\r\n                      className={cn(\r\n                        getStyleClass('actionButton'),\r\n                        getStyleClass('actionButtonDefault'),\r\n                        getStyleClass('option__expandButton')\r\n                      )}\r\n                      onClick={(event) => {\r\n                        event.stopPropagation();\r\n                        toggleItemExpansion(key);\r\n                      }}\r\n                    >\r\n                      <span aria-hidden=\"true\" className={getStyleClass('option__expandButtonIcon')}>\r\n                        {isExpanded ? '▴' : '▾'}\r\n                      </span>\r\n                    </button>\r\n                  )}\r\n\r\n                  {hasActions && (\r\n                    <div className={getStyleClass('option__actions')}>\r\n                      {actions.map((action) => (\r\n                        <button\r\n                          key={action.key}\r\n                          type=\"button\"\r\n                          className={cn(\r\n                            getStyleClass('actionButton'),\r\n                            getActionButtonVariantClass(action.type)\r\n                          )}\r\n                          onClick={() => action.onClick(item, i)}\r\n                          title={action.title}\r\n                        >\r\n                          {action.title}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {isExpanded && (\r\n                <div className={getStyleClass('option__details')}>\r\n                  {Object.entries(item).map(([k, v]) => (\r\n                    <div key={k}>\r\n                      <strong>{k}:</strong> {String(v)}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DynListView;","/**\r\n * DynPage - Complete page layout component\r\n * Part of DYN UI Layout Components Group - SCOPE 7\r\n */\r\n\r\nimport React from 'react';\r\nimport { DynPageProps } from '../../types/layout.types';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { DynButton } from '../DynButton';\r\nimport type { DynButtonKind } from '../DynButton/DynButton.types';\r\nimport styles from './DynPage.module.css';\r\n\r\nexport const DynPage: React.FC<DynPageProps> = ({\r\n  title,\r\n  subtitle,\r\n  breadcrumbs = [],\r\n  actions = [],\r\n  children,\r\n  loading = false,\r\n  error,\r\n  size = 'medium',\r\n  padding = 'md',\r\n  background = 'page',\r\n  className,\r\n  id,\r\n  'data-testid': testId\r\n}) => {\r\n  const sizeClass =\r\n    size === 'small'\r\n      ? styles.sizeSmall\r\n      : size === 'large'\r\n        ? styles.sizeLarge\r\n        : undefined;\r\n\r\n  const paddingClass =\r\n    padding === 'none'\r\n      ? styles.paddingNone\r\n      : padding === 'xs'\r\n        ? styles.paddingXs\r\n        : padding === 'sm'\r\n          ? styles.paddingSm\r\n          : padding === 'lg'\r\n            ? styles.paddingLg\r\n            : padding === 'xl'\r\n              ? styles.paddingXl\r\n              : styles.paddingMd;\r\n\r\n  const backgroundClass =\r\n    background === 'page'\r\n      ? styles.backgroundPage\r\n      : background === 'surface'\r\n        ? styles.backgroundSurface\r\n        : undefined;\r\n\r\n  const pageClasses = classNames(\r\n    styles.root,\r\n    sizeClass,\r\n    paddingClass,\r\n    backgroundClass,\r\n    {\r\n      [styles.isLoading]: loading,\r\n      [styles.isError]: !!error\r\n    },\r\n    'dyn-page',\r\n    className\r\n  );\r\n\r\n  const renderBreadcrumbs = () => {\r\n    if (breadcrumbs.length === 0) return null;\r\n\r\n    return (\r\n      <nav className={styles.breadcrumbs} aria-label=\"Navegação\">\r\n        <ol className={styles.breadcrumbList}>\r\n          {breadcrumbs.map((breadcrumb, index) => (\r\n            <li key={index} className={styles.breadcrumbItem}>\r\n              {breadcrumb.href || breadcrumb.onClick ? (\r\n                <a\r\n                  href={breadcrumb.href}\r\n                  onClick={(e) => {\r\n                    if (breadcrumb.onClick) {\r\n                      e.preventDefault();\r\n                      breadcrumb.onClick();\r\n                    }\r\n                  }}\r\n                  className={styles.breadcrumbLink}\r\n                >\r\n                  {breadcrumb.title}\r\n                </a>\r\n              ) : (\r\n                <span className={styles.breadcrumbText}>{breadcrumb.title}</span>\r\n              )}\r\n              {index < breadcrumbs.length - 1 && (\r\n                <span className={styles.breadcrumbSeparator} aria-hidden=\"true\">/</span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderActions = () => {\r\n    if (actions.length === 0) return null;\r\n\r\n    return (\r\n      <div className={styles.actions}>\r\n        {actions.map((action) => (\r\n          <DynButton\r\n            key={action.key}\r\n            kind={(action.type ?? 'secondary') as DynButtonKind}\r\n            size={size === 'large' ? 'large' : 'medium'}\r\n            disabled={action.disabled}\r\n            loading={action.loading}\r\n            onClick={action.onClick}\r\n            icon={action.icon}\r\n          >\r\n            {action.title}\r\n          </DynButton>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={pageClasses} id={id} data-testid={testId}>\r\n        <div className={styles.loading}>\r\n          <div className={styles.spinner}></div>\r\n          <span>Carregando página...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={pageClasses} id={id} data-testid={testId}>\r\n        <div className={styles.error}>\r\n          <div className={styles.errorIcon}>⚠</div>\r\n          <div>\r\n            {typeof error === 'string' ? (\r\n              <span className={styles.errorMessage}>{error}</span>\r\n            ) : (\r\n              error\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={pageClasses} id={id} data-testid={testId}>\r\n      <header className={styles.header}>\r\n        {renderBreadcrumbs()}\r\n\r\n        <div className={styles.titleSection}>\r\n          <div className={styles.titleContent}>\r\n            <h1 className={styles.title}>{title}</h1>\r\n            {subtitle && (\r\n              <p className={styles.subtitle}>{subtitle}</p>\r\n            )}\r\n          </div>\r\n          {renderActions()}\r\n        </div>\r\n      </header>\r\n\r\n      <main className={styles.content}>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nDynPage.displayName = 'DynPage';\r\n\r\nexport default DynPage;\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\r\n * DynSelect - Advanced select component with search and virtual scrolling\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useId\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport type { DynSelectProps, DynFieldRef, SelectOption } from '../../types/field.types';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { DynIcon } from '../DynIcon';\r\nimport styles from './DynSelect.module.css';\r\n\r\nconst getStyleClass = (classKey: keyof typeof styles) => styles[classKey];\r\n\r\nexport const DynSelect = forwardRef<DynFieldRef, DynSelectProps>(\r\n  (\r\n    {\r\n      id: idProp,\r\n      name,\r\n      label,\r\n      help,\r\n      placeholder = 'Selecione...',\r\n      disabled = false,\r\n      readonly = false,\r\n      required = false,\r\n      optional = false,\r\n      visible = true,\r\n      value: propValue,\r\n      errorMessage,\r\n      validation,\r\n      className,\r\n      options = [],\r\n      multiple = false,\r\n      searchable = false,\r\n      virtualScroll = false,\r\n      loading = false,\r\n      size = 'medium',\r\n      onChange,\r\n      onBlur,\r\n      onFocus\r\n    },\r\n    ref\r\n  ) => {\r\n    const [value, setValue] = useState<string | string[]>(propValue || (multiple ? [] : ''));\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [focused, setFocused] = useState(false);\r\n    const selectRef = useRef<HTMLDivElement>(null);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const generatedId = useId();\r\n    const sanitizedGeneratedId = generatedId.replace(/:/g, '');\r\n    const fieldId = idProp ?? name ?? `dyn-select-${sanitizedGeneratedId}`;\r\n    const labelId = label ? `${fieldId}-label` : undefined;\r\n    const listboxId = `${fieldId}-listbox`;\r\n\r\n    const { error, validate, clearError } = useDynFieldValidation({\r\n      value,\r\n      required,\r\n      validation,\r\n      customError: errorMessage\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      focus: () => inputRef.current?.focus(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setValue(multiple ? [] : '');\r\n        onChange?.(multiple ? [] : '');\r\n        clearError();\r\n      },\r\n      getValue: () => value,\r\n      setValue: (newValue: any) => {\r\n        setValue(newValue);\r\n        onChange?.(newValue);\r\n      }\r\n    }));\r\n\r\n    const filteredOptions = useMemo(() => {\r\n      if (!searchable || !searchTerm) return options;\r\n      return options.filter(option =>\r\n        option.label.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }, [options, searchTerm, searchable]);\r\n\r\n    const selectedOptions = useMemo(() => {\r\n      if (multiple && Array.isArray(value)) {\r\n        return options.filter(option => value.includes(option.value));\r\n      } else if (!multiple) {\r\n        return options.find(option => option.value === value) || null;\r\n      }\r\n      return null;\r\n    }, [options, value, multiple]);\r\n\r\n    useEffect(() => {\r\n      setValue(propValue || (multiple ? [] : ''));\r\n    }, [propValue, multiple]);\r\n\r\n    useEffect(() => {\r\n      const handleClickOutside = (event: MouseEvent) => {\r\n        if (selectRef.current && !selectRef.current.contains(event.target as Node)) {\r\n          setIsOpen(false);\r\n          setSearchTerm('');\r\n        }\r\n      };\r\n\r\n      if (isOpen) {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n      }\r\n    }, [isOpen]);\r\n\r\n    const handleToggle = () => {\r\n      if (!disabled && !readonly) {\r\n        setIsOpen(prev => !prev);\r\n        if (!isOpen) {\r\n          inputRef.current?.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleOptionSelect = (option: SelectOption) => {\r\n      if (option.disabled) return;\r\n\r\n      if (multiple && Array.isArray(value)) {\r\n        const newValue = value.includes(option.value)\r\n          ? value.filter(v => v !== option.value)\r\n          : [...value, option.value];\r\n        setValue(newValue);\r\n        onChange?.(newValue);\r\n      } else {\r\n        setValue(option.value);\r\n        onChange?.(option.value);\r\n        setIsOpen(false);\r\n        setSearchTerm('');\r\n      }\r\n\r\n      clearError();\r\n    };\r\n\r\n    const handleRemoveOption = (optionValue: any, event: React.MouseEvent) => {\r\n      event.stopPropagation();\r\n      if (multiple && Array.isArray(value)) {\r\n        const newValue = value.filter(v => v !== optionValue);\r\n        setValue(newValue);\r\n        onChange?.(newValue);\r\n      }\r\n    };\r\n\r\n    const handleBlur = () => {\r\n      setFocused(false);\r\n      validate();\r\n      onBlur?.();\r\n    };\r\n\r\n    const handleFocus = () => {\r\n      setFocused(true);\r\n      clearError();\r\n      onFocus?.();\r\n    };\r\n\r\n    const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      switch (e.key) {\r\n        case 'Enter':\r\n        case ' ':\r\n          if (!isOpen) {\r\n            e.preventDefault();\r\n            setIsOpen(true);\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          setIsOpen(false);\r\n          setSearchTerm('');\r\n          break;\r\n        case 'ArrowDown':\r\n          if (!isOpen) {\r\n            setIsOpen(true);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    if (!visible) return null;\r\n\r\n    const resolvedError = errorMessage ?? (error || undefined);\r\n\r\n    const sizeClassName = (() => {\r\n      const capitalizedSize = size.charAt(0).toUpperCase() + size.slice(1);\r\n      const key = `selectSize${capitalizedSize}` as keyof typeof styles;\r\n      return styles[key];\r\n    })();\r\n\r\n    const selectClasses = classNames(\r\n      getStyleClass('select'),\r\n      sizeClassName,\r\n      {\r\n        [getStyleClass('selectOpen')]: isOpen,\r\n        [getStyleClass('selectFocused')]: focused,\r\n        [getStyleClass('selectError')]: Boolean(resolvedError),\r\n        [getStyleClass('selectDisabled')]: disabled,\r\n        [getStyleClass('selectReadonly')]: readonly,\r\n        [getStyleClass('selectSearchable')]: searchable,\r\n        [getStyleClass('selectMultiple')]: multiple,\r\n        [getStyleClass('selectLoading')]: loading\r\n      }\r\n    );\r\n\r\n    const getDisplayText = () => {\r\n      if (loading) return 'Carregando...';\r\n\r\n      if (multiple && Array.isArray(selectedOptions) && selectedOptions.length > 0) {\r\n        return `${selectedOptions.length} selecionado(s)`;\r\n      } else if (!multiple && selectedOptions) {\r\n        return (selectedOptions as SelectOption).label;\r\n      }\r\n\r\n      return placeholder;\r\n    };\r\n\r\n    const showPlaceholder = !selectedOptions ||\r\n      (multiple && Array.isArray(selectedOptions) && selectedOptions.length === 0);\r\n\r\n    return (\r\n      <DynFieldContainer\r\n        id={idProp}\r\n        label={label}\r\n        helpText={help}\r\n        required={required}\r\n        optional={optional}\r\n        errorText={resolvedError}\r\n        className={className}\r\n        htmlFor={fieldId}\r\n      >\r\n        <div ref={selectRef} className={getStyleClass('container')}>\r\n          <div\r\n            className={selectClasses}\r\n            onClick={handleToggle}\r\n            onKeyDown={handleKeyDown}\r\n            tabIndex={disabled ? -1 : 0}\r\n            role=\"combobox\"\r\n            aria-expanded={isOpen}\r\n            aria-haspopup=\"listbox\"\r\n            aria-invalid={Boolean(resolvedError)}\r\n            aria-disabled={disabled || undefined}\r\n            aria-readonly={readonly || undefined}\r\n            aria-labelledby={labelId}\r\n            aria-controls={isOpen ? listboxId : undefined}\r\n            aria-describedby={\r\n              resolvedError\r\n                ? `${fieldId}-error`\r\n                : help\r\n                  ? `${fieldId}-help`\r\n                  : undefined\r\n            }\r\n            onBlur={handleBlur}\r\n            onFocus={handleFocus}\r\n          >\r\n            <input\r\n              ref={inputRef}\r\n              type=\"hidden\"\r\n              id={fieldId}\r\n              name={name}\r\n              value={multiple && Array.isArray(value) ? value.join(',') : value || ''}\r\n            />\r\n\r\n            <div className={getStyleClass('selectContent')}>\r\n              {multiple && Array.isArray(selectedOptions) && selectedOptions.length > 0 ? (\r\n                <div className={getStyleClass('tags')}>\r\n                  {selectedOptions.map((option) => (\r\n                    <span key={option.value} className={getStyleClass('tag')}>\r\n                      {option.label}\r\n                      <button\r\n                        type=\"button\"\r\n                        className={getStyleClass('tagRemove')}\r\n                        onClick={(e) => handleRemoveOption(option.value, e)}\r\n                        aria-label={`Remover ${option.label}`}\r\n                      >\r\n                        <DynIcon icon=\"dyn-icon-close\" />\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <span className={classNames(getStyleClass('selectText'), {\r\n                  [getStyleClass('selectPlaceholder')]: showPlaceholder\r\n                })}>\r\n                  {getDisplayText()}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className={getStyleClass('arrow')}>\r\n              <DynIcon\r\n                icon={loading ? \"dyn-icon-loading\" : \"dyn-icon-arrow-down\"}\r\n                className={classNames({\r\n                  [getStyleClass('arrowUp')]: isOpen && !loading\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {isOpen && (\r\n            <div className={getStyleClass('dropdown')}>\r\n              {searchable && (\r\n                <div className={getStyleClass('search')}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Pesquisar...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    className={getStyleClass('searchInput')}\r\n                    aria-label=\"Pesquisar opções\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {filteredOptions.length === 0 ? (\r\n                <div\r\n                  className={getStyleClass('emptyState')}\r\n                  role=\"status\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                  {searchTerm ? 'Nenhum resultado encontrado' : 'Nenhuma opção disponível'}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className={getStyleClass('options')}\r\n                  role=\"listbox\"\r\n                  id={listboxId}\r\n                  aria-multiselectable={multiple || undefined}\r\n                >\r\n                  {filteredOptions.map((option) => {\r\n                    const isSelected = multiple && Array.isArray(value)\r\n                      ? value.includes(option.value)\r\n                      : value === option.value;\r\n\r\n                    return (\r\n                      <div\r\n                        key={option.value}\r\n                        className={classNames(getStyleClass('option'), {\r\n                          [getStyleClass('optionSelected')]: isSelected,\r\n                          [getStyleClass('optionDisabled')]: option.disabled\r\n                        })}\r\n                        role=\"option\"\r\n                        aria-selected={isSelected}\r\n                        aria-disabled={option.disabled || undefined}\r\n                        onClick={() => handleOptionSelect(option)}\r\n                      >\r\n                        {multiple && (\r\n                          <span className={classNames(getStyleClass('checkbox'), {\r\n                            [getStyleClass('checkboxChecked')]: isSelected\r\n                          })}>\r\n                            {isSelected && <DynIcon icon=\"dyn-icon-check\" />}\r\n                          </span>\r\n                        )}\r\n                        <span className={getStyleClass('optionText')}>{option.label}</span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DynFieldContainer>\r\n    );\r\n  }\r\n);\r\n\r\nDynSelect.displayName = 'DynSelect';\r\n\r\nexport default DynSelect;\r\n","import React, { forwardRef, useImperativeHandle, useState, useCallback, useEffect } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport styles from './DynStepper.module.css';\r\nimport { DynIcon } from '../DynIcon';\r\nimport type { DynStepperProps, DynStepperRef, DynStep, StepItem } from './DynStepper.types';\r\n\r\nconst getStyleClass = (n: string) => (styles as Record<string, string>)[n] || '';\r\n\r\nfunction clamp(n: number, min: number, max: number) {\r\n  return Math.max(min, Math.min(max, n));\r\n}\r\n\r\n/**\r\n * Convert value to step index\r\n */\r\nfunction valueToIndex(value: string | number | undefined, steps: StepItem[]): number {\r\n  if (value === undefined) return 0;\r\n\r\n  if (typeof value === 'number') {\r\n    return Math.max(0, Math.min(value, steps.length - 1));\r\n  }\r\n\r\n  // String value - find by step id\r\n  const index = steps.findIndex(step => step.id === value);\r\n  return index >= 0 ? index : 0;\r\n}\r\n\r\n/**\r\n * DynStepper — standardized: ids, a11y, predictable events, linear/non-linear.\r\n * Complete implementation with backward compatibility for legacy value/defaultValue props.\r\n */\r\nexport const DynStepper = forwardRef<DynStepperRef, DynStepperProps>(\r\n  (\r\n    {\r\n      steps = [],\r\n      // New API\r\n      activeStep: controlledActiveStep,\r\n      defaultActiveStep = 0,\r\n      // Legacy API - maintain backward compatibility\r\n      value: controlledValue,\r\n      defaultValue = 0,\r\n      // Common props\r\n      linear = true,\r\n      onChange,\r\n      onStepChange,\r\n      onStepClick,\r\n      clickableSteps = true,\r\n  orientation = 'horizontal',\r\n  variant = 'tabs',\r\n      size = 'medium',\r\n  showLabels = true,\r\n  showDescription = false,\r\n      className,\r\n      contentClassName,\r\n      renderStepContent,\r\n      renderStepIcon,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'data-testid': dataTestId,\r\n      stepClassName,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalId] = useState(() => id || generateId('stepper'));\r\n\r\n    // Determine controlled state and initial value with proper priority:\r\n    // 1. activeStep (new API) takes precedence\r\n    // 2. value (legacy API) as fallback\r\n    // 3. defaultActiveStep (new API default)\r\n    // 4. defaultValue (legacy API default)\r\n    const isControlledByActiveStep = controlledActiveStep !== undefined;\r\n    const isControlledByValue = controlledValue !== undefined;\r\n    const isControlled = isControlledByActiveStep || isControlledByValue;\r\n\r\n    const getInitialStep = () => {\r\n      if (isControlledByActiveStep) return controlledActiveStep;\r\n      if (isControlledByValue) return valueToIndex(controlledValue, steps);\r\n      if (defaultActiveStep !== 0) return defaultActiveStep;\r\n      return valueToIndex(defaultValue, steps);\r\n    };\r\n\r\n    const [internalActiveStep, setInternalActiveStep] = useState(getInitialStep);\r\n\r\n    // Get current active step with proper priority\r\n    const getCurrentActiveStep = () => {\r\n      if (isControlledByActiveStep) return controlledActiveStep as number;\r\n      if (isControlledByValue) return valueToIndex(controlledValue, steps);\r\n      return internalActiveStep;\r\n    };\r\n\r\n    const activeStep = getCurrentActiveStep();\r\n\r\n    // Handle controlled value changes (both new and legacy API)\r\n    useEffect(() => {\r\n      if (isControlledByActiveStep) {\r\n        // New API - direct numeric control\r\n        return; // activeStep is already handled above\r\n      }\r\n      if (isControlledByValue) {\r\n        // Legacy API - value can be string (step id) or number (index)\r\n        const newIndex = valueToIndex(controlledValue, steps);\r\n        if (newIndex !== internalActiveStep) {\r\n          setInternalActiveStep(newIndex);\r\n        }\r\n      }\r\n    }, [controlledValue, isControlledByActiveStep, isControlledByValue, steps, internalActiveStep]);\r\n\r\n    if (!steps || steps.length === 0) return null;\r\n\r\n    const maxIndex = steps.length - 1;\r\n    const clampedActiveStep = clamp(activeStep, 0, maxIndex);\r\n\r\n    // Enhanced change handler that supports both APIs\r\n    const notifyChange = useCallback((newIndex: number, step: StepItem) => {\r\n      // Call legacy onChange with both value formats\r\n      if (onChange) {\r\n        if (isControlledByValue && typeof controlledValue === 'string') {\r\n          // If controlled by string value, callback with step id\r\n          onChange(step.id, step, newIndex);\r\n        } else {\r\n          // Otherwise callback with numeric index\r\n          onChange(newIndex, step, newIndex);\r\n        }\r\n      }\r\n\r\n      // Call legacy onStepChange\r\n      onStepChange?.(newIndex, step);\r\n    }, [onChange, onStepChange, controlledValue, isControlledByValue]);\r\n\r\n    // Imperative API methods\r\n    const nextStep = useCallback((): boolean => {\r\n      if (clampedActiveStep >= steps.length - 1) return false;\r\n\r\n      const newStep = clampedActiveStep + 1;\r\n      if (!isControlled) setInternalActiveStep(newStep);\r\n      notifyChange(newStep, steps[newStep]);\r\n      return true;\r\n    }, [clampedActiveStep, steps.length, isControlled, notifyChange, steps]);\r\n\r\n    const prevStep = useCallback((): boolean => {\r\n      if (clampedActiveStep <= 0) return false;\r\n\r\n      const newStep = clampedActiveStep - 1;\r\n      if (!isControlled) setInternalActiveStep(newStep);\r\n      notifyChange(newStep, steps[newStep]);\r\n      return true;\r\n    }, [clampedActiveStep, isControlled, notifyChange, steps]);\r\n\r\n    const goToStep = useCallback((stepIndex: number): boolean => {\r\n      const clampedIndex = clamp(stepIndex, 0, maxIndex);\r\n      if (linear && clampedIndex > clampedActiveStep + 1) return false;\r\n      if (isStepDisabled(clampedIndex)) return false;\r\n\r\n      if (!isControlled) setInternalActiveStep(clampedIndex);\r\n      notifyChange(clampedIndex, steps[clampedIndex]);\r\n      return true;\r\n    }, [clampedActiveStep, maxIndex, linear, isControlled, notifyChange, steps]);\r\n\r\n    const getCurrentStep = useCallback((): number => {\r\n      return clampedActiveStep;\r\n    }, [clampedActiveStep]);\r\n\r\n    const getStepData = useCallback((stepIndex: number): StepItem | undefined => {\r\n      return steps[stepIndex];\r\n    }, [steps]);\r\n\r\n    const validateStep = useCallback((stepIndex: number): boolean => {\r\n      const step = steps[stepIndex];\r\n      if (!step) return false;\r\n\r\n      // Use custom validator if provided\r\n      if (step.validator) {\r\n        return step.validator(step);\r\n      }\r\n\r\n      // Default validation\r\n      return !step.error && !step.disabled;\r\n    }, [steps]);\r\n\r\n    const completeStep = useCallback((stepIndex: number): void => {\r\n      const step = steps[stepIndex];\r\n      if (step) {\r\n        step.completed = true;\r\n        step.status = 'completed';\r\n        step.state = 'completed';\r\n      }\r\n    }, [steps]);\r\n\r\n    const errorStep = useCallback((stepIndex: number, hasError: boolean): void => {\r\n      const step = steps[stepIndex];\r\n      if (step) {\r\n        step.error = hasError;\r\n        step.status = hasError ? 'error' : 'inactive';\r\n        step.state = hasError ? 'error' : 'pending';\r\n      }\r\n    }, [steps]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      nextStep,\r\n      prevStep,\r\n      goToStep,\r\n      getCurrentStep,\r\n      getStepData,\r\n      validateStep,\r\n      completeStep,\r\n      errorStep,\r\n    }), [nextStep, prevStep, goToStep, getCurrentStep, getStepData, validateStep, completeStep, errorStep]);\r\n\r\n    // Helper functions\r\n    const isStepDisabled = (index: number): boolean => {\r\n      const step = steps[index];\r\n      if (step?.disabled) return true;\r\n      if (linear && index > clampedActiveStep + 1) return true;\r\n      return false;\r\n    };\r\n\r\n    const getRootRole = () => {\r\n      if (variant === 'tabs') return 'tablist';\r\n      return 'group';\r\n    };\r\n\r\n    const getRootClassName = () => {\r\n      const classes = [getStyleClass('root')];\r\n\r\n      // Add semantic classes for tests\r\n      if (orientation) classes.push(`orientation-${orientation}`);\r\n      if (variant) classes.push(`variant-${variant}`);\r\n      if (size) classes.push(`size-${size}`);\r\n      if (className) classes.push(className);\r\n\r\n      return cn(...classes);\r\n    };\r\n\r\n    const getItemClassName = (index: number) => {\r\n      const classes = [getStyleClass('item'), 'step'];\r\n      const step = steps[index];\r\n\r\n      if (index === clampedActiveStep) {\r\n        classes.push(getStyleClass('item--current'), 'item--current', 'status-active');\r\n      }\r\n      if (step?.completed || step?.state === 'completed' || index < clampedActiveStep) {\r\n        classes.push(getStyleClass('item--completed'), 'item--completed', 'status-completed');\r\n      }\r\n      if (step?.error || step?.state === 'error') {\r\n        classes.push(getStyleClass('item--error'), 'item--error', 'status-error');\r\n      }\r\n      if (step?.disabled || isStepDisabled(index)) {\r\n        classes.push(getStyleClass('item--disabled'), 'item--disabled');\r\n      }\r\n\r\n      return cn(...classes);\r\n    };\r\n\r\n    const getButtonClassName = (index: number) => {\r\n      const classes = [getStyleClass('button')];\r\n\r\n      if (stepClassName) classes.push(stepClassName);\r\n\r\n      if (isStepDisabled(index)) {\r\n        classes.push(getStyleClass('button--disabled'), 'button--disabled');\r\n      }\r\n\r\n      return cn(...classes);\r\n    };\r\n\r\n    const getPanelClassName = (index: number) => {\r\n      const classes = [getStyleClass('panel')];\r\n      if (index !== clampedActiveStep) classes.push(getStyleClass('panel--hidden'));\r\n      return cn(...classes);\r\n    };\r\n\r\n  const getStepId = (index: number) => `${internalId}-step-${index}`;\r\n    const getPanelId = (index: number) => `${internalId}-panel-${index}`;\r\n    const getStepDescId = (index: number) => `${internalId}-step-${index}-desc`;\r\n\r\n    const handleStepClick = (index: number) => {\r\n      if (!clickableSteps || isStepDisabled(index)) return;\r\n\r\n      const step = steps[index];\r\n      const clickResult = onStepClick?.(index, step);\r\n      if (clickResult === false) return; // Allow onStepClick to prevent navigation\r\n\r\n      if (linear && index > clampedActiveStep + 1) return;\r\n\r\n      if (!isControlled) setInternalActiveStep(index);\r\n      notifyChange(index, step);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      switch (e.key) {\r\n        case 'ArrowRight':\r\n        case 'ArrowDown':\r\n          e.preventDefault();\r\n          nextStep();\r\n          break;\r\n        case 'ArrowLeft':\r\n        case 'ArrowUp':\r\n          e.preventDefault();\r\n          prevStep();\r\n          break;\r\n        case 'Home':\r\n          e.preventDefault();\r\n          goToStep(0);\r\n          break;\r\n        case 'End':\r\n          e.preventDefault();\r\n          goToStep(maxIndex);\r\n          break;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        id={internalId}\r\n        role={getRootRole()}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={ariaLabelledBy}\r\n        className={getRootClassName()}\r\n        data-testid={dataTestId || 'dyn-stepper'}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      >\r\n        <ol className={getStyleClass('list')} role={variant === 'tabs' ? 'presentation' : undefined}>\r\n          {steps.map((step, index) => (\r\n            <li key={step.id || index} className={getItemClassName(index)}>\r\n              <button\r\n                aria-label={step.title ? `${step.title} ${step.title}` : undefined}\r\n                aria-current={index === clampedActiveStep ? 'step' : undefined}\r\n                aria-selected={variant === 'tabs' ? index === clampedActiveStep : undefined}\r\n                className={getButtonClassName(index)}\r\n                id={getStepId(index)}\r\n                type=\"button\"\r\n                onClick={() => handleStepClick(index)}\r\n                disabled={isStepDisabled(index)}\r\n                aria-describedby={step.description && showDescription ? getStepDescId(index) : undefined}\r\n                title={step.tooltip}\r\n              >\r\n                {renderStepIcon ? renderStepIcon(step, index, index === clampedActiveStep) : (\r\n                  <>\r\n                    {/* Render icon from step data when provided */}\r\n                    {step.icon && typeof step.icon === 'string' ? (\r\n                      <DynIcon icon={step.icon} className={getStyleClass('icon')} />\r\n                    ) : null}\r\n\r\n                    <span aria-hidden=\"true\" className={getStyleClass('button__index')}>\r\n                      {index + 1}\r\n                    </span>\r\n                    {showLabels && (\r\n                      <span className={getStyleClass('button__label')}>\r\n                        {step.title || step.label || `Step ${index + 1}`}\r\n                      </span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </button>\r\n              {step.description && showDescription && (\r\n                <div className={getStyleClass('description')} id={getStepDescId(index)}>\r\n                  {step.description}\r\n                </div>\r\n              )}\r\n              {step.optional && (\r\n                <span className={getStyleClass('optional')}>(optional)</span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n\r\n        {variant === 'progress' && (\r\n          <div\r\n            role=\"progressbar\"\r\n            aria-valuenow={Math.round(((clampedActiveStep + 1) / steps.length) * 100)}\r\n            aria-valuemin={0}\r\n            aria-valuemax={100}\r\n            className={getStyleClass('progressBar')}\r\n          >\r\n            <div\r\n              className={getStyleClass('progressFill')}\r\n              style={{ width: `${((clampedActiveStep + 1) / steps.length) * 100}%` }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {steps.map((step, index) => (\r\n          <section\r\n            key={step.id || index}\r\n            className={cn(getPanelClassName(index), 'step-content', contentClassName || '')}\r\n            id={getPanelId(index)}\r\n            role={variant === 'tabs' ? 'tabpanel' : 'region'}\r\n            /* avoid duplicating accessible name between the tab/button and the panel */\r\n            /* aria-labelledby intentionally omitted to prevent duplicate accessible names in tests */\r\n            tabIndex={-1}\r\n            hidden={index !== clampedActiveStep}\r\n          >\r\n            {renderStepContent ?\r\n              renderStepContent(step, index) :\r\n              (typeof step.content === 'function' ?\r\n                step.content({ index, selected: index === clampedActiveStep }) :\r\n                step.content\r\n              )\r\n            }\r\n          </section>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DynStepper;\r\nDynStepper.displayName = 'DynStepper';\r\n","import React, { useMemo, useRef, useState, useEffect, useLayoutEffect, forwardRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport styles from './DynTabs.module.css';\r\nimport type { DynTabsProps, DynTabsRef } from './DynTabs.types';\r\n\r\nconst css = (n: string) => (styles as Record<string, string>)[n] || '';\r\n\r\nexport const DynTabs = forwardRef<DynTabsRef, DynTabsProps>(\r\n  (\r\n    {\r\n      items = [],\r\n      value,\r\n      activeTab,\r\n      defaultValue,\r\n      defaultActiveTab,\r\n      onChange,\r\n      onTabClose,\r\n      onTabAdd,\r\n      closable,\r\n      addable,\r\n      position = 'top',\r\n      orientation = 'horizontal',\r\n      activation = 'auto',\r\n      variant = 'default',\r\n      size = 'medium',\r\n      fitted = false,\r\n      scrollable = false,\r\n      lazy = false,\r\n      animated = true,\r\n      className,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'data-testid': dataTestId,\r\n      loadingComponent,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalId] = useState(() => id || generateId('tabs'));\r\n\r\n    // Build processed items\r\n    type RawItem = NonNullable<DynTabsProps['items']>[number];\r\n    type ProcessedItem = RawItem & { processedValue: string; processedKey: string };\r\n\r\n    const processedItems = useMemo<ProcessedItem[]>(() => (items as RawItem[]).map((item: RawItem, index: number) => {\r\n      const processedValue = item.value != null ? String(item.value) : item.id != null ? String(item.id) : `tab-${index}`;\r\n      const processedKey = item.id != null ? String(item.id) : item.value != null ? String(item.value) : `tab-${index}`;\r\n      return { ...item, processedValue, processedKey };\r\n    }), [items]);\r\n\r\n    // Determine control mode and initial\r\n    const controlledVal = activeTab ?? value;\r\n    const isControlled = controlledVal !== undefined;\r\n\r\n    const getInitial = (): string | undefined => {\r\n      if (controlledVal !== undefined) return String(controlledVal);\r\n      if (defaultActiveTab !== undefined) return String(defaultActiveTab);\r\n      if (defaultValue !== undefined) return String(defaultValue);\r\n      const firstEnabled = processedItems.find(i => !i.disabled) ?? processedItems[0];\r\n      return firstEnabled?.processedValue;\r\n    };\r\n\r\n    const [current, setCurrent] = useState<string | undefined>(getInitial());\r\n\r\n    // Lazy: track loading states\r\n    const [loaded, setLoaded] = useState<Record<string, boolean>>({});\r\n\r\n    // Pre-mark initial current as not loaded for immediate placeholder\r\n    useEffect(() => {\r\n      if (lazy && current && loaded[current] === undefined) {\r\n        setLoaded(prev => ({ ...prev, [current]: false }));\r\n      }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Sync controlled\r\n    useEffect(() => {\r\n      if (controlledVal !== undefined) setCurrent(String(controlledVal));\r\n    }, [controlledVal]);\r\n\r\n    // Guard if items change\r\n    useEffect(() => {\r\n      if (!processedItems.length) return;\r\n      const exists = processedItems.some(i => i.processedValue === current);\r\n      if (!exists) {\r\n        const firstEnabled = processedItems.find(i => !i.disabled) ?? processedItems[0];\r\n        setCurrent(firstEnabled?.processedValue);\r\n      }\r\n    }, [processedItems, current]);\r\n\r\n    // Early return for empty items per tests\r\n    if (!processedItems.length) {\r\n      return null;\r\n    }\r\n\r\n    const tabsRef = useRef<Array<HTMLButtonElement | null>>([]);\r\n    const tablistRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    // positions for close buttons keyed by processedValue\r\n    const [closePositions, setClosePositions] = useState<Record<string, { left: number; top: number }>>({});\r\n\r\n    const onSelect = (val: string, focusPanel = false) => {\r\n      if (!isControlled) setCurrent(val);\r\n      onChange?.(val);\r\n      if (lazy) {\r\n        // Immediately show loading for the newly selected tab (always set to false first)\r\n        setLoaded(prev => ({ ...prev, [val]: false }));\r\n        // Complete loading after a short delay so the loading state is observable\r\n        setTimeout(() => setLoaded(prev => ({ ...prev, [val]: true })), 50);\r\n      }\r\n      if (focusPanel) {\r\n        const panel = document.getElementById(`${internalId}-panel-${val}`);\r\n        panel?.focus?.();\r\n      }\r\n    };\r\n\r\n    const currentIndex = useMemo(() => {\r\n      if (!current) return -1;\r\n      return processedItems.findIndex(i => i.processedValue === current);\r\n    }, [processedItems, current]);\r\n\r\n    const moveFocus = (startIndex: number, delta: number) => {\r\n      const count = processedItems.length;\r\n      if (count === 0) return;\r\n      let idx = startIndex;\r\n      for (let step = 0; step < count; step++) {\r\n        idx = (idx + delta + count) % count;\r\n        const cand = processedItems[idx];\r\n        if (!cand?.disabled) {\r\n          onSelect(cand.processedValue);\r\n          tabsRef.current[idx]?.focus();\r\n          return;\r\n        }\r\n      }\r\n    };\r\n\r\n    const focusTabByOffset = (delta: number) => {\r\n      const count = processedItems.length;\r\n      if (!count) return;\r\n      const idx = currentIndex < 0 ? 0 : currentIndex;\r\n      moveFocus(idx, delta);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      const isH = orientation === 'horizontal';\r\n      switch (e.key) {\r\n        case 'ArrowRight': if (isH) { e.preventDefault(); focusTabByOffset(1); } break;\r\n        case 'ArrowLeft':  if (isH) { e.preventDefault(); focusTabByOffset(-1);} break;\r\n        case 'ArrowDown':  if (!isH){ e.preventDefault(); focusTabByOffset(1); } break;\r\n        case 'ArrowUp':    if (!isH){ e.preventDefault(); focusTabByOffset(-1);} break;\r\n        case 'Home': {\r\n          e.preventDefault();\r\n          const first = processedItems.find(i => !i.disabled) ?? processedItems[0];\r\n          const idx = processedItems.indexOf(first);\r\n          onSelect(first.processedValue);\r\n          if (idx >= 0) tabsRef.current[idx]?.focus();\r\n          break;\r\n        }\r\n        case 'End': {\r\n          e.preventDefault();\r\n          const rev = [...processedItems].reverse();\r\n          const last = rev.find(i => !i.disabled) ?? rev[0];\r\n          const idx = processedItems.indexOf(last);\r\n          onSelect(last.processedValue);\r\n          if (idx >= 0) tabsRef.current[idx]?.focus();\r\n          break;\r\n        }\r\n        case 'Enter':\r\n        case ' ': {\r\n          if (activation === 'manual') {\r\n            e.preventDefault();\r\n            const target = e.target as HTMLElement;\r\n            const val = target.getAttribute('data-value');\r\n            if (val) onSelect(val, true);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    const rootClass = cn(\r\n      css('tabs'),\r\n      position && css(`tabs--${position}`),\r\n      scrollable && css('tabs--scrollable'),\r\n      className\r\n    );\r\n\r\n    const listClass = cn(css('tablist'));\r\n\r\n    // measure tabs and compute close button positions\r\n    useLayoutEffect(() => {\r\n      const container = tablistRef.current;\r\n      if (!container) return;\r\n\r\n      const measure = () => {\r\n        const containerRect = container.getBoundingClientRect();\r\n        const positions: Record<string, { left: number; top: number }> = {};\r\n\r\n        processedItems.forEach((item, index) => {\r\n          if (!(closable || item.closable)) return;\r\n          const el = tabsRef.current[index];\r\n          if (!el) return;\r\n          const r = el.getBoundingClientRect();\r\n          const left = r.left - containerRect.left + r.width - 8; // align near right edge\r\n          const top = r.top - containerRect.top + r.height / 2; // center vertically\r\n          positions[item.processedValue] = { left, top };\r\n        });\r\n\r\n        setClosePositions(positions);\r\n      };\r\n\r\n      measure();\r\n\r\n      // observe resizes\r\n      const ro = typeof ResizeObserver !== 'undefined' ? new ResizeObserver(measure) : null;\r\n      if (ro) {\r\n        ro.observe(container);\r\n        tabsRef.current.forEach(el => el && ro.observe(el));\r\n      }\r\n\r\n      window.addEventListener('resize', measure);\r\n      return () => {\r\n        window.removeEventListener('resize', measure);\r\n        if (ro) {\r\n          ro.disconnect();\r\n        }\r\n      };\r\n    }, [processedItems, closable, size, position, variant]);\r\n\r\n    return (\r\n      <div id={internalId} className={rootClass} data-testid={dataTestId || 'test-tabs'} {...rest}>\r\n        <div\r\n          role=\"tablist\"\r\n          aria-label={ariaLabel}\r\n          aria-labelledby={ariaLabelledBy}\r\n          aria-describedby={ariaDescribedBy}\r\n          aria-orientation={orientation as 'horizontal' | 'vertical'}\r\n          className={listClass}\r\n          onKeyDown={handleKeyDown}\r\n          ref={tablistRef}\r\n        >\r\n          {processedItems.map((item, index) => {\r\n            const selected = item.processedValue === current;\r\n            const tabId = `${internalId}-tab-${item.processedValue}`;\r\n            const panelId = `${internalId}-panel-${item.processedValue}`;\r\n            // Move tab-related classes and status onto the actual tab element (button)\r\n            const tabClass = cn(\r\n              css('tab'),\r\n              size && css(`tab--${size}`),\r\n              variant && css(`tab--${variant}`),\r\n              selected && css('tab--active'),\r\n              item.disabled && css('tab--disabled'),\r\n              item.closable && css('tab--closable')\r\n            );\r\n\r\n            return (\r\n              <React.Fragment key={item.processedKey}>\r\n                <button\r\n                  ref={(el) => { tabsRef.current[index] = el; }}\r\n                  id={tabId}\r\n                  role=\"tab\"\r\n                  type=\"button\"\r\n                  className={cn(tabClass, css('tab__content'))}\r\n                  data-value={item.processedValue}\r\n                  aria-selected={selected}\r\n                  aria-controls={panelId}\r\n                  aria-disabled={item.disabled || undefined}\r\n                  tabIndex={selected ? 0 : -1}\r\n                  data-status={item.disabled ? 'disabled' : selected ? 'active' : 'inactive'}\r\n                  onClick={() => !item.disabled && onSelect(item.processedValue, activation === 'auto')}\r\n                  disabled={item.disabled}\r\n                >\r\n                  {item.icon && <span className={css('tab__icon')} aria-hidden=\"true\">{item.icon}</span>}\r\n                  <span className={css('tab__label')}>{item.label}</span>\r\n                  {item.badge && (\r\n                    <span className={css('tab__badge')} aria-hidden=\"true\">{item.badge}</span>\r\n                  )}\r\n                </button>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n          {addable && (\r\n            <button\r\n              type=\"button\"\r\n              className={css('tab-add')}\r\n              aria-label=\"Add tab\"\r\n              data-testid={`${dataTestId || 'test-tabs'}-add-button`}\r\n              onClick={() => {\r\n                onTabAdd?.();\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Separate container for close buttons so they are not direct children of the tablist.\r\n            Close buttons are absolutely positioned to visually align with their tabs. */}\r\n        <div className={css('tab-close-container')} aria-hidden={true}>\r\n          {processedItems.map((item) => {\r\n            if (!(closable || item.closable)) return null;\r\n            const pos = closePositions[item.processedValue];\r\n            const style: React.CSSProperties = pos ? {\r\n              position: 'absolute',\r\n              left: `${pos.left}px`,\r\n              top: `${pos.top}px`,\r\n              transform: 'translate(-50%, -50%)'\r\n            } : { visibility: 'hidden' };\r\n\r\n            return (\r\n              <button\r\n                key={`close-${item.processedKey}`}\r\n                type=\"button\"\r\n                className={cn(css('tab__close'), css('tab__close--positioned'))}\r\n                aria-label={`Close ${item.label}`}\r\n                data-testid={`${dataTestId || 'test-tabs'}-close-${item.processedValue}`}\r\n                onClick={(e) => { e.stopPropagation(); onTabClose?.(item.processedValue); }}\r\n                style={style}\r\n              >\r\n                ×\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {processedItems.map(item => {\r\n          const selected = item.processedValue === current;\r\n          const tabId = `${internalId}-tab-${item.processedValue}`;\r\n          const panelId = `${internalId}-panel-${item.processedValue}`;\r\n          const panelClass = cn(css('panel'), animated && css('panel--animated'));\r\n\r\n          const isLoaded = !lazy ? true : loaded[item.processedValue] === true;\r\n          const showLoading = lazy && selected && !isLoaded;\r\n\r\n          return (\r\n            <div\r\n              key={`panel-${item.processedKey}`}\r\n              id={panelId}\r\n              role=\"tabpanel\"\r\n              aria-labelledby={tabId}\r\n              hidden={!selected}\r\n              tabIndex={-1}\r\n              className={panelClass}\r\n            >\r\n              {showLoading && (\r\n                <div className={css('panel__loading')} aria-label=\"Loading content\">\r\n                  {loadingComponent || <span>Loading tab content</span>}\r\n                </div>\r\n              )}\r\n              {!showLoading && (typeof item.content === 'function' ? item.content({ value: item.processedValue, selected }) : item.content)}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DynTabs;\r\nDynTabs.displayName = 'DynTabs';\r\n","/**\r\n * DynToolbar TypeScript type definitions\r\n * Toolbar component types for action buttons and responsive layouts\r\n */\r\n\r\nimport type { ReactNode } from 'react';\r\nimport type { DynBadgeColor, DynBadgeVariant } from '../DynBadge/DynBadge.types';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\nexport type ToolbarBadge =\r\n  | number\r\n  | string\r\n  | {\r\n      count?: number;\r\n      value?: number;\r\n      label?: ReactNode;\r\n      color?: DynBadgeColor;\r\n      variant?: DynBadgeVariant;\r\n      maxCount?: number;\r\n      showZero?: boolean;\r\n    };\r\n\r\nexport interface ToolbarItem {\r\n  id: string;\r\n  label?: string;\r\n  icon?: string | React.ReactNode;\r\n  type?: 'button' | 'separator' | 'dropdown' | 'search' | 'custom';\r\n  action?: () => void;\r\n  disabled?: boolean;\r\n  visible?: boolean;\r\n  items?: ToolbarItem[]; // for dropdown submenus\r\n  component?: React.ReactNode; // for custom components\r\n  tooltip?: string;\r\n  badge?: ToolbarBadge;\r\n}\r\n\r\nexport interface DynToolbarProps extends BaseComponentProps, AccessibilityProps {\r\n  /** Toolbar items to display */\r\n  items: ToolbarItem[];\r\n  \r\n  /** Visual variant */\r\n  variant?: 'default' | 'minimal' | 'floating';\r\n  \r\n  /** Size variant */\r\n  size?: 'small' | 'medium' | 'large';\r\n  \r\n  /** Position on screen */\r\n  position?: 'top' | 'bottom' | 'fixed-top' | 'fixed-bottom';\r\n  \r\n  /** Enable responsive behavior */\r\n  responsive?: boolean;\r\n  \r\n  /** Show overflow menu for hidden items */\r\n  overflowMenu?: boolean;\r\n  \r\n  /** Number of items before overflow kicks in */\r\n  overflowThreshold?: number;\r\n  \r\n  /** Show labels on toolbar items */\r\n  showLabels?: boolean;\r\n  \r\n  /** Additional CSS classes */\r\n  className?: string;\r\n  \r\n  /** CSS class for individual items */\r\n  itemClassName?: string;\r\n  \r\n  /** Item click handler */\r\n  onItemClick?: (item: ToolbarItem) => void;\r\n  \r\n  /** Overflow menu toggle handler */\r\n  onOverflowToggle?: (isOpen: boolean) => void;\r\n  \r\n  /** Children elements for custom toolbar content */\r\n  children?: React.ReactNode;\r\n  \r\n  /** Component ID */\r\n  id?: string;\r\n  \r\n  /** ARIA label for toolbar */\r\n  'aria-label'?: string;\r\n  \r\n  /** ARIA labelledby for toolbar */\r\n  'aria-labelledby'?: string;\r\n  \r\n  /** Test ID */\r\n  'data-testid'?: string;\r\n}\r\n\r\nexport interface DynToolbarRef {\r\n  openOverflow: () => void;\r\n  closeOverflow: () => void;\r\n  toggleOverflow: () => void;\r\n  refreshLayout: () => void;\r\n}\r\n\r\n// Default configuration\r\nexport const TOOLBAR_DEFAULTS = {\r\n  variant: 'default' as const,\r\n  size: 'medium' as const,\r\n  position: 'top' as const,\r\n  responsive: true,\r\n  overflowMenu: true,\r\n  overflowThreshold: 3,\r\n  showLabels: true\r\n};\r\n\r\n// Toolbar item types\r\nexport const TOOLBAR_ITEM_TYPES = {\r\n  BUTTON: 'button',\r\n  SEPARATOR: 'separator', \r\n  DROPDOWN: 'dropdown',\r\n  SEARCH: 'search',\r\n  CUSTOM: 'custom'\r\n} as const;","/**\r\n * DynToolbar - Responsive Toolbar Component\r\n * Flexible toolbar with action buttons, responsive overflow, and multiple layout variants\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport { DynToolbarProps, ToolbarItem, DynToolbarRef, TOOLBAR_DEFAULTS } from './DynToolbar.types';\r\nimport { DynIcon } from '../DynIcon';\r\nimport { DynBadge } from '../DynBadge';\r\nimport styles from './DynToolbar.module.css';\r\n\r\nconst PICTOGRAPH_REGEX = /\\p{Extended_Pictographic}/u;\r\nconst SYMBOL_ONLY_REGEX = /^[\\p{S}\\p{P}]{1,3}$/u;\r\n\r\nconst isSymbolicIcon = (icon: string) => {\r\n  if (!icon) {\r\n    return false;\r\n  }\r\n\r\n  return PICTOGRAPH_REGEX.test(icon) || SYMBOL_ONLY_REGEX.test(icon);\r\n};\r\n\r\nconst DynToolbar = forwardRef<DynToolbarRef, DynToolbarProps>((\r\n  {\r\n    items = [],\r\n    variant = TOOLBAR_DEFAULTS.variant,\r\n    size = TOOLBAR_DEFAULTS.size,\r\n    position = TOOLBAR_DEFAULTS.position,\r\n    responsive = TOOLBAR_DEFAULTS.responsive,\r\n    overflowMenu = TOOLBAR_DEFAULTS.overflowMenu,\r\n    overflowThreshold = TOOLBAR_DEFAULTS.overflowThreshold,\r\n    showLabels = TOOLBAR_DEFAULTS.showLabels,\r\n    className,\r\n    itemClassName,\r\n    onItemClick,\r\n    onOverflowToggle\r\n  },\r\n  ref\r\n) => {\r\n  const [visibleItems, setVisibleItems] = useState<ToolbarItem[]>(items);\r\n  const [overflowItems, setOverflowItems] = useState<ToolbarItem[]>([]);\r\n  const [isOverflowOpen, setIsOverflowOpen] = useState(false);\r\n  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);\r\n  const toolbarRef = useRef<HTMLDivElement>(null);\r\n  const overflowRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Filter visible items\r\n  const filteredItems = useMemo(() => {\r\n    return items.filter(item => item.visible !== false);\r\n  }, [items]);\r\n\r\n  // Handle responsive layout\r\n  const updateLayout = useCallback(() => {\r\n    if (!overflowMenu) {\r\n      setVisibleItems(filteredItems);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    if (!responsive) {\r\n      setVisibleItems(filteredItems);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    const thresholdValue = Math.max(1, overflowThreshold);\r\n    const hasThresholdOverflow = filteredItems.length > thresholdValue;\r\n\r\n    const applyThreshold = () => {\r\n      if (!hasThresholdOverflow) {\r\n        setVisibleItems(filteredItems);\r\n        setOverflowItems([]);\r\n        return;\r\n      }\r\n\r\n      const maxVisible = Math.max(1, Math.min(thresholdValue, filteredItems.length - 1));\r\n      setVisibleItems(filteredItems.slice(0, maxVisible));\r\n      setOverflowItems(filteredItems.slice(maxVisible));\r\n    };\r\n\r\n    if (!toolbarRef.current) {\r\n      applyThreshold();\r\n      return;\r\n    }\r\n\r\n    const toolbarWidth = toolbarRef.current.offsetWidth;\r\n\r\n    // If toolbar has no measurable width (jsdom environment), fall back to\r\n    // threshold handling so tests and SSR render deterministically.\r\n    if (!toolbarWidth || toolbarWidth === 0) {\r\n      applyThreshold();\r\n      return;\r\n    }\r\n\r\n    const itemElements = toolbarRef.current.querySelectorAll('[data-toolbar-item]');\r\n\r\n    if (itemElements.length === 0 || filteredItems.length === 0) {\r\n      setVisibleItems([]);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    const padding = 32;\r\n    const measureVisibleItems = (reserveOverflowButton: boolean) => {\r\n      const overflowButtonWidth = reserveOverflowButton ? 48 : 0;\r\n      let totalWidth = 0;\r\n      let count = 0;\r\n\r\n      for (let i = 0; i < itemElements.length; i++) {\r\n        const itemWidth = itemElements[i].getBoundingClientRect().width;\r\n        if (totalWidth + itemWidth + overflowButtonWidth + padding <= toolbarWidth) {\r\n          totalWidth += itemWidth;\r\n          count++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return count;\r\n    };\r\n\r\n    let measuredVisible = measureVisibleItems(hasThresholdOverflow);\r\n    const needsOverflowByWidth = measuredVisible < filteredItems.length;\r\n    const shouldShowOverflow = hasThresholdOverflow || needsOverflowByWidth;\r\n\r\n    if (shouldShowOverflow && !hasThresholdOverflow) {\r\n      measuredVisible = measureVisibleItems(true);\r\n    }\r\n\r\n    if (!shouldShowOverflow) {\r\n      setVisibleItems(filteredItems);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    const maxVisible = hasThresholdOverflow\r\n      ? Math.max(1, Math.min(thresholdValue, filteredItems.length - 1))\r\n      : Math.max(1, filteredItems.length - 1);\r\n\r\n    const visibleCount = Math.max(1, Math.min(measuredVisible, maxVisible));\r\n\r\n    setVisibleItems(filteredItems.slice(0, visibleCount));\r\n    setOverflowItems(filteredItems.slice(visibleCount));\r\n  }, [filteredItems, responsive, overflowMenu, overflowThreshold]);\r\n\r\n  useEffect(() => {\r\n    updateLayout();\r\n  }, [updateLayout]);\r\n\r\n  useEffect(() => {\r\n    if (!responsive) return;\r\n\r\n    const handleResize = () => {\r\n      updateLayout();\r\n    };\r\n\r\n    let resizeObserver: ResizeObserver | null = null;\r\n\r\n    if (typeof window !== 'undefined' && typeof window.ResizeObserver === 'function') {\r\n      const candidate = new window.ResizeObserver(handleResize) as unknown;\r\n\r\n      if (\r\n        candidate &&\r\n        typeof (candidate as ResizeObserver).observe === 'function' &&\r\n        typeof (candidate as ResizeObserver).disconnect === 'function'\r\n      ) {\r\n        resizeObserver = candidate as ResizeObserver;\r\n\r\n        if (toolbarRef.current) {\r\n          resizeObserver.observe(toolbarRef.current);\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      resizeObserver?.disconnect();\r\n\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [responsive, updateLayout]);\r\n\r\n  // Close dropdowns when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as Node;\r\n      // Close overflow and dropdown when clicking outside the toolbar entirely\r\n      if (toolbarRef.current && !toolbarRef.current.contains(target)) {\r\n        setIsOverflowOpen(false);\r\n        setActiveDropdown(null);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openOverflow: () => {\r\n      setIsOverflowOpen(true);\r\n      onOverflowToggle?.(true);\r\n    },\r\n    closeOverflow: () => {\r\n      setIsOverflowOpen(false);\r\n      onOverflowToggle?.(false);\r\n    },\r\n    toggleOverflow: () => {\r\n      const newState = !isOverflowOpen;\r\n      setIsOverflowOpen(newState);\r\n      onOverflowToggle?.(newState);\r\n    },\r\n    refreshLayout: updateLayout\r\n  }));\r\n\r\n  const handleItemClick = useCallback((item: ToolbarItem, event?: React.MouseEvent) => {\r\n    if (item.disabled) return;\r\n\r\n    if (item.type === 'dropdown') {\r\n      event?.preventDefault();\r\n      setActiveDropdown(prev => prev === item.id ? null : item.id);\r\n      return;\r\n    }\r\n\r\n    if (item.action) {\r\n      item.action();\r\n    }\r\n\r\n    onItemClick?.(item);\r\n\r\n    // Close overflow menu after action\r\n    if (isOverflowOpen) {\r\n      setIsOverflowOpen(false);\r\n      onOverflowToggle?.(false);\r\n    }\r\n  }, [isOverflowOpen, onItemClick, onOverflowToggle]);\r\n\r\n  const handleOverflowToggle = () => {\r\n    const newState = !isOverflowOpen;\r\n    setIsOverflowOpen(newState);\r\n    onOverflowToggle?.(newState);\r\n  };\r\n\r\n  const renderBadge = useCallback((badge: ToolbarItem['badge']) => {\r\n    if (!badge) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof badge === 'object') {\r\n      const count = badge.count ?? badge.value;\r\n      return (\r\n        <DynBadge\r\n          count={typeof count === 'number' ? count : undefined}\r\n          maxCount={badge.maxCount}\r\n          showZero={badge.showZero}\r\n          color={badge.color}\r\n          variant={badge.variant}\r\n          size=\"small\"\r\n        >\r\n          {badge.label}\r\n        </DynBadge>\r\n      );\r\n    }\r\n\r\n    if (typeof badge === 'number') {\r\n      return <DynBadge count={badge} size=\"small\" />;\r\n    }\r\n\r\n    return <DynBadge size=\"small\">{badge}</DynBadge>;\r\n  }, []);\r\n\r\n  const renderIconContent = useCallback((icon: ToolbarItem['icon']) => {\r\n    if (React.isValidElement(icon)) {\r\n      return icon;\r\n    }\r\n\r\n    if (typeof icon === 'string') {\r\n      const normalizedIcon = icon.trim();\r\n\r\n      if (!normalizedIcon) {\r\n        return null;\r\n      }\r\n\r\n      if (isSymbolicIcon(normalizedIcon)) {\r\n        return (\r\n          <span\r\n            className={styles['toolbar-item-icon-text']}\r\n            data-testid={`icon-${normalizedIcon}`}\r\n            aria-hidden=\"true\"\r\n          >\r\n            {normalizedIcon}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      return <DynIcon icon={normalizedIcon} data-testid={`icon-${normalizedIcon}`} />;\r\n    }\r\n\r\n    if (icon == null) {\r\n      return null;\r\n    }\r\n\r\n    return icon as React.ReactNode;\r\n  }, []);\r\n\r\n  const renderToolbarItem = (item: ToolbarItem, isInOverflow = false) => {\r\n    if (item.type === 'separator') {\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          className={classNames(styles['toolbar-separator'], 'toolbar-separator')}\r\n          data-toolbar-item\r\n        />\r\n      );\r\n    }\r\n\r\n    if (item.type === 'search') {\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          className={classNames(styles['toolbar-search'], 'toolbar-search')}\r\n          data-toolbar-item\r\n        >\r\n          <input\r\n            type=\"search\"\r\n            placeholder={item.label || 'Search...'}\r\n            className={styles['search-input']}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (item.type === 'custom' && item.component) {\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          className={classNames(styles['toolbar-custom'], 'toolbar-custom')}\r\n          data-toolbar-item\r\n        >\r\n          {item.component}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const itemClasses = classNames(\r\n      styles['toolbar-item'],\r\n      'toolbar-item',\r\n      {\r\n        [styles['toolbar-item-disabled']]: item.disabled,\r\n        'toolbar-item-disabled': item.disabled,\r\n        [styles['toolbar-item-active']]: activeDropdown === item.id,\r\n        'toolbar-item-active': activeDropdown === item.id,\r\n        [styles['toolbar-item-overflow']]: isInOverflow,\r\n        'toolbar-item-overflow': isInOverflow,\r\n        [styles['toolbar-item-dropdown']]: item.type === 'dropdown',\r\n        'toolbar-item-dropdown': item.type === 'dropdown'\r\n      },\r\n      itemClassName\r\n    );\r\n\r\n    const iconContent = renderIconContent(item.icon);\r\n\r\n    return (\r\n      <div key={item.id} className={styles['toolbar-item-wrapper']}>\r\n        <button\r\n          className={itemClasses}\r\n          onClick={(e) => handleItemClick(item, e)}\r\n          disabled={item.disabled}\r\n          title={item.tooltip || item.label}\r\n          data-toolbar-item\r\n          aria-label={item.label}\r\n          aria-expanded={item.type === 'dropdown' ? activeDropdown === item.id : undefined}\r\n          aria-haspopup={item.type === 'dropdown' ? 'menu' : undefined}\r\n        >\r\n          {iconContent && (\r\n            <span className={styles['toolbar-item-icon']}>\r\n              {iconContent}\r\n            </span>\r\n          )}\r\n          {showLabels && item.label && (\r\n            <span\r\n              className={styles['toolbar-item-label']}\r\n              // Make label element usable for tests that query by text — expose\r\n              // accessibility attributes on the label itself so getByText() can be\r\n              // used in tests to inspect ARIA attributes and tooltips.\r\n              title={item.tooltip || item.label}\r\n              aria-label={item.label}\r\n              aria-haspopup={item.type === 'dropdown' ? 'menu' : undefined}\r\n              aria-expanded={item.type === 'dropdown' ? activeDropdown === item.id : undefined}\r\n              tabIndex={0}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  e.preventDefault();\r\n                  handleItemClick(item);\r\n                }\r\n              }}\r\n            >\r\n              {item.label}\r\n            </span>\r\n          )}\r\n          {item.badge && (() => {\r\n            // compute simple numeric count for tests\r\n            let count: number | string | undefined;\r\n            if (typeof item.badge === 'number') count = item.badge;\r\n            else if (typeof item.badge === 'object') count = item.badge.count ?? item.badge.value;\r\n\r\n            return (\r\n              <span\r\n                className={styles['toolbar-item-badge']}\r\n                data-testid=\"badge\"\r\n                {...(count !== undefined ? { 'data-count': String(count) } : {})}\r\n              >\r\n                {renderBadge(item.badge)}\r\n              </span>\r\n            );\r\n          })()}\r\n          {item.type === 'dropdown' && (\r\n            <span className={styles['toolbar-dropdown-arrow']}>\r\n              <DynIcon icon=\"dyn-icon-chevron-down\" />\r\n            </span>\r\n          )}\r\n        </button>\r\n\r\n        {/* Dropdown menu */}\r\n        {item.type === 'dropdown' && item.items && activeDropdown === item.id && (\r\n          <div className={styles['toolbar-dropdown-menu']} role=\"menu\">\r\n            {item.items.map(subItem => (\r\n              <button\r\n                key={subItem.id}\r\n                className={styles['toolbar-dropdown-item']}\r\n                onClick={() => handleItemClick(subItem)}\r\n                disabled={subItem.disabled}\r\n                role=\"menuitem\"\r\n              >\r\n                {subItem.icon && (\r\n                  <span className={styles['toolbar-item-icon']}>\r\n                    {typeof subItem.icon === 'string' ? (\r\n                      <DynIcon icon={subItem.icon} />\r\n                    ) : (\r\n                      subItem.icon\r\n                    )}\r\n                  </span>\r\n                )}\r\n                <span className={styles['toolbar-item-label']}>\r\n                  {subItem.label}\r\n                </span>\r\n                {subItem.badge && (\r\n                  <span className={styles['toolbar-item-badge']}>\r\n                    {renderBadge(subItem.badge)}\r\n                  </span>\r\n                )}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const toolbarClasses = classNames(\r\n    styles['dyn-toolbar'],\r\n    'dyn-toolbar',\r\n    {\r\n      [styles[`variant-${variant}`]]: variant,\r\n      [`variant-${variant}`]: variant,\r\n      [styles[`size-${size}`]]: size,\r\n      [`size-${size}`]: size,\r\n      [styles[`position-${position}`]]: position,\r\n      [`position-${position}`]: position,\r\n      [styles['responsive']]: responsive,\r\n      'responsive': responsive,\r\n      [styles['show-labels']]: showLabels,\r\n      'show-labels': showLabels\r\n    },\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div className={toolbarClasses} ref={toolbarRef} role=\"toolbar\">\r\n      <div className={styles['toolbar-content']}>\r\n        <div className={styles['toolbar-items']}>\r\n          {visibleItems.map(item => renderToolbarItem(item))}\r\n        </div>\r\n\r\n        {overflowItems.length > 0 && (\r\n          <div className={styles['toolbar-overflow']} ref={overflowRef}>\r\n            <button\r\n              className={classNames(\r\n                styles['toolbar-overflow-button'],\r\n                'toolbar-overflow-button',\r\n                {\r\n                  [styles['active']]: isOverflowOpen,\r\n                  'active': isOverflowOpen\r\n                },\r\n                itemClassName\r\n              )}\r\n              onClick={handleOverflowToggle}\r\n              aria-haspopup=\"menu\"\r\n              aria-expanded={isOverflowOpen}\r\n              aria-label=\"More actions\"\r\n              title=\"More actions\"\r\n            >\r\n              <DynIcon icon=\"more-horizontal\" />\r\n            </button>\r\n\r\n            {isOverflowOpen && (\r\n              <div className={styles['toolbar-overflow-menu']} role=\"menu\">\r\n                {overflowItems.map(item => renderToolbarItem(item, true))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nDynToolbar.displayName = 'DynToolbar';\r\n\r\nexport default DynToolbar;\r\nexport { DynToolbar };\r\n","import * as React from 'react';\r\n\r\nexport type Theme = 'light' | 'dark';\r\n\r\nexport type ThemeContextValue = {\r\n  theme: Theme;\r\n  setTheme: (theme: Theme) => void;\r\n  availableThemes: Theme[];\r\n};\r\n\r\nexport const ThemeContext = React.createContext<ThemeContextValue | null>(null);\r\n\r\nexport type ThemeProviderProps = {\r\n  initialTheme?: Theme;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst AVAILABLE_THEMES: Theme[] = ['light', 'dark'];\r\n\r\nexport function ThemeProvider({ initialTheme = 'light', children }: ThemeProviderProps) {\r\n  const [theme, setThemeState] = React.useState<Theme>(initialTheme);\r\n\r\n  const setTheme = React.useCallback((newTheme: Theme) => {\r\n    if (AVAILABLE_THEMES.includes(newTheme)) {\r\n      setThemeState(newTheme);\r\n    }\r\n  }, []);\r\n\r\n  // Apply theme to document when theme changes\r\n  React.useEffect(() => {\r\n    const root = document.documentElement;\r\n    \r\n    // Remove existing theme classes\r\n    AVAILABLE_THEMES.forEach(t => {\r\n      root.classList.remove(`theme-${t}`);\r\n    });\r\n    \r\n    // Add new theme class\r\n    root.classList.add(`theme-${theme}`);\r\n    \r\n    // Set data attribute for CSS selector support\r\n    root.setAttribute('data-theme', theme);\r\n  }, [theme]);\r\n\r\n  // Set initial theme on mount\r\n  React.useEffect(() => {\r\n    setTheme(initialTheme);\r\n  }, [initialTheme, setTheme]);\r\n\r\n  const contextValue = React.useMemo(() => ({\r\n    theme,\r\n    setTheme,\r\n    availableThemes: AVAILABLE_THEMES,\r\n  }), [theme, setTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useTheme = () => {\r\n  const context = React.useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};","import * as React from 'react';\r\nimport { useTheme, type Theme } from '../../theme/ThemeProvider';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { ThemeSwitcherProps } from './ThemeSwitcher.types';\r\nexport type { ThemeSwitcherProps } from './ThemeSwitcher.types';\r\nimport styles from './ThemeSwitcher.module.css';\r\n\r\nconst sizeClassMap: Record<NonNullable<ThemeSwitcherProps['size']>, string> = {\r\n  sm: styles.sizeSm,\r\n  md: styles.sizeMd,\r\n};\r\n\r\nconst roundedClassMap: Record<NonNullable<ThemeSwitcherProps['rounded']>, string> = {\r\n  sm: styles.roundedSm,\r\n  md: styles.roundedMd,\r\n  lg: styles.roundedLg,\r\n  full: styles.roundedFull,\r\n};\r\n\r\nexport function ThemeSwitcher({\r\n  themes,\r\n  size = 'md',\r\n  rounded = 'md',\r\n  onChange,\r\n  labels,\r\n  className,\r\n  buttonClassName,\r\n  activeButtonClassName,\r\n}: ThemeSwitcherProps) {\r\n  const { theme, setTheme, availableThemes } = useTheme();\r\n  const themeList = themes && themes.length ? themes : availableThemes;\r\n\r\n  const handleThemeChange = (newTheme: Theme) => {\r\n    console.log(`Switching theme from ${theme} to ${newTheme}`);\r\n    setTheme(newTheme);\r\n    onChange?.(newTheme);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"tablist\"\r\n      aria-label=\"Theme switcher\"\r\n      className={cn(styles.toggleGroup, sizeClassMap[size], roundedClassMap[rounded], className)}\r\n    >\r\n      {themeList.map((t) => {\r\n        const isActive = theme === t;\r\n        const label = labels?.[t] ?? t.charAt(0).toUpperCase() + t.slice(1);\r\n\r\n        return (\r\n          <button\r\n            key={t}\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-selected={isActive}\r\n            onClick={() => handleThemeChange(t)}\r\n            className={cn(\r\n              styles.toggleGroupButton,\r\n              buttonClassName,\r\n              isActive && activeButtonClassName,\r\n            )}\r\n            data-active={isActive ? 'true' : undefined}\r\n          >\r\n            {label}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nThemeSwitcher.displayName = 'ThemeSwitcher';\r\n\r\nexport default ThemeSwitcher;","import { useContext } from 'react';\r\nimport { ThemeContext } from '../theme/ThemeProvider';\r\nimport type { ThemeContextValue } from '../theme/ThemeProvider';\r\n\r\n/**\r\n * Hook for accessing theme context\r\n * @returns Theme context value with current theme and theme utilities\r\n */\r\nexport const useTheme = (): ThemeContextValue => {\r\n  const context = useContext(ThemeContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\n/**\r\n * Hook for getting CSS custom properties from current theme\r\n * @returns Object with CSS custom properties for current theme\r\n */\r\nexport const useThemeVars = () => {\r\n  const { theme } = useTheme();\r\n  \r\n  const cssVars: Record<string, string> = {};\r\n  \r\n  // Basic theme variables\r\n  cssVars['--theme-name'] = theme;\r\n  cssVars['--theme-mode'] = theme === 'dark' ? 'dark' : 'light';\r\n  \r\n  return cssVars;\r\n};"],"names":["require$$0","React","error","ReactDebugCurrentFrame","item","error$1","value","isValidElement","info","step","jsxRuntimeModule","require$$1","classNames","styles","generateInitials","jsx","icon","spin","disabled","content","getStyleClass","label","loading","danger","fullWidth","hideOnMobile","iconOnlyOnMobile","jsxs","Fragment","sizeClassNameMap","animated","shadow","typeClassNameMap","title","subtitle","canvas","required","optional","errorMessage","help","sizeClassMap","toPascalCase","bordered","noPadding","input","relativeText","rounded","striped","hoverable","pagination","DynListView","actions","breadcrumbs","breadcrumb","options","option","showLabels","panel","container","maxVisible","badge","root","useTheme"],"mappings":"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","x_google_ignoreList":[0,1,2,44]}