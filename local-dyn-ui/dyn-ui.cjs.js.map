{"version":3,"file":"dyn-ui.cjs.js","sources":["../../../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.development.js","../src/utils/classNames.ts","../src/utils/accessibility.ts","../src/components/DynBadge/DynBadge.types.ts","../src/utils/dynFormatters.ts","../src/providers/IconDictionaryProvider.tsx","../src/hooks/useIconDictionary.ts","../src/components/DynIcon/icons.ts","../src/components/DynIcon/DynIcon.types.ts","../src/components/DynIcon/DynIcon.tsx","../src/components/DynButton/DynButton.types.ts","../src/components/DynButton/DynButton.tsx","../src/components/DynAvatar/DynAvatar.types.ts","../src/components/DynAvatar/DynAvatar.tsx","../src/components/DynBadge/DynBadge.tsx","../src/components/DynBox/DynBox.tsx","../src/components/DynBreadcrumb/DynBreadcrumb.tsx","../src/components/DynChart/DynChart.types.ts","../src/components/DynChart/DynChart.utils.ts","../src/components/DynChart/DynChart.tsx","../src/components/DynFieldContainer/DynFieldContainer.types.ts","../src/components/DynFieldContainer/DynFieldContainer.tsx","../src/hooks/useDynFieldValidation.ts","../src/components/DynCheckbox/DynCheckbox.types.ts","../src/components/DynCheckbox/DynCheckbox.tsx","../src/components/DynContainer/DynContainer.types.ts","../src/components/DynContainer/DynContainer.tsx","../src/hooks/useDynDateParser.ts","../src/components/DynDatePicker/DynDatePicker.tsx","../src/components/DynDivider/DynDivider.types.ts","../src/components/DynDivider/DynDivider.tsx","../src/components/DynGauge/DynGauge.types.ts","../src/components/DynGauge/DynGauge.tsx","../src/components/DynGrid/DynGrid.types.ts","../src/components/DynGrid/DynGrid.tsx","../src/hooks/useDynMask.ts","../src/components/DynInput/DynInput.tsx","../src/components/DynTextArea/DynTextArea.types.ts","../src/components/DynTextArea/DynTextArea.tsx","../src/components/DynLabel/DynLabel.tsx","../src/components/DynListView/DynListView.tsx","../src/components/DynPage/DynPage.tsx","../../../node_modules/.pnpm/classnames@2.5.1/node_modules/classnames/index.js","../src/components/DynSelect/DynSelect.tsx","../src/components/DynStepper/DynStepper.tsx","../src/components/DynTabs/DynTabs.tsx","../src/components/DynToolbar/DynToolbar.types.ts","../src/components/DynToolbar/DynToolbar.tsx","../src/theme/ThemeProvider.tsx","../src/hooks/useTheme.ts"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","/**\r\n * Enhanced classNames utility - TypeScript compatible version\r\n * Optimized for DYN UI components with CSS Module support\r\n */\r\n\r\ntype ClassNameValue = string | number | boolean | null | undefined;\r\n\r\ntype ClassNameArg = \r\n  | ClassNameValue\r\n  | Record<string, ClassNameValue>\r\n  | ClassNameArg[];\r\n\r\n/**\r\n * Concatenates class names conditionally\r\n * Built-in implementation compatible with all environments\r\n * @param args - Array of class name arguments\r\n * @returns Concatenated class name string\r\n * \r\n * @example\r\n * ```typescript\r\n * // Basic usage\r\n * classNames('btn', 'btn-primary'); // 'btn btn-primary'\r\n * \r\n * // Conditional classes\r\n * classNames('btn', {\r\n *   'btn-primary': isPrimary,\r\n *   'btn-disabled': isDisabled\r\n * }); // 'btn btn-primary' (if isPrimary is true)\r\n * \r\n * // CSS Modules support\r\n * classNames(styles.button, styles.primary, {\r\n *   [styles.loading]: isLoading\r\n * });\r\n * ```\r\n */\r\nexport function classNames(...args: ClassNameArg[]): string {\r\n  const classes: string[] = [];\r\n\r\n  for (const arg of args) {\r\n    if (!arg) continue;\r\n\r\n    if (typeof arg === 'string' || typeof arg === 'number') {\r\n      classes.push(String(arg));\r\n    } else if (Array.isArray(arg)) {\r\n      const nested = classNames(...arg);\r\n      if (nested) classes.push(nested);\r\n    } else if (typeof arg === 'object') {\r\n      for (const [key, value] of Object.entries(arg)) {\r\n        if (value) classes.push(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  return classes.join(' ');\r\n}\r\n\r\n/**\r\n * Shorter alias for classNames\r\n */\r\nexport const cn = classNames;\r\n\r\n/**\r\n * Creates a CSS module class name generator\r\n * @param styles - CSS module styles object\r\n * @returns Function that maps class names to CSS module classes\r\n * \r\n * @example\r\n * ```typescript\r\n * import { styles } from './Button.module.css';\r\n * const cx = createClassNameGenerator(styles);\r\n * \r\n * const buttonClasses = cx('button', {\r\n *   primary: kind === 'primary',\r\n *   loading: isLoading\r\n * });\r\n * ```\r\n */\r\nexport function createClassNameGenerator(styles: Record<string, string>) {\r\n  return (...args: ClassNameArg[]) => {\r\n    const className = classNames(...args);\r\n    return className\r\n      .split(' ')\r\n      .map(cls => styles[cls] || cls)\r\n      .join(' ');\r\n  };\r\n}\r\n\r\n/**\r\n * CSS Module helper - combines CSS Module styles with additional classes\r\n * Provides type safety for CSS Module objects\r\n * \r\n * @param styles - CSS Module styles object\r\n * @param baseClass - Base class name from styles\r\n * @param additionalClasses - Additional classes to combine\r\n * @returns Combined class names\r\n * \r\n * @example\r\n * ```typescript\r\n * import { styles } from './Button.module.css';\r\n * \r\n * const buttonClasses = combineStyles(styles, 'button', {\r\n *   [styles.primary]: kind === 'primary',\r\n *   [styles.loading]: isLoading,\r\n *   'external-class': hasExternalClass\r\n * });\r\n * ```\r\n */\r\nexport function combineStyles(\r\n  styles: Record<string, string>,\r\n  baseClass: keyof typeof styles,\r\n  additionalClasses?: ClassNameArg\r\n): string {\r\n  return classNames(styles[baseClass], additionalClasses);\r\n}\r\n\r\n/**\r\n * Combines base classes with conditional classes\r\n * @param baseClasses - Always applied classes\r\n * @param conditionalClasses - Conditionally applied classes\r\n * @returns Combined class name string\r\n */\r\nexport function combineClasses(\r\n  baseClasses: string,\r\n  conditionalClasses?: ClassNameArg\r\n): string {\r\n  return classNames(baseClasses, conditionalClasses);\r\n}\r\n\r\n/**\r\n * Conditional class helper - applies class only if condition is true\r\n * \r\n * @param className - Class name to apply\r\n * @param condition - Condition to evaluate\r\n * @returns Class name if condition is true, empty string otherwise\r\n * \r\n * @example\r\n * ```typescript\r\n * const classes = classNames(\r\n *   'btn',\r\n *   conditionalClass('btn-loading', isLoading),\r\n *   conditionalClass('btn-disabled', isDisabled)\r\n * );\r\n * ```\r\n */\r\nexport function conditionalClass(className: string, condition: boolean): string {\r\n  return condition ? className : '';\r\n}\r\n\r\n/**\r\n * Variant class helper - applies variant class with prefix\r\n * Useful for consistent variant naming in design systems\r\n * \r\n * @param prefix - Prefix for the variant class\r\n * @param variant - Variant name\r\n * @param condition - Optional condition (defaults to true)\r\n * @returns Prefixed variant class name\r\n * \r\n * @example\r\n * ```typescript\r\n * const classes = classNames(\r\n *   'btn',\r\n *   variantClass('btn', 'primary'), // 'btn-primary'\r\n *   variantClass('btn', 'large', size === 'large') // 'btn-large' if condition is true\r\n * );\r\n * ```\r\n */\r\nexport function variantClass(\r\n  prefix: string,\r\n  variant: string,\r\n  condition: boolean = true\r\n): string {\r\n  return condition ? `${prefix}-${variant}` : '';\r\n}\r\n\r\n/**\r\n * Size class helper - converts size tokens to class names\r\n * Supports both full names and abbreviations for optimized bundle size\r\n * \r\n * @param prefix - Prefix for the size class\r\n * @param size - Size token ('small', 'medium', 'large' or 's', 'm', 'l')\r\n * @param useAbbreviation - Whether to use abbreviated size names\r\n * @returns Size class name\r\n * \r\n * @example\r\n * ```typescript\r\n * sizeClass('btn', 'medium'); // 'btn-medium'\r\n * sizeClass('btn', 'medium', true); // 'btn-m'\r\n * sizeClass('btn', 'large'); // 'btn-large'\r\n * sizeClass('btn', 'large', true); // 'btn-l'\r\n * ```\r\n */\r\nexport function sizeClass(\r\n  prefix: string,\r\n  size: 'small' | 'medium' | 'large' | 's' | 'm' | 'l',\r\n  useAbbreviation: boolean = false\r\n): string {\r\n  const sizeMap = {\r\n    small: useAbbreviation ? 's' : 'small',\r\n    medium: useAbbreviation ? 'm' : 'medium',\r\n    large: useAbbreviation ? 'l' : 'large',\r\n    s: 's',\r\n    m: 'm',\r\n    l: 'l'\r\n  };\r\n  \r\n  const mappedSize = sizeMap[size];\r\n  return `${prefix}-${mappedSize}`;\r\n}","// Global counters for different component types to ensure unique IDs\r\nconst counters = new Map<string, number>();\r\n\r\n/**\r\n * Generates a unique ID for a component with the given prefix.\r\n * Uses separate counters for different prefixes to ensure uniqueness.\r\n * \r\n * @param prefix - The prefix to use for the ID (e.g., 'button', 'input')\r\n * @returns A unique ID string\r\n */\r\nexport const generateId = (prefix: string = 'dyn-id'): string => {\r\n  const currentCount = counters.get(prefix) || 0;\r\n  const nextCount = currentCount + 1;\r\n  counters.set(prefix, nextCount);\r\n  return `${prefix}-${nextCount}`;\r\n};\r\n\r\n/**\r\n * Resets all ID counters. Primarily used for testing purposes.\r\n * \r\n * @internal\r\n */\r\nexport const resetIdCounters = (): void => {\r\n  counters.clear();\r\n};\r\n","import type {\r\n  HTMLAttributes,\r\n  MouseEvent as ReactMouseEvent,\r\n  ReactNode\r\n} from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\nexport type ComponentSize = 'small' | 'medium' | 'large';\r\n\r\nexport const DYN_BADGE_COLORS = [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'warning',\r\n  'danger',\r\n  'info',\r\n  'neutral'\r\n] as const;\r\n\r\nexport type DynBadgeSemanticColor = (typeof DYN_BADGE_COLORS)[number];\r\nexport type DynBadgeVariant = 'solid' | 'soft' | 'outline' | 'dot';\r\nexport type DynBadgeColor = DynBadgeSemanticColor | (string & {});\r\nexport type DynBadgePosition = 'topRight' | 'topLeft' | 'bottomRight' | 'bottomLeft';\r\n\r\n\r\n\r\n/**\r\n * Props interface for DynBadge component\r\n * Clean TypeScript implementation following DynAvatar gold standard\r\n */\r\nexport interface DynBadgeProps\r\n  extends BaseComponentProps,\r\n    AccessibilityProps,\r\n    Omit<HTMLAttributes<HTMLSpanElement>, keyof BaseComponentProps | keyof AccessibilityProps | 'color' | 'children'> {\r\n  /** Badge content */\r\n  children?: ReactNode;\r\n\r\n  /** Badge variant style */\r\n  variant?: DynBadgeVariant;\r\n\r\n  /** Semantic color */\r\n  color?: DynBadgeColor;\r\n\r\n  /** Size variant */\r\n  size?: ComponentSize;\r\n\r\n  /** Position when used as overlay */\r\n  position?: DynBadgePosition;\r\n\r\n  /** Click handler (makes badge interactive) */\r\n  onClick?: (event: ReactMouseEvent<HTMLSpanElement>) => void;\r\n\r\n  /** Icon before text */\r\n  startIcon?: ReactNode;\r\n\r\n  /** Icon after text */\r\n  endIcon?: ReactNode;\r\n\r\n  /** Max count before showing + */\r\n  maxCount?: number;\r\n\r\n  /** Numeric value (for count badges) */\r\n  count?: number;\r\n\r\n  /**\r\n   * @deprecated Use `count` instead. Legacy alias maintained for backward compatibility.\r\n   */\r\n  value?: number;\r\n\r\n  /** Show badge even when count is 0 */\r\n  showZero?: boolean;\r\n\r\n  /** Animate appearance */\r\n  animated?: boolean;\r\n\r\n  /** Pulse animation for notifications */\r\n  pulse?: boolean;\r\n\r\n  /** Accessible description for count */\r\n  countDescription?: string;\r\n}\r\n\r\n/**\r\n * Ref type for DynBadge component\r\n */\r\nexport type DynBadgeRef = HTMLSpanElement;\r\n","/**\r\n * Utility functions for formatting data in DYN UI components\r\n */\r\nimport { DYN_BADGE_COLORS } from '../components/DynBadge/DynBadge.types';\r\nimport type { IconDictionary, ProcessedIcon } from '../types/icon.types';\r\n\r\n/**\r\n * DynCurrencyConfig type: defined locally because it's not exported from '../types/field.types'\r\n * Fields are optional here; callers use Required<DynCurrencyConfig> where needed.\r\n */\r\nexport interface DynCurrencyConfig {\r\n  precision?: number;\r\n  decimalSeparator?: string;\r\n  thousandSeparator?: string;\r\n  symbol?: string;\r\n  currencyCode?: string;\r\n}\r\n\r\n/**\r\n * Generates initials from a full name\r\n * @param name - Full name (e.g., \"John Doe\")\r\n * @returns Initials (e.g., \"JD\")\r\n */\r\nexport const generateInitials = (name: string): string => {\r\n  if (!name || typeof name !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  const trimmed = name.trim();\r\n  if (!trimmed) {\r\n    return '';\r\n  }\r\n\r\n  const words = trimmed.split(/\\s+/).filter(Boolean);\r\n  if (words.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const [firstWord, ...restWords] = words;\r\n  if (!firstWord) {\r\n    return '';\r\n  }\r\n\r\n  if (restWords.length === 0) {\r\n    return firstWord.charAt(0).toUpperCase();\r\n  }\r\n\r\n  const lastWord = restWords[restWords.length - 1];\r\n  if (!lastWord) {\r\n    return firstWord.charAt(0).toUpperCase();\r\n  }\r\n\r\n  return (firstWord.charAt(0) + lastWord.charAt(0)).toUpperCase();\r\n};\r\n\r\n/**\r\n * Formats badge value for display (9+ for values > 9)\r\n * @param value - Numeric value\r\n * @returns Formatted string\r\n */\r\nexport const formatBadgeValue = (value: number): string => {\r\n  if (value <= 0) return '0';\r\n  if (value > 99) return '99+';\r\n  return value.toString();\r\n};\r\n\r\n/**\r\n * Checks if a color is a theme color from DYN palette\r\n * @param color - Color string\r\n * @returns Boolean indicating if it's a theme color\r\n */\r\nexport const isThemeColor = (color: string): boolean => {\r\n  return (DYN_BADGE_COLORS as readonly string[]).includes(color);\r\n};\r\n\r\n/**\r\n * Processes icon string with dictionary lookup\r\n * @param iconStr - Icon string (may contain dictionary keys)\r\n * @param dictionary - Icon dictionary mapping\r\n * @returns Processed icon classes\r\n */\r\nexport const processIconString = (\r\n  iconStr: string,\r\n  dictionary: IconDictionary\r\n): ProcessedIcon => {\r\n  const iconTokens = iconStr\r\n    .split(/\\s+/)\r\n    .map((token) => token.trim())\r\n    .filter(Boolean);\r\n\r\n  let processedClass = '';\r\n  let baseClass: string | undefined;\r\n\r\n  iconTokens.forEach((token, index) => {\r\n    const dictValue = dictionary[token];\r\n\r\n    if (dictValue) {\r\n      processedClass = index === 0 ? dictValue : `${processedClass} ${dictValue}`;\r\n      if (!baseClass && dictValue.startsWith('dyn-icon')) {\r\n        baseClass = 'dyn-icon';\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (token.startsWith('dyn-icon-')) {\r\n      processedClass = index === 0 ? token : `${processedClass} ${token}`;\r\n      if (!baseClass) {\r\n        baseClass = 'dyn-icon';\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (token.startsWith('fa') || token.startsWith('fas') || token.startsWith('far')) {\r\n      baseClass = 'dyn-fonts-icon';\r\n      processedClass = index === 0 ? token : `${processedClass} ${token}`;\r\n      return;\r\n    }\r\n\r\n    processedClass = index === 0 ? token : `${processedClass} ${token}`;\r\n  });\r\n\r\n  return {\r\n    baseClass: baseClass ?? 'dyn-icon',\r\n    iconClass: processedClass.trim()\r\n  };\r\n};\r\n\r\nexport interface FormatCurrencyValueResult {\r\n  formattedValue: string;\r\n  symbol: string;\r\n  currencyCode?: string;\r\n  showCurrencyCode: boolean;\r\n}\r\n\r\nexport const formatCurrencyValue = (\r\n  value: string | number | null | undefined,\r\n  config: Required<DynCurrencyConfig> & { showCurrencyCode: boolean }\r\n): FormatCurrencyValueResult => {\r\n  const {\r\n    precision,\r\n    decimalSeparator,\r\n    thousandSeparator,\r\n    symbol,\r\n    currencyCode,\r\n    showCurrencyCode\r\n  } = config;\r\n\r\n  const precisionValue = Math.max(0, precision ?? 2);\r\n\r\n  if (value == null || value === '') {\r\n    return {\r\n      formattedValue: '',\r\n      symbol,\r\n      currencyCode,\r\n      showCurrencyCode\r\n    };\r\n  }\r\n\r\n  const numericValue =\r\n    typeof value === 'number' ? value : Number.parseFloat(String(value));\r\n\r\n  if (Number.isNaN(numericValue)) {\r\n    return {\r\n      formattedValue: '',\r\n      symbol,\r\n      currencyCode,\r\n      showCurrencyCode\r\n    };\r\n  }\r\n\r\n  const sign = numericValue < 0 ? '-' : '';\r\n  const absoluteValue = Math.abs(numericValue);\r\n  const fixedValue = absoluteValue.toFixed(precisionValue);\r\n  const [integerPartRaw, decimalPartRaw] = fixedValue.split('.');\r\n\r\n  const integerWithSeparator = integerPartRaw.replace(\r\n    /\\B(?=(\\d{3})+(?!\\d))/g,\r\n    thousandSeparator\r\n  );\r\n\r\n  const formattedWithoutSign =\r\n    precisionValue > 0 && decimalPartRaw\r\n      ? `${integerWithSeparator}${decimalSeparator}${decimalPartRaw}`\r\n      : integerWithSeparator;\r\n\r\n  return {\r\n    formattedValue: `${sign}${formattedWithoutSign}`,\r\n    symbol,\r\n    currencyCode,\r\n    showCurrencyCode\r\n  };\r\n};\r\n","import { createContext, useEffect, useMemo, useState } from 'react';\r\nimport type { PropsWithChildren } from 'react';\r\nimport type { IconDictionary } from '../types/icon.types';\r\n\r\nexport type IconDictionaryContextValue = IconDictionary;\r\n\r\nconst DEFAULT_ICON_DICTIONARY: IconDictionary = Object.freeze({\r\n  'user': 'dyn-icon-user',\r\n  'home': 'dyn-icon-home',\r\n  'settings': 'dyn-icon-settings',\r\n  'ok': 'dyn-icon-ok',\r\n  'close': 'dyn-icon-close',\r\n  'warning': 'dyn-icon-warning',\r\n  'minus': 'dyn-icon-minus',\r\n  'plus': 'dyn-icon-plus',\r\n  'search': 'dyn-icon-search',\r\n  'edit': 'dyn-icon-edit',\r\n  'delete': 'dyn-icon-delete',\r\n  'arrow-up': 'dyn-icon-arrow-up',\r\n  'arrow-down': 'dyn-icon-arrow-down',\r\n  'arrow-left': 'dyn-icon-arrow-left',\r\n  'arrow-right': 'dyn-icon-arrow-right',\r\n  'menu': 'dyn-icon-menu',\r\n  'info': 'dyn-icon-info',\r\n  'calendar': 'dyn-icon-calendar',\r\n  'clock': 'dyn-icon-clock',\r\n  'mail': 'dyn-icon-mail',\r\n});\r\n\r\nexport const IconDictionaryContext = createContext<IconDictionaryContextValue | undefined>(undefined);\r\n\r\nexport interface IconDictionaryProviderProps {\r\n  customDictionary?: IconDictionary | null | undefined;\r\n}\r\n\r\nexport const IconDictionaryProvider = ({\r\n  children,\r\n  customDictionary,\r\n}: PropsWithChildren<IconDictionaryProviderProps>) => {\r\n  const [dictionary, setDictionary] = useState<IconDictionaryContextValue>(DEFAULT_ICON_DICTIONARY);\r\n\r\n  useEffect(() => {\r\n    if (!customDictionary || Object.keys(customDictionary).length === 0) {\r\n      setDictionary(DEFAULT_ICON_DICTIONARY);\r\n      return;\r\n    }\r\n\r\n    setDictionary({\r\n      ...DEFAULT_ICON_DICTIONARY,\r\n      ...customDictionary,\r\n    });\r\n  }, [customDictionary]);\r\n\r\n  const value = useMemo<IconDictionaryContextValue>(() => dictionary, [dictionary]);\r\n\r\n  return (\r\n    <IconDictionaryContext.Provider value={value}>\r\n      {children}\r\n    </IconDictionaryContext.Provider>\r\n  );\r\n};\r\n\r\nexport { DEFAULT_ICON_DICTIONARY };\r\n","import { useContext } from 'react';\r\nimport { IconDictionaryContext } from '../providers/IconDictionaryProvider';\r\n\r\nexport const useIconDictionary = () => {\r\n  const context = useContext(IconDictionaryContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error('useIconDictionary must be used within IconDictionaryProvider');\r\n  }\r\n\r\n  return context;\r\n};\r\n","import * as React from 'react';\r\n\r\n// Built-in icon registry with common SVG icons\r\nexport const iconRegistry = {\r\n  check: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: React.createElement('path', {\r\n      d: 'M20 6L9 17l-5-5',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round'\r\n    })\r\n  }),\r\n  \r\n  close: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('path', {\r\n        key: '1',\r\n        d: 'M18 6L6 18',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('path', {\r\n        key: '2', \r\n        d: 'M6 6l12 12',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  warning: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('path', {\r\n        key: '1',\r\n        d: 'M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z'\r\n      }),\r\n      React.createElement('line', {\r\n        key: '2',\r\n        x1: '12',\r\n        y1: '9',\r\n        x2: '12',\r\n        y2: '13',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('circle', { key: '3', cx: '12', cy: '17', r: '1' })\r\n    ]\r\n  }),\r\n  \r\n  info: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '10' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M12 16v-4',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('path', {\r\n        key: '3',\r\n        d: 'M12 8h.01',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  ok: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '10' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M9 12l2 2 4-4',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  minus: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: React.createElement('line', {\r\n      x1: '5',\r\n      y1: '12',\r\n      x2: '19',\r\n      y2: '12',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round'\r\n    })\r\n  }),\r\n  \r\n  plus: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('line', {\r\n        key: '1',\r\n        x1: '12',\r\n        y1: '5',\r\n        x2: '12',\r\n        y2: '19',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('line', {\r\n        key: '2',\r\n        x1: '5',\r\n        y1: '12',\r\n        x2: '19',\r\n        y2: '12',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n\r\n  'more-horizontal': React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '6', cy: '12', r: '1' }),\r\n      React.createElement('circle', { key: '2', cx: '12', cy: '12', r: '1' }),\r\n      React.createElement('circle', { key: '3', cx: '18', cy: '12', r: '1' })\r\n    ]\r\n  }),\r\n\r\n  download: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('path', {\r\n        key: '1',\r\n        d: 'M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('polyline', {\r\n        key: '2',\r\n        points: '7,10 12,15 17,10',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('line', {\r\n        key: '3',\r\n        x1: '12',\r\n        y1: '15',\r\n        x2: '12',\r\n        y2: '3',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  settings: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '3' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M12 1v6m0 6v6m11-7h-6m-6 0H1',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      })\r\n    ]\r\n  }),\r\n  \r\n  help: React.createElement('svg', {\r\n    viewBox: '0 0 24 24',\r\n    fill: 'none',\r\n    stroke: 'currentColor',\r\n    strokeWidth: '2',\r\n    children: [\r\n      React.createElement('circle', { key: '1', cx: '12', cy: '12', r: '10' }),\r\n      React.createElement('path', {\r\n        key: '2',\r\n        d: 'M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round'\r\n      }),\r\n      React.createElement('circle', { key: '3', cx: '12', cy: '17', r: '1' })\r\n    ]\r\n  }),\r\n};\r\n\r\nexport type IconName = keyof typeof iconRegistry;\r\n\r\nexport const getIcon = (name: string): React.ReactElement | null => {\r\n  return iconRegistry[name as IconName] || null;\r\n};","import type { HTMLAttributes, ReactNode } from 'react';\r\n\r\nexport type DynIconTone = 'success' | 'warning' | 'danger' | 'info';\r\nexport type DynIconSizeToken = 'small' | 'medium' | 'large';\r\n\r\nexport interface DynIconProps extends Omit<HTMLAttributes<HTMLSpanElement>, 'color'> {\r\n  /** Icon identifier - string (dictionary key, class names) or React node */\r\n  icon?: string | ReactNode;\r\n\r\n  /** Icon size token or explicit dimension */\r\n  size?: DynIconSizeToken | number | string;\r\n\r\n  /** Semantic tone helper that maps to predefined colors */\r\n  tone?: DynIconTone;\r\n\r\n  /** Custom color override */\r\n  color?: string;\r\n\r\n  /** Whether the icon should spin */\r\n  spin?: boolean;\r\n\r\n  /** Disabled state prevents interaction */\r\n  disabled?: boolean;\r\n\r\n  /** Icon content fallback */\r\n  children?: ReactNode;\r\n\r\n  /** Test identifier for automated testing */\r\n  'data-testid'?: string;\r\n}\r\n\r\nexport interface DynIconDefaultProps {\r\n  size: DynIconSizeToken;\r\n  spin: boolean;\r\n  disabled: boolean;\r\n}\r\n\r\nexport const DYN_ICON_DEFAULT_PROPS: DynIconDefaultProps = {\r\n  size: 'medium',\r\n  spin: false,\r\n  disabled: false,\r\n} as const;\r\n\r\nexport type IconDictionary = Record<string, string>;\r\n\r\nexport interface ProcessedIcon {\r\n  baseClass: string;\r\n  iconClass: string;\r\n}\r\n","import {\r\n  forwardRef,\r\n  isValidElement,\r\n  useMemo,\r\n} from 'react';\r\nimport type {\r\n  CSSProperties,\r\n  ForwardedRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { processIconString } from '../../utils/dynFormatters';\r\nimport { useIconDictionary } from '../../hooks/useIconDictionary';\r\nimport { DEFAULT_ICON_DICTIONARY } from '../../providers/IconDictionaryProvider';\r\nimport type { IconDictionary } from '../../types';\r\nimport { iconRegistry } from './icons';\r\nimport type {\r\n  DynIconProps,\r\n  DynIconSizeToken,\r\n} from './DynIcon.types';\r\nimport { DYN_ICON_DEFAULT_PROPS } from './DynIcon.types';\r\nimport styles from './DynIcon.module.css';\r\n\r\ntype RegistryIcon = ReactElement | null;\r\n\r\nconst SIZE_CLASS_MAP: Record<DynIconSizeToken, string> = {\r\n  small: styles['dyn-icon-size-small']!,\r\n  medium: styles['dyn-icon-size-medium']!,\r\n  large: styles['dyn-icon-size-large']!,\r\n};\r\n\r\nconst TONE_CLASS_MAP: Partial<Record<NonNullable<DynIconProps['tone']>, string>> = {\r\n  success: styles.success!,\r\n  warning: styles.warning!,\r\n  danger: styles.danger!,\r\n  info: styles.info!,\r\n};\r\n\r\nconst resolveRegistryIcon = (iconKey: string): RegistryIcon => {\r\n  const normalizedKey = iconKey.trim();\r\n  if (!normalizedKey) {\r\n    return null;\r\n  }\r\n\r\n  const registryIcon = iconRegistry[normalizedKey as keyof typeof iconRegistry];\r\n  if (!registryIcon) {\r\n    return null;\r\n  }\r\n\r\n  return registryIcon;\r\n};\r\n\r\nconst DynIconComponent = (\r\n  props: DynIconProps,\r\n  ref: ForwardedRef<HTMLSpanElement>\r\n) => {\r\n  const {\r\n    icon,\r\n    size = DYN_ICON_DEFAULT_PROPS.size,\r\n    tone,\r\n    color,\r\n    spin = DYN_ICON_DEFAULT_PROPS.spin,\r\n    disabled = DYN_ICON_DEFAULT_PROPS.disabled,\r\n    onClick,\r\n    className,\r\n    style,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    role,\r\n    children,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { tabIndex, ...domProps } = rest;\r\n\r\n  let dictionary: IconDictionary;\r\n  try {\r\n    dictionary = useIconDictionary();\r\n  } catch (error) {\r\n    dictionary = DEFAULT_ICON_DICTIONARY;\r\n  }\r\n  const normalizedIcon = typeof icon === 'string' ? icon.trim() : '';\r\n\r\n  const iconTokens = useMemo(() => {\r\n    if (!normalizedIcon) {\r\n      return [] as string[];\r\n    }\r\n\r\n    return normalizedIcon\r\n      .split(/\\s+/)\r\n      .map(token => token.trim())\r\n      .filter(Boolean);\r\n  }, [normalizedIcon]);\r\n\r\n  const shouldUseRegistry = useMemo(() => {\r\n    if (!normalizedIcon || iconTokens.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const hasDictionaryMatch = iconTokens.some(token => Boolean(dictionary[token]));\r\n    const hasDirectClass = iconTokens.some(token => token.startsWith('dyn-icon-'));\r\n    const hasFontClass = iconTokens.some(token => token.startsWith('fa'));\r\n\r\n    if (hasDictionaryMatch || hasDirectClass || hasFontClass) {\r\n      return false;\r\n    }\r\n\r\n    return Boolean(resolveRegistryIcon(normalizedIcon));\r\n  }, [dictionary, iconTokens, normalizedIcon]);\r\n\r\n  const registryIcon = useMemo(() => {\r\n    if (!shouldUseRegistry) {\r\n      return null;\r\n    }\r\n\r\n    return resolveRegistryIcon(normalizedIcon);\r\n  }, [normalizedIcon, shouldUseRegistry]);\r\n\r\n  const processedIconClasses = useMemo(() => {\r\n    if (typeof icon !== 'string' || shouldUseRegistry) {\r\n      return null;\r\n    }\r\n\r\n    return processIconString(icon, dictionary);\r\n  }, [icon, dictionary, shouldUseRegistry]);\r\n\r\n  const resolvedSizeClass =\r\n    typeof size === 'string' && SIZE_CLASS_MAP[size as DynIconSizeToken];\r\n\r\n  const inlineDimensionStyle: CSSProperties | undefined = useMemo(() => {\r\n    if (typeof size === 'number') {\r\n      return {\r\n        width: size,\r\n        height: size,\r\n        fontSize: size,\r\n      } satisfies CSSProperties;\r\n    }\r\n\r\n    if (typeof size === 'string' && !SIZE_CLASS_MAP[size as DynIconSizeToken]) {\r\n      return {\r\n        width: size,\r\n        height: size,\r\n        fontSize: size,\r\n      } satisfies CSSProperties;\r\n    }\r\n\r\n    return undefined;\r\n  }, [size]);\r\n\r\n  const mergedStyle: CSSProperties | undefined = useMemo(() => {\r\n    if (!color && !inlineDimensionStyle) {\r\n      return style;\r\n    }\r\n\r\n    return {\r\n      ...inlineDimensionStyle,\r\n      ...style,\r\n      ...(color ? { color } : null),\r\n    } as CSSProperties | undefined;\r\n  }, [color, inlineDimensionStyle, style]);\r\n\r\n  const isInteractive = typeof onClick === 'function' && !disabled;\r\n\r\n  const toneClass = tone ? TONE_CLASS_MAP[tone] : undefined;\r\n\r\n  const rootClassName = cn(\r\n    styles.dynIcon,\r\n    resolvedSizeClass,\r\n    toneClass,\r\n    spin ? styles.spinning : undefined,\r\n    disabled ? styles.disabled : undefined,\r\n    isInteractive ? styles['dyn-icon-clickable'] : undefined,\r\n    processedIconClasses?.baseClass,\r\n    processedIconClasses?.iconClass,\r\n    className\r\n  );\r\n\r\n  const ariaRole = role ?? (isInteractive ? 'button' : 'img');\r\n  const shouldHideFromScreenReader =\r\n    !isInteractive &&\r\n    (ariaRole === 'img' || ariaRole === 'presentation' || ariaRole === 'none') &&\r\n    !rest['aria-label'] &&\r\n    !rest['aria-labelledby'];\r\n  const ariaHidden = rest['aria-hidden'] ?? (shouldHideFromScreenReader ? true : undefined);\r\n\r\n  const handleClick = (event: Parameters<NonNullable<typeof onClick>>[0]) => {\r\n    if (!isInteractive || !onClick) {\r\n      return;\r\n    }\r\n\r\n    onClick(event);\r\n  };\r\n\r\n  const content = (() => {\r\n    if (registryIcon) {\r\n      return (\r\n        <span className={styles.dynIconSvg} aria-hidden=\"true\">\r\n          {registryIcon}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (typeof icon === 'string') {\r\n      if (!processedIconClasses?.iconClass && !processedIconClasses?.baseClass) {\r\n        return (\r\n          <span className={styles.dynIconFallback} aria-hidden=\"true\">\r\n            {icon}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    if (isValidElement(icon)) {\r\n      return (\r\n        <span className={styles.dynIconCustom} aria-hidden=\"true\">\r\n          {icon}\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (icon) {\r\n      return icon;\r\n    }\r\n\r\n    return children ?? null;\r\n  })();\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      id={id}\r\n      data-testid={dataTestId}\r\n      role={ariaRole}\r\n      className={rootClassName}\r\n      style={mergedStyle}\r\n      onClick={disabled ? undefined : handleClick}\r\n      aria-disabled={disabled || undefined}\r\n      tabIndex={isInteractive ? tabIndex ?? 0 : tabIndex}\r\n      {...domProps}\r\n      aria-hidden={ariaHidden}\r\n    >\r\n      {content}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst DynIcon = forwardRef<HTMLSpanElement, DynIconProps>(DynIconComponent);\r\n\r\nDynIcon.displayName = 'DynIcon';\r\n\r\nexport { DynIcon };\r\nexport default DynIcon;\r\n","import type {\r\n  ButtonHTMLAttributes,\r\n  FocusEventHandler,\r\n  KeyboardEventHandler,\r\n  MouseEventHandler,\r\n  ReactNode,\r\n} from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\n/**\r\n * Button kind/variant types following design system standards\r\n */\r\nexport type DynButtonKind = 'primary' | 'secondary' | 'tertiary';\r\n\r\n/**\r\n * Button size variants using design token scale\r\n */\r\nexport type DynButtonSize = 'small' | 'medium' | 'large';\r\n\r\n/**\r\n * Props interface for DynButton component\r\n * Follows DynAvatar's standardized pattern with BaseComponentProps and AccessibilityProps\r\n */\r\nexport interface DynButtonProps\r\n  extends BaseComponentProps,\r\n    AccessibilityProps,\r\n    Omit<\r\n      ButtonHTMLAttributes<HTMLButtonElement>,\r\n      | 'type'\r\n      | 'onBlur'\r\n      | 'onClick'\r\n      | 'onKeyDown'\r\n      | 'children'\r\n      | 'aria-label'\r\n      | 'aria-expanded'\r\n      | 'aria-controls'\r\n      | 'aria-describedby'\r\n      | 'aria-pressed'\r\n      | keyof BaseComponentProps\r\n      | keyof AccessibilityProps\r\n    > {\r\n\r\n  /** Button text label */\r\n  label?: string;\r\n\r\n  /** Icon - can be string (icon name) or React node */\r\n  icon?: string | ReactNode;\r\n\r\n  /** HTML button type */\r\n  type?: 'button' | 'submit' | 'reset';\r\n\r\n  /** Loading state indicator */\r\n  loading?: boolean;\r\n\r\n  /** Text announced to assistive technologies while loading */\r\n  loadingText?: string;\r\n\r\n  /** Danger/destructive state styling */\r\n  danger?: boolean;\r\n\r\n  /** Button kind/variant */\r\n  kind?: DynButtonKind;\r\n\r\n  /** Button size */\r\n  size?: DynButtonSize;\r\n\r\n  /** Disabled state */\r\n  disabled?: boolean;\r\n\r\n  /** Expand button to full width */\r\n  fullWidth?: boolean;\r\n\r\n  /** Hide button on viewports narrower than 768px */\r\n  hideOnMobile?: boolean;\r\n\r\n  /** Display as icon-only on mobile while keeping the label accessible */\r\n  iconOnlyOnMobile?: boolean;\r\n\r\n  /** Accessible expanded state (for dropdown buttons, etc.) */\r\n  'aria-expanded'?: boolean;\r\n\r\n  /** ID reference of the element controlled by the button */\r\n  'aria-controls'?: string;\r\n\r\n  /** Pressed/toggled state for ARIA toggle buttons */\r\n  'aria-pressed'?: boolean;\r\n\r\n  /** Blur event handler */\r\n  onBlur?: FocusEventHandler<HTMLButtonElement>;\r\n\r\n  /** Click event handler */\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n\r\n  /** Key down handler */\r\n  onKeyDown?: KeyboardEventHandler<HTMLButtonElement>;\r\n}\r\n\r\n/**\r\n * Ref type for DynButton component\r\n */\r\nexport type DynButtonRef = HTMLButtonElement;\r\n\r\n/**\r\n * Default props type for DynButton\r\n */\r\nexport type DynButtonDefaultProps = Required<\r\n  Pick<\r\n    DynButtonProps,\r\n    | 'type'\r\n    | 'kind'\r\n    | 'size'\r\n    | 'loading'\r\n    | 'loadingText'\r\n    | 'danger'\r\n    | 'disabled'\r\n    | 'fullWidth'\r\n    | 'hideOnMobile'\r\n    | 'iconOnlyOnMobile'\r\n  >\r\n>;\r\n\r\n/**\r\n * Default props values for DynButton component\r\n * Provides sensible defaults for all optional props\r\n */\r\nexport const DYN_BUTTON_DEFAULT_PROPS: DynButtonDefaultProps = {\r\n  type: 'button',\r\n  kind: 'primary',\r\n  size: 'medium',\r\n  loading: false,\r\n  loadingText: 'Loading…',\r\n  danger: false,\r\n  disabled: false,\r\n  fullWidth: false,\r\n  hideOnMobile: false,\r\n  iconOnlyOnMobile: false,\r\n} as const;","import React, { forwardRef, useMemo, useState } from 'react';\r\nimport type {\r\n  FocusEventHandler,\r\n  KeyboardEventHandler,\r\n  MouseEventHandler,\r\n} from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport { DynIcon } from '../DynIcon';\r\nimport type {\r\n  DynButtonDefaultProps,\r\n  DynButtonProps,\r\n  DynButtonRef,\r\n} from './DynButton.types';\r\nimport { DYN_BUTTON_DEFAULT_PROPS } from './DynButton.types';\r\nimport styles from './DynButton.module.css';\r\n\r\n/**\r\n * Safely access CSS module classes (pattern from DynAvatar)\r\n */\r\nconst getStyleClass = (className: string): string => {\r\n  return (styles as Record<string, string>)[className] || '';\r\n};\r\n\r\n/**\r\n * Normalize ARIA label values\r\n */\r\nconst normalizeAriaLabel = (value: string | undefined): string | undefined =>\r\n  value?.trim() ? value.trim() : undefined;\r\n\r\n/**\r\n * Generate appropriate ARIA label for icon-only buttons\r\n */\r\nconst generateIconAriaLabel = (icon: string | React.ReactNode): string | undefined => {\r\n  if (typeof icon !== 'string') return undefined;\r\n  return icon\r\n    .replace(/[-_]+/g, ' ')\r\n    .replace(/\\s+/g, ' ')\r\n    .trim();\r\n};\r\n\r\ntype DynButtonComponentProps = DynButtonProps & DynButtonDefaultProps;\r\n\r\n/**\r\n * DynButton\r\n *\r\n * Enterprise-grade button component following the DynAvatar gold standard for architecture,\r\n * accessibility, and composability.\r\n */\r\nexport const DynButton = forwardRef<DynButtonRef, DynButtonProps>(\r\n  (\r\n    {\r\n      label,\r\n      icon,\r\n      type = DYN_BUTTON_DEFAULT_PROPS.type,\r\n      kind = DYN_BUTTON_DEFAULT_PROPS.kind,\r\n      size = DYN_BUTTON_DEFAULT_PROPS.size,\r\n      loading = DYN_BUTTON_DEFAULT_PROPS.loading,\r\n      loadingText = DYN_BUTTON_DEFAULT_PROPS.loadingText,\r\n      danger = DYN_BUTTON_DEFAULT_PROPS.danger,\r\n      disabled = DYN_BUTTON_DEFAULT_PROPS.disabled,\r\n      fullWidth = DYN_BUTTON_DEFAULT_PROPS.fullWidth,\r\n      hideOnMobile = DYN_BUTTON_DEFAULT_PROPS.hideOnMobile,\r\n      iconOnlyOnMobile = DYN_BUTTON_DEFAULT_PROPS.iconOnlyOnMobile,\r\n      onClick,\r\n      onBlur,\r\n      onKeyDown: userOnKeyDown,\r\n      children,\r\n      className,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'aria-expanded': ariaExpanded,\r\n      'aria-controls': ariaControls,\r\n      'aria-pressed': ariaPressed,\r\n      'data-testid': dataTestId,\r\n      role,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n  // Generate an ID per render when not provided so tests that expect\r\n  // different IDs on rerender pass (generateId increments a module counter).\r\n  const internalId = id || generateId('button');\r\n\r\n    // Memoized computations\r\n    const trimmedLabel = useMemo(() => (typeof label === 'string' ? label.trim() : ''), [label]);\r\n    const hasLabel = trimmedLabel.length > 0;\r\n    const childrenCount = React.Children.count(children);\r\n    const hasChildrenContent = childrenCount > 0;\r\n    const isIconOnly = Boolean(icon) && !hasLabel && !hasChildrenContent;\r\n    const isDisabled = disabled || loading;\r\n\r\n    // Generate appropriate ARIA label for accessibility\r\n    const iconAriaLabel = useMemo(() => generateIconAriaLabel(icon), [icon]);\r\n    const computedAriaLabel = useMemo(\r\n      () => normalizeAriaLabel(\r\n        ariaLabel ?? (isIconOnly ? (trimmedLabel || iconAriaLabel || 'Button') : undefined)\r\n      ),\r\n      [ariaLabel, isIconOnly, trimmedLabel, iconAriaLabel]\r\n    );\r\n\r\n    // Normalize loading text\r\n    const normalizedLoadingText = useMemo(() => {\r\n      if (typeof loadingText !== 'string') return DYN_BUTTON_DEFAULT_PROPS.loadingText;\r\n      const trimmed = loadingText.trim();\r\n      return trimmed || DYN_BUTTON_DEFAULT_PROPS.loadingText;\r\n    }, [loadingText]);\r\n\r\n    // Icon size mapping\r\n    const iconSizeToken = useMemo(() => {\r\n      switch (size) {\r\n        case 'small': return 'small';\r\n        case 'large': return 'large';\r\n        default: return 'medium';\r\n      }\r\n    }, [size]);\r\n\r\n    // Render icon element\r\n    const iconElement = useMemo(() => {\r\n      if (!icon) return null;\r\n      if (typeof icon === 'string') {\r\n        return <DynIcon icon={icon} aria-hidden=\"true\" className={getStyleClass('icon')} size={iconSizeToken} />;\r\n      }\r\n      return <span className={getStyleClass('icon')} aria-hidden=\"true\">{icon}</span>;\r\n    }, [icon, iconSizeToken]);\r\n\r\n    // Render children content\r\n    const childrenContent = useMemo(() => {\r\n      if (!hasChildrenContent) return null;\r\n      if (typeof children === 'string') {\r\n        const trimmedChildren = children.trim();\r\n        if (!trimmedChildren) return null;\r\n        return <span className={getStyleClass('label')}>{trimmedChildren}</span>;\r\n      }\r\n      return children;\r\n    }, [children, hasChildrenContent]);\r\n\r\n    // Render label element (primary text)\r\n    const labelElement = hasLabel ? (\r\n      <span className={getStyleClass('label')}>{trimmedLabel}</span>\r\n    ) : null;\r\n\r\n    // Generate CSS classes safely (DynAvatar pattern)\r\n    const kindClass = getStyleClass(`kind${kind.charAt(0).toUpperCase() + kind.slice(1)}`);\r\n    const sizeClass = getStyleClass(`size${size.charAt(0).toUpperCase() + size.slice(1)}`);\r\n    const dangerClass = getStyleClass('danger');\r\n    const loadingClass = getStyleClass('loading');\r\n    const iconOnlyClass = getStyleClass('iconOnly');\r\n    const fullWidthClass = getStyleClass('fullWidth');\r\n    const hideOnMobileClass = getStyleClass('hideOnMobile');\r\n    const iconOnlyOnMobileClass = getStyleClass('iconOnlyOnMobile');\r\n\r\n    const buttonClassName = cn(\r\n      getStyleClass('root'),\r\n      kindClass,\r\n      sizeClass,\r\n      {\r\n        [dangerClass]: danger && dangerClass,\r\n        [loadingClass]: loading && loadingClass,\r\n        [iconOnlyClass]: isIconOnly && iconOnlyClass,\r\n        [fullWidthClass]: fullWidth && fullWidthClass,\r\n        [hideOnMobileClass]: hideOnMobile && hideOnMobileClass,\r\n        [iconOnlyOnMobileClass]: iconOnlyOnMobile && iconOnlyOnMobileClass,\r\n      },\r\n      className\r\n    );\r\n\r\n    // Event handlers\r\n    const handleClick: MouseEventHandler<HTMLButtonElement> = (event) => {\r\n      if (isDisabled) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return;\r\n      }\r\n      onClick?.(event);\r\n    };\r\n\r\n    const handleBlur: FocusEventHandler<HTMLButtonElement> = (event) => {\r\n      onBlur?.(event);\r\n    };\r\n\r\n    const handleKeyDown: KeyboardEventHandler<HTMLButtonElement> = (event) => {\r\n      if (event.key === ' ' || event.key === 'Spacebar') {\r\n        event.preventDefault();\r\n        if (!isDisabled) {\r\n          event.currentTarget.click();\r\n        }\r\n      }\r\n      userOnKeyDown?.(event);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <button\r\n        ref={ref}\r\n        id={internalId}\r\n        type={type}\r\n        className={buttonClassName}\r\n        data-testid={dataTestId ?? 'dyn-button'}\r\n        aria-label={computedAriaLabel}\r\n        aria-describedby={ariaDescribedBy}\r\n        aria-labelledby={ariaLabelledBy}\r\n        aria-expanded={ariaExpanded}\r\n        aria-controls={ariaControls}\r\n        aria-pressed={typeof ariaPressed === 'boolean' ? ariaPressed : undefined}\r\n        aria-busy={loading || undefined}\r\n        aria-disabled={isDisabled || undefined}\r\n        disabled={isDisabled}\r\n        role={role}\r\n        onClick={handleClick}\r\n        onBlur={handleBlur}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      >\r\n        <span className={getStyleClass('content')} style={{ opacity: loading ? 0 : undefined }}>\r\n          {iconElement}\r\n          {labelElement}\r\n          {childrenContent}\r\n        </span>\r\n        {/* Loading spinner and accessibility announcements */}\r\n        {loading && (\r\n          <>\r\n            <span className={getStyleClass('spinner')} aria-hidden=\"true\" />\r\n            {/* Keep an inert SR-only element inside the button so tests can\r\n                query it, but mark it aria-hidden so it doesn't become part\r\n                of the button's accessible name. The actual live region that\r\n                will be announced by assistive tech is rendered *outside*\r\n                the button below. */}\r\n            <span\r\n              className=\"dyn-sr-only\"\r\n              role=\"status\"\r\n              aria-live=\"polite\"\r\n              aria-atomic=\"true\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              {normalizedLoadingText}\r\n            </span>\r\n          </>\r\n        )}\r\n        </button>\r\n\r\n        {/* External live region so screen readers announce loading text\r\n            without affecting the button's accessible name. It is visually\r\n            hidden via the same SR-only class. */}\r\n        {loading && (\r\n          <span\r\n            className=\"dyn-sr-only\"\r\n            role=\"status\"\r\n            aria-live=\"polite\"\r\n            aria-atomic=\"true\"\r\n          >\r\n            {normalizedLoadingText}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nDynButton.displayName = 'DynButton';\r\n\r\nexport default DynButton;\r\n","﻿import { type ImgHTMLAttributes, type ReactNode } from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\n// Direct type definitions - no external dependencies\r\nexport type DynAvatarSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\nexport type DynAvatarShape = 'circle' | 'square' | 'rounded';\r\nexport type DynAvatarStatus = 'online' | 'offline' | 'away' | 'busy';\r\n\r\n/**\r\n * Token-based avatar size map that mirrors CSS module sizing\r\n */\r\nexport const AVATAR_SIZES = {\r\n  xs: 'var(--dyn-spacing-2xl, 2rem)',\r\n  sm: 'var(--dyn-spacing-3xl, 3rem)',\r\n  md: '4rem',\r\n  lg: '5rem',\r\n  xl: '6rem',\r\n} as const satisfies Record<DynAvatarSize, string>;\r\n\r\n/**\r\n * Props interface for DynAvatar component\r\n * Clean TypeScript implementation without external namespace dependencies\r\n */\r\nexport interface DynAvatarProps extends\r\n  Omit<BaseComponentProps, 'children'>,\r\n  AccessibilityProps,\r\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof BaseComponentProps | keyof AccessibilityProps | 'onClick' | 'children'> {\r\n\r\n  /** Image source URL */\r\n  src?: string;\r\n\r\n  /** Alt text for image (required for accessibility) */\r\n  alt: string;\r\n\r\n  /** Avatar size using design token scale */\r\n  size?: DynAvatarSize;\r\n\r\n  /** Avatar shape variant */\r\n  shape?: DynAvatarShape;\r\n\r\n  /** Manual initials override */\r\n  initials?: string;\r\n\r\n  /** Status indicator */\r\n  status?: DynAvatarStatus;\r\n\r\n  /** Loading state */\r\n  loading?: boolean;\r\n\r\n  /** Error state */\r\n  error?: boolean;\r\n\r\n  /** Click handler for interactive avatars */\r\n  onClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n\r\n  /** Custom fallback content */\r\n  fallback?: ReactNode;\r\n\r\n  /** Children content */\r\n  children?: ReactNode;\r\n\r\n  /** Image loading strategy */\r\n  imageLoading?: 'eager' | 'lazy';\r\n\r\n  /** Custom image properties */\r\n  imageProps?: Omit<ImgHTMLAttributes<HTMLImageElement>, 'src' | 'alt' | 'loading'> & {\r\n    'data-testid'?: string;\r\n  };\r\n}\r\n\r\n/**\r\n * Ref type for DynAvatar component\r\n */\r\nexport type DynAvatarRef = HTMLDivElement;\r\n\r\n/**\r\n * Status accessibility labels\r\n */\r\nexport const DYN_AVATAR_STATUS_LABELS: Record<DynAvatarStatus, string> = {\r\n  online: 'Online',\r\n  offline: 'Offline',\r\n  away: 'Away',\r\n  busy: 'Busy',\r\n} as const;\r\n","import React, { forwardRef, useState, useMemo } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport { DynAvatarProps, DynAvatarRef, DYN_AVATAR_STATUS_LABELS } from './DynAvatar.types';\r\nimport styles from './DynAvatar.module.css';\r\n\r\n// Default fallback icon\r\nconst DefaultFallbackIcon = () => (\r\n  <svg\r\n    width=\"24\"\r\n    height=\"24\"\r\n    viewBox=\"0 0 24 24\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <path\r\n      d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\r\n      fill=\"currentColor\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n/**\r\n * Generate initials from a name string\r\n * Optimized algorithm for proper initials extraction\r\n */\r\nconst generateInitials = (name: string): string => {\r\n  return name\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .filter(Boolean)\r\n    .slice(0, 2)\r\n    .map(word => word.charAt(0).toUpperCase())\r\n    .join('');\r\n};\r\n\r\n/**\r\n * Safely access CSS module classes\r\n */\r\nconst getStyleClass = (className: string): string => {\r\n  return (styles as Record<string, string>)[className] || '';\r\n};\r\n\r\nexport const DynAvatar = forwardRef<DynAvatarRef, DynAvatarProps>(\r\n  (\r\n    {\r\n      src,\r\n      alt,\r\n      size = 'md',\r\n      shape = 'circle',\r\n      initials,\r\n      status,\r\n      loading = false,\r\n      error = false,\r\n      onClick,\r\n      fallback,\r\n      imageLoading = 'eager',\r\n      imageProps,\r\n      className,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'data-testid': dataTestId,\r\n      role,\r\n      children,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [imageLoaded, setImageLoaded] = useState(false);\r\n    const [imageError, setImageError] = useState(false);\r\n    const [internalId] = useState(() => id || generateId('avatar'));\r\n\r\n    const isInteractive = Boolean(onClick);\r\n\r\n    // Generate initials from alt text or use provided initials\r\n    const displayInitials = useMemo(() => {\r\n      if (initials) return initials.slice(0, 2).toUpperCase();\r\n      if (alt && alt !== 'Avatar') return generateInitials(alt);\r\n      return '';\r\n    }, [initials, alt]);\r\n\r\n    // Determine what to show\r\n    const showImage = src && !imageError && imageLoaded;\r\n    const showFallback = !src || imageError || !imageLoaded;\r\n    const isLoadingState = loading || (src && !imageLoaded && !imageError);\r\n\r\n    const handleImageLoad = () => {\r\n      setImageLoaded(true);\r\n      setImageError(false);\r\n    };\r\n\r\n    const handleImageError = () => {\r\n      setImageError(true);\r\n      setImageLoaded(false);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n      if (!isInteractive) return;\r\n      onClick?.(event);\r\n    };\r\n\r\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (!isInteractive) return;\r\n\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        event.preventDefault();\r\n        onClick?.(event as any);\r\n      }\r\n    };\r\n\r\n    // Generate CSS class names safely\r\n    const sizeClass = getStyleClass(`avatar--${size}`);\r\n    const shapeClass = getStyleClass(`avatar--${shape}`);\r\n    const statusClass = status ? getStyleClass(`avatar--${status}`) : '';\r\n    const clickableClass = getStyleClass('avatar--clickable');\r\n    const loadingClass = getStyleClass('avatar--loading');\r\n    const errorClass = getStyleClass('avatar--error');\r\n\r\n    // Generate accessibility attributes\r\n    const statusLabel = status ? DYN_AVATAR_STATUS_LABELS[status] : undefined;\r\n    const accessibleLabelBase = ariaLabel || (isInteractive ? `Avatar for ${alt}` : alt);\r\n    const accessibleLabel = statusLabel\r\n      ? `${accessibleLabelBase} (${statusLabel})`\r\n      : accessibleLabelBase;\r\n\r\n    const avatarClasses = cn(\r\n      getStyleClass('avatar'),\r\n      sizeClass,\r\n      shapeClass,\r\n      statusClass,\r\n      {\r\n        [clickableClass]: isInteractive && clickableClass,\r\n        [loadingClass]: isLoadingState && loadingClass,\r\n        [errorClass]: (error || imageError) && errorClass,\r\n      },\r\n      className\r\n    );\r\n\r\n    // Generate image classes safely\r\n    const imageBaseClass = getStyleClass('avatar__image');\r\n    const imageLoadingClass = getStyleClass('avatar__image--loading');\r\n    const imageLoadedClass = getStyleClass('avatar__image--loaded');\r\n\r\n    const imageClasses = cn(\r\n      imageBaseClass,\r\n      {\r\n        [imageLoadingClass]: !imageLoaded && imageLoadingClass,\r\n        [imageLoadedClass]: imageLoaded && imageLoadedClass,\r\n      }\r\n    );\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        id={internalId}\r\n        className={avatarClasses}\r\n        role={isInteractive ? 'button' : (role || 'img')}\r\n        tabIndex={isInteractive ? 0 : undefined}\r\n        aria-label={accessibleLabel}\r\n        aria-describedby={ariaDescribedBy}\r\n        aria-labelledby={ariaLabelledBy}\r\n        aria-busy={isLoadingState ? 'true' : undefined}\r\n        data-status={status}\r\n        data-testid={dataTestId || 'dyn-avatar'}\r\n        onClick={handleClick}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      >\r\n        {/* Image */}\r\n        {src && (\r\n          <img\r\n            src={src}\r\n            alt={showImage ? alt : ''}\r\n            loading={imageLoading}\r\n            className={imageClasses}\r\n            data-testid=\"dyn-avatar-image\"\r\n            onLoad={handleImageLoad}\r\n            onError={handleImageError}\r\n            {...imageProps}\r\n          />\r\n        )}\r\n\r\n        {/* Fallback content */}\r\n        {showFallback && (\r\n          <div\r\n            className={getStyleClass('avatar__fallback')}\r\n            aria-hidden={showImage ? 'true' : undefined}\r\n          >\r\n            {fallback || children || (\r\n              displayInitials ? (\r\n                <span className={getStyleClass('avatar__initials')}>\r\n                  {displayInitials}\r\n                </span>\r\n              ) : (\r\n                <span className={getStyleClass('avatar__icon')}>\r\n                  <DefaultFallbackIcon />\r\n                </span>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Loading announcement for screen readers */}\r\n        {isLoadingState && (\r\n          <span className=\"dyn-sr-only\" aria-live=\"polite\">\r\n            Loading avatar\r\n          </span>\r\n        )}\r\n\r\n        {/* Error announcement for screen readers */}\r\n        {(error || imageError) && (\r\n          <span className=\"dyn-sr-only\" aria-live=\"assertive\">\r\n            Avatar failed to load\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynAvatar.displayName = 'DynAvatar';","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useMemo,\r\n  useState\r\n} from 'react';\r\nimport type { CSSProperties, ForwardedRef, KeyboardEvent, MouseEvent } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport type {\r\n  DynBadgeProps,\r\n  DynBadgeRef\r\n} from './DynBadge.types';\r\nimport styles from './DynBadge.module.css';\r\n\r\nconst sizeClassNameMap = {\r\n  small: styles['badge--small'],\r\n  medium: styles['badge--medium'],\r\n  large: styles['badge--large']\r\n} as const;\r\n\r\nconst variantClassNameMap = {\r\n  solid: styles['badge--solid'],\r\n  soft: styles['badge--soft'],\r\n  outline: styles['badge--outline'],\r\n  dot: styles['badge--dot']\r\n} as const;\r\n\r\nconst colorClassNameMap = {\r\n  primary: styles['badge--primary'],\r\n  secondary: styles['badge--secondary'],\r\n  success: styles['badge--success'],\r\n  warning: styles['badge--warning'],\r\n  danger: styles['badge--danger'],\r\n  info: styles['badge--info'],\r\n  neutral: styles['badge--neutral']\r\n} as const;\r\n\r\nconst positionClassNameMap = {\r\n  topRight: styles['badge--topRight'],\r\n  topLeft: styles['badge--topLeft'],\r\n  bottomRight: styles['badge--bottomRight'],\r\n  bottomLeft: styles['badge--bottomLeft']\r\n} as const;\r\n\r\nconst DEFAULT_MAX_COUNT = 99;\r\n\r\n/**\r\n * Safely access CSS module classes\r\n */\r\nconst getStyleClass = (className: string): string => {\r\n  return (styles as Record<string, string>)[className] || '';\r\n};\r\n\r\nconst DynBadgeComponent = (\r\n  props: DynBadgeProps,\r\n  ref: ForwardedRef<DynBadgeRef>\r\n) => {\r\n  const {\r\n    children,\r\n    variant = 'solid',\r\n    color = 'neutral',\r\n    size = 'medium',\r\n    position,\r\n    onClick,\r\n    startIcon,\r\n    endIcon,\r\n    maxCount = DEFAULT_MAX_COUNT,\r\n    count,\r\n    value,\r\n    showZero = false,\r\n    animated = false,\r\n    pulse = false,\r\n    countDescription,\r\n    className,\r\n    'data-testid': dataTestId,\r\n    id,\r\n    onKeyDown: userOnKeyDown,\r\n    role: roleProp,\r\n    tabIndex: tabIndexProp,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-live': ariaLive,\r\n    ...rest\r\n  } = props;\r\n\r\n  const { style: inlineStyle, ...restProps } = rest;\r\n\r\n  const [internalId] = useState(() => id || generateId('badge'));\r\n  \r\n  const numericCount = typeof count === 'number' ? count : typeof value === 'number' ? value : undefined;\r\n  const hasCount = typeof numericCount === 'number';\r\n  const hasChildren = children !== undefined && children !== null;\r\n  const shouldHideBadge = hasCount && numericCount === 0 && !showZero && !hasChildren;\r\n\r\n  if (shouldHideBadge) {\r\n    return null;\r\n  }\r\n\r\n  const isInteractive = typeof onClick === 'function';\r\n\r\n  const displayCount = useMemo(() => {\r\n    if (!hasCount) {\r\n      return undefined;\r\n    }\r\n\r\n    if (typeof maxCount === 'number' && numericCount! > maxCount) {\r\n      return `${maxCount}+`;\r\n    }\r\n\r\n    return String(numericCount);\r\n  }, [hasCount, maxCount, numericCount]);\r\n\r\n  const displayContent = useMemo(() => {\r\n    if (hasChildren) {\r\n      return children;\r\n    }\r\n\r\n    if (hasCount) {\r\n      return displayCount;\r\n    }\r\n\r\n    return undefined;\r\n  }, [children, displayCount, hasChildren, hasCount]);\r\n\r\n  const semanticColorClass =\r\n    color && Object.prototype.hasOwnProperty.call(colorClassNameMap, color)\r\n      ? colorClassNameMap[color as keyof typeof colorClassNameMap]\r\n      : undefined;\r\n\r\n  const badgeClasses = cn(\r\n    getStyleClass('badge'),\r\n    sizeClassNameMap[size],\r\n    variantClassNameMap[variant],\r\n    semanticColorClass,\r\n    position && getStyleClass('badge--positioned'),\r\n    position ? positionClassNameMap[position] : undefined,\r\n    isInteractive && getStyleClass('badge--clickable'),\r\n    hasCount && getStyleClass('badge--count'),\r\n    animated && getStyleClass('badge--animated'),\r\n    pulse && getStyleClass('badge--pulse'),\r\n    className\r\n  );\r\n\r\n  const ariaLabelValue = ariaLabel ?? (hasCount ? `${countDescription || 'Count'}: ${displayCount}` : undefined);\r\n  const ariaLiveValue = ariaLive ?? (hasCount ? 'polite' : undefined);\r\n  const roleValue = roleProp ?? (isInteractive ? 'button' : undefined);\r\n  const tabIndexValue = tabIndexProp ?? (isInteractive ? 0 : undefined);\r\n  const dataTestIdValue = dataTestId ?? 'dyn-badge';\r\n  const customColorStyle = !semanticColorClass && typeof color === 'string'\r\n    ? ({\r\n        '--badge-accent': color,\r\n        '--badge-outline-color': color,\r\n        '--badge-soft-fallback': color\r\n      } as CSSProperties)\r\n    : undefined;\r\n  const badgeStyle = customColorStyle\r\n    ? { ...customColorStyle, ...(inlineStyle as CSSProperties | undefined) }\r\n    : inlineStyle;\r\n\r\n  const handleClick = useCallback(\r\n    (event: MouseEvent<HTMLSpanElement>) => {\r\n      onClick?.(event);\r\n    },\r\n    [onClick]\r\n  );\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event: KeyboardEvent<HTMLSpanElement>) => {\r\n      userOnKeyDown?.(event);\r\n\r\n      if (!isInteractive || event.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        if (event.key === ' ') {\r\n          event.preventDefault();\r\n        }\r\n\r\n        event.currentTarget.click();\r\n      }\r\n    },\r\n    [isInteractive, userOnKeyDown]\r\n  );\r\n\r\n  const showTextContent = displayContent !== undefined && variant !== 'dot';\r\n\r\n  return (\r\n    <span\r\n      ref={ref}\r\n      id={internalId}\r\n      className={badgeClasses}\r\n      onClick={handleClick}\r\n      onKeyDown={handleKeyDown}\r\n      role={roleValue}\r\n      tabIndex={tabIndexValue}\r\n      aria-label={ariaLabelValue}\r\n      aria-describedby={ariaDescribedBy}\r\n      aria-live={ariaLiveValue}\r\n      data-testid={dataTestIdValue}\r\n      style={badgeStyle}\r\n      {...restProps}\r\n    >\r\n      <span className={getStyleClass('badge__content')}>\r\n        {startIcon && (\r\n          <span className={getStyleClass('badge__icon')} aria-hidden=\"true\">\r\n            {startIcon}\r\n          </span>\r\n        )}\r\n\r\n        {showTextContent && (\r\n          <span className={getStyleClass('badge__text')}>\r\n            {displayContent}\r\n          </span>\r\n        )}\r\n\r\n        {endIcon && (\r\n          <span className={getStyleClass('badge__icon')} aria-hidden=\"true\">\r\n            {endIcon}\r\n          </span>\r\n        )}\r\n      </span>\r\n\r\n      {hasCount && Number(numericCount) > 0 && (\r\n        <span className=\"dyn-sr-only\">\r\n          {countDescription || 'Notifications'}: {displayCount}\r\n        </span>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst DynBadge = forwardRef<DynBadgeRef, DynBadgeProps>(DynBadgeComponent);\r\n\r\nDynBadge.displayName = 'DynBadge';\r\n\r\nexport { DynBadge };\r\nexport default DynBadge;","import React, { forwardRef, useEffect, useMemo } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport type { DynBoxProps, DynBoxRef } from './DynBox.types';\r\nimport styles from './DynBox.module.css';\r\n\r\nconst getStyleClass = (name: string) => (styles as Record<string, string>)[name] || '';\r\n\r\nconst FILTERED_PROPS = new Set([\r\n  'as','padding','p','px','py','pt','pr','pb','pl','m','mx','my','mt','mr','mb','ml',\r\n  'radius','borderRadius','customBorderRadius','shadow','border','background','bg','backgroundColor','color',\r\n  'align','justify','direction','flexDirection','wrap','gap','rowGap','columnGap',\r\n  'gridTemplateColumns','gridTemplateRows','gridTemplateAreas','top','right','bottom','left','zIndex',\r\n  'interactive','cssVars','ariaLiveMessage','ariaLivePoliteness','focusOnMount','display','position','textAlign','overflow','overflowX','overflowY',\r\n  'alignContent','width','height','minWidth','minHeight','maxWidth','maxHeight','hideOnMobile','hideOnTablet','hideOnDesktop','mobileOnly','tabletOnly','desktopOnly'\r\n]);\r\n\r\nconst isToken = (v?: string) => v && ['0','xs','sm','md','lg','xl','2xl'].includes(v);\r\nconst toTokenVar = (v: string) => `var(--dyn-spacing-${v}, var(--spacing-${v}, ${({'0':'0','xs':'0.25rem','sm':'0.5rem','md':'1rem','lg':'1.5rem','xl':'2rem','2xl':'3rem'} as Record<string,string>)[v]}))`;\r\n\r\nfunction DynBoxInner<E extends React.ElementType = 'div'>(props: DynBoxProps<E>, ref: DynBoxRef<E>) {\r\n  const {\r\n    as, padding, p, px, py, pt, pr, pb, pl,\r\n    m, mx, my, mt, mr, mb, ml,\r\n    radius = 'md', borderRadius, customBorderRadius,\r\n    shadow = 'none', border = 'default',\r\n    background = 'surface', bg, backgroundColor, color,\r\n    align, justify,\r\n    direction = 'column', flexDirection, wrap,\r\n    gap = 'md', rowGap, columnGap,\r\n    gridTemplateColumns, gridTemplateRows, gridTemplateAreas,\r\n    alignContent, display, position, textAlign, overflow, overflowX, overflowY,\r\n    width, height, maxWidth, maxHeight, minWidth, minHeight,\r\n    top, right, bottom, left, zIndex,\r\n    className, style, id, role,\r\n    'aria-label': ariaLabel,\r\n    'aria-describedby': ariaDescribedBy,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'data-testid': dataTestId = 'dyn-box',\r\n    focusOnMount, interactive,\r\n    ariaLiveMessage, ariaLivePoliteness = 'polite',\r\n    cssVars,\r\n    hideOnMobile, hideOnTablet, hideOnDesktop, mobileOnly, tabletOnly, desktopOnly,\r\n    children, ...rest\r\n  } = props;\r\n\r\n  const Component = (as ?? 'div') as React.ElementType;\r\n  const internalId = useMemo(() => id || generateId('dyn-box'), [id]);\r\n  const domProps = Object.fromEntries(Object.entries(rest).filter(([k]) => !FILTERED_PROPS.has(k)));\r\n\r\n  // Stable ref that also forwards\r\n  const elementRef = React.useRef<HTMLElement | null>(null);\r\n  const setRefs = (node: any) => {\r\n    elementRef.current = node;\r\n    if (typeof ref === 'function') ref(node);\r\n    else if (ref && 'current' in (ref as any)) (ref as any).current = node;\r\n  };\r\n\r\n  const legacyAliases: string[] = ['box'];\r\n  const finalDirection = flexDirection || direction;\r\n  if (finalDirection?.startsWith('row') || finalDirection?.startsWith('column')) legacyAliases.push('box--flex');\r\n  const finalBackground = bg || background;\r\n  if (['primary','secondary','success','warning','danger'].includes(finalBackground as string)) legacyAliases.push(`box--bg-${finalBackground}`);\r\n\r\n  const finalRadius = borderRadius || customBorderRadius || radius;\r\n  const basePadding = p ?? padding; // keep undefined if not provided\r\n\r\n  const classes = cn(\r\n    getStyleClass('box'),\r\n    basePadding && isToken(basePadding) && getStyleClass(`box--p-${basePadding}`),\r\n    finalBackground && ['primary','secondary','tertiary','success','warning','danger'].includes(finalBackground) && getStyleClass(`box--bg-${finalBackground}`),\r\n    display && getStyleClass(`box--${display}`),\r\n    position && getStyleClass(`box--${position}`),\r\n    finalRadius && ['none','sm','md','lg','xl','full'].includes(finalRadius) && getStyleClass(`box--rounded-${finalRadius}`),\r\n    shadow && ['sm','md','lg'].includes(shadow) && getStyleClass(`box--shadow-${shadow}`),\r\n    textAlign && getStyleClass(`box--text-${textAlign}`),\r\n    overflow && getStyleClass(`box--overflow-${overflow}`),\r\n    border === 'default' && getStyleClass('box--border'),\r\n    interactive && getStyleClass('box--interactive'),\r\n    hideOnMobile && getStyleClass('box--mobile-hidden'),\r\n    hideOnTablet && getStyleClass('box--tablet-hidden'),\r\n    hideOnDesktop && getStyleClass('box--desktop-hidden'),\r\n    mobileOnly && [getStyleClass('box--tablet-hidden'), getStyleClass('box--desktop-hidden')],\r\n    tabletOnly && [getStyleClass('box--mobile-hidden'), getStyleClass('box--desktop-hidden')],\r\n    desktopOnly && [getStyleClass('box--mobile-hidden'), getStyleClass('box--tablet-hidden')],\r\n    ...legacyAliases,\r\n    className\r\n  );\r\n\r\n  const styleVars: React.CSSProperties = {\r\n    ...(width !== undefined ? { ['--dyn-box-width' as any]: typeof width === 'number' ? (width === 0 ? '0' : `${width}px`) : width } : {}),\r\n    ...(height !== undefined ? { ['--dyn-box-height' as any]: typeof height === 'number' ? (height === 0 ? '0' : `${height}px`) : height } : {}),\r\n    ...(maxWidth ? { ['--dyn-box-max-width' as any]: typeof maxWidth === 'number' ? `${maxWidth}px` : maxWidth } : {}),\r\n    ...(maxHeight ? { ['--dyn-box-max-height' as any]: typeof maxHeight === 'number' ? `${maxHeight}px` : maxHeight } : {}),\r\n    ...(minWidth ? { ['--dyn-box-min-width' as any]: typeof minWidth === 'number' ? `${minWidth}px` : minWidth } : {}),\r\n    ...(minHeight ? { ['--dyn-box-min-height' as any]: typeof minHeight === 'number' ? `${minHeight}px` : minHeight } : {}),\r\n    ...(top !== undefined ? { ['--dyn-box-top' as any]: typeof top === 'number' ? `${top}px` : top } : {}),\r\n    ...(right !== undefined ? { ['--dyn-box-right' as any]: typeof right === 'number' ? `${right}px` : right } : {}),\r\n    ...(bottom !== undefined ? { ['--dyn-box-bottom' as any]: typeof bottom === 'number' ? (bottom === 0 ? '0' : `${bottom}px`) : bottom } : {}),\r\n    ...(left !== undefined ? { ['--dyn-box-left' as any]: typeof left === 'number' ? `${left}px` : left } : {}),\r\n    ...(zIndex !== undefined ? { ['--dyn-box-z-index' as any]: String(zIndex) } : {}),\r\n    ...(backgroundColor ? { ['--dyn-box-bg' as any]: backgroundColor } : {}),\r\n    ...(color ? { ['--dyn-box-color' as any]: color } : {}),\r\n    ...(finalBackground && !['primary','secondary','tertiary','success','warning','danger','surface'].includes(finalBackground as string) ? { ['--dyn-box-bg' as any]: finalBackground as any } : {}),\r\n    ...(customBorderRadius ? { ['--dyn-box-radius' as any]: customBorderRadius } : {}),\r\n    ...(finalRadius && !['none','xs','sm','md','lg','xl','full'].includes(finalRadius as string) ? { ['--dyn-box-radius' as any]: finalRadius as any } : {}),\r\n    ...(basePadding ? { ['--dyn-box-padding' as any]: isToken(basePadding) ? toTokenVar(basePadding) : basePadding } : {}),\r\n    ...(px ? { ['--dyn-box-padding-left' as any]: isToken(px) ? toTokenVar(px) : px, ['--dyn-box-padding-right' as any]: isToken(px) ? toTokenVar(px) : px } : {}),\r\n    ...(py ? { ['--dyn-box-padding-top' as any]: isToken(py) ? toTokenVar(py) : py, ['--dyn-box-padding-bottom' as any]: isToken(py) ? toTokenVar(py) : py } : {}),\r\n    ...(pt ? { ['--dyn-box-padding-top' as any]: isToken(pt) ? toTokenVar(pt) : pt } : {}),\r\n    ...(pr ? { ['--dyn-box-padding-right' as any]: isToken(pr) ? toTokenVar(pr) : pr } : {}),\r\n    ...(pb ? { ['--dyn-box-padding-bottom' as any]: isToken(pb) ? toTokenVar(pb) : pb } : {}),\r\n    ...(pl ? { ['--dyn-box-padding-left' as any]: isToken(pl) ? toTokenVar(pl) : pl } : {}),\r\n    ...(m ? { ['--dyn-box-margin' as any]: isToken(m) ? toTokenVar(m) : m } : {}),\r\n    ...(mx ? { ['--dyn-box-margin-left' as any]: mx === 'auto' ? 'auto' : (isToken(mx) ? toTokenVar(mx) : mx), ['--dyn-box-margin-right' as any]: mx === 'auto' ? 'auto' : (isToken(mx) ? toTokenVar(mx) : mx) } : {}),\r\n    ...(my ? { ['--dyn-box-margin-top' as any]: isToken(my) ? toTokenVar(my) : my, ['--dyn-box-margin-bottom' as any]: isToken(my) ? toTokenVar(my) : my } : {}),\r\n    ...(mt ? { ['--dyn-box-margin-top' as any]: isToken(mt) ? toTokenVar(mt) : mt } : {}),\r\n    ...(mr ? { ['--dyn-box-margin-right' as any]: mr === 'auto' ? 'auto' : (isToken(mr) ? toTokenVar(mr) : mr) } : {}),\r\n    ...(mb ? { ['--dyn-box-margin-bottom' as any]: mb === '0' ? '0' : (isToken(mb) ? toTokenVar(mb) : mb) } : {}),\r\n    ...(ml ? { ['--dyn-box-margin-left' as any]: ml === 'auto' ? 'auto' : (isToken(ml) ? toTokenVar(ml) : ml) } : {}),\r\n    ...(finalDirection ? { ['--dyn-box-flex-direction' as any]: finalDirection } : {}),\r\n    ...(wrap ? { ['--dyn-box-flex-wrap' as any]: wrap } : {}),\r\n    ...(justify ? { ['--dyn-box-justify-content' as any]: justify } : {}),\r\n    ...(align ? { ['--dyn-box-align-items' as any]: align } : {}),\r\n    ...(alignContent ? { ['--dyn-box-align-content' as any]: alignContent } : {}),\r\n    ...(gap ? { ['--dyn-box-gap' as any]: isToken(gap) ? toTokenVar(gap) : gap } : {}),\r\n    ...(rowGap ? { ['--dyn-box-row-gap' as any]: isToken(rowGap) ? toTokenVar(rowGap) : rowGap } : {}),\r\n    ...(columnGap ? { ['--dyn-box-column-gap' as any]: isToken(columnGap) ? toTokenVar(columnGap) : columnGap } : {}),\r\n    ...(gridTemplateColumns ? { ['--dyn-box-grid-columns' as any]: gridTemplateColumns } : {}),\r\n    ...(gridTemplateRows ? { ['--dyn-box-grid-rows' as any]: gridTemplateRows } : {}),\r\n    ...(gridTemplateAreas ? { ['--dyn-box-grid-areas' as any]: gridTemplateAreas } : {}),\r\n    ...(overflowX ? { ['--dyn-box-overflow-x' as any]: overflowX } : {}),\r\n    ...(overflowY ? { ['--dyn-box-overflow-y' as any]: overflowY } : {}),\r\n    ...(cssVars as any),\r\n    ...style,\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    if (focusOnMount && interactive) {\r\n      queueMicrotask?.(() => {\r\n        try { elementRef.current?.focus?.(); } catch {}\r\n      });\r\n    }\r\n  }, [focusOnMount, interactive]);\r\n\r\n  const liveRegionId = ariaLiveMessage ? `${internalId}-liveregion` : undefined;\r\n  const describedBy = [ariaDescribedBy, liveRegionId].filter(Boolean).join(' ') || undefined;\r\n\r\n  const onKeyDown: React.KeyboardEventHandler = (e) => {\r\n    (domProps as any).onKeyDown?.(e as any);\r\n    if (!interactive) return;\r\n    // Ensure Enter and Space both trigger clicks in tests\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      (domProps as any).onClick?.(e as any);\r\n      if (e.key === ' ') e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const element = React.createElement(\r\n    Component as any,\r\n    {\r\n      // Spread user provided DOM props first so that internal handlers like\r\n      // onKeyDown can wrap and call them. If we spread domProps last they\r\n      // would overwrite our internal handlers and break expected behaviour\r\n      // (e.g. triggering click on Enter/Space and forwarding the event to\r\n      // user's onKeyDown).\r\n      ...domProps,\r\n      ref: setRefs,\r\n      id: internalId,\r\n      role: interactive ? (role ?? 'button') : role,\r\n      className: classes,\r\n      style: styleVars,\r\n      'aria-label': ariaLabel,\r\n      'aria-describedby': describedBy,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'data-testid': dataTestId,\r\n      tabIndex: interactive ? ((domProps as any).tabIndex ?? 0) : (domProps as any).tabIndex,\r\n      onKeyDown,\r\n    } as any,\r\n    children,\r\n    ariaLiveMessage && (\r\n      <span id={liveRegionId} aria-live={ariaLivePoliteness} aria-atomic=\"true\" className=\"dyn-sr-only\">{ariaLiveMessage}</span>\r\n    )\r\n  );\r\n\r\n  return element;\r\n}\r\n\r\nconst _DynBox = forwardRef(DynBoxInner as any) as React.NamedExoticComponent<any>;\r\nexport const DynBox = _DynBox as <E extends React.ElementType = 'div'>(\r\n  props: DynBoxProps<E> & { ref?: DynBoxRef<E> }\r\n) => React.ReactElement | null;\r\n\r\n(_DynBox as React.NamedExoticComponent).displayName = 'DynBox';\r\n","import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport type {\r\n  BreadcrumbItem,\r\n  DynBreadcrumbProps,\r\n  DynBreadcrumbRef,\r\n} from './DynBreadcrumb.types';\r\nimport styles from './DynBreadcrumb.module.css';\r\n\r\ntype VisibleItem = {\r\n  item: BreadcrumbItem;\r\n  originalIndex: number;\r\n};\r\n\r\nexport const DynBreadcrumb = forwardRef<DynBreadcrumbRef, DynBreadcrumbProps>(\r\n  (\r\n    {\r\n      className,\r\n      items,\r\n      size = 'medium',\r\n      separator = 'slash',\r\n      customSeparator,\r\n      maxItems = 0,\r\n      showEllipsis = true,\r\n      navigationLabel = 'Breadcrumb',\r\n      onItemClick,\r\n      onEllipsisClick,\r\n      expanded: controlledExpanded,\r\n      linkComponent: LinkComponent = 'a',\r\n      enableStructuredData = false,\r\n      id,\r\n      children,\r\n      'data-testid': dataTestId,\r\n      'aria-label': ariaLabel,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalExpanded, setInternalExpanded] = useState(false);\r\n    const [generatedId] = useState(() => generateId('breadcrumb'));\r\n    const itemsSignature = useMemo(\r\n      () =>\r\n        items\r\n          .map(item => `${item.id ?? item.label}:${item.href ?? ''}:${item.current ? '1' : '0'}`)\r\n          .join('|'),\r\n      [items]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (controlledExpanded === undefined) {\r\n        setInternalExpanded(false);\r\n      }\r\n    }, [controlledExpanded, itemsSignature]);\r\n\r\n    const expanded = controlledExpanded ?? internalExpanded;\r\n    const navId = id ?? generatedId;\r\n    const totalItems = items.length;\r\n    const shouldCollapse = maxItems > 0 && totalItems > maxItems && !expanded;\r\n\r\n    const visibleItems = useMemo<VisibleItem[]>(() => {\r\n      if (!shouldCollapse) {\r\n        return items.map((item, originalIndex) => ({ item, originalIndex }));\r\n      }\r\n\r\n      if (items.length === 0) {\r\n        return [];\r\n      }\r\n\r\n      const firstItem = items[0];\r\n      const lastItem = items[items.length - 1];\r\n\r\n      if (!firstItem || !lastItem) {\r\n        return [];\r\n      }\r\n\r\n      const firstEntry: VisibleItem = { item: firstItem, originalIndex: 0 };\r\n      const middleEntries = items\r\n        .slice(1, -1)\r\n        .map<VisibleItem>((item, index) => ({ item, originalIndex: index + 1 }))\r\n        .filter(({ item }) => item && item.showWhenCollapsed);\r\n      const lastEntry: VisibleItem = {\r\n        item: lastItem,\r\n        originalIndex: items.length - 1,\r\n      };\r\n\r\n      return [firstEntry, ...middleEntries, lastEntry];\r\n    }, [items, shouldCollapse]);\r\n\r\n    const hiddenItemCount = shouldCollapse ? totalItems - visibleItems.length : 0;\r\n    const hasHiddenItems = hiddenItemCount > 0;\r\n\r\n    const handleEllipsisClick = useCallback(() => {\r\n      if (controlledExpanded === undefined) {\r\n        setInternalExpanded(true);\r\n      }\r\n      onEllipsisClick?.();\r\n    }, [controlledExpanded, onEllipsisClick]);\r\n\r\n    const handleItemClick = useCallback(\r\n      (item: BreadcrumbItem) => (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n        onItemClick?.(item, event);\r\n      },\r\n      [onItemClick]\r\n    );\r\n\r\n    const renderSeparator = useCallback(\r\n      (index: number) => {\r\n        if (separator === 'custom' && !customSeparator) {\r\n          return null;\r\n        }\r\n\r\n        const separatorClasses = cn(\r\n          styles.breadcrumbSeparator,\r\n          separator !== 'slash' && styles[`breadcrumbSeparator--${separator}`],\r\n          separator === 'custom' && styles['breadcrumbSeparator--custom']\r\n        );\r\n\r\n        return (\r\n          <span\r\n            key={`separator-${index}`}\r\n            className={separatorClasses}\r\n            aria-hidden=\"true\"\r\n            data-separator={separator}\r\n          >\r\n            {separator === 'custom' ? customSeparator : null}\r\n          </span>\r\n        );\r\n      },\r\n      [customSeparator, separator]\r\n    );\r\n\r\n    const renderItemContent = useCallback(\r\n      (item: BreadcrumbItem, labelProps?: React.HTMLAttributes<HTMLSpanElement>) => (\r\n        <>\r\n          {item.icon ? (\r\n            <span className={styles.breadcrumbIcon} aria-hidden=\"true\">\r\n              {item.icon}\r\n            </span>\r\n          ) : null}\r\n          <span className={styles.breadcrumbText} {...labelProps}>\r\n            {item.label}\r\n          </span>\r\n        </>\r\n      ),\r\n      []\r\n    );\r\n\r\n    const renderItem = useCallback(\r\n      (visibleItem: VisibleItem, index: number, array: VisibleItem[]) => {\r\n        const { item } = visibleItem;\r\n        const isLast = index === array.length - 1;\r\n        const isCurrent = Boolean(item.current) || (isLast && !item.href);\r\n        const isLink = Boolean(item.href) && !isCurrent;\r\n        const listItemClasses = cn(\r\n          styles.breadcrumbItem,\r\n          item.showWhenCollapsed && styles['breadcrumbItem--show']\r\n        );\r\n\r\n        const listItemProps = enableStructuredData\r\n          ? {\r\n              itemProp: 'itemListElement' as const,\r\n              itemScope: true,\r\n              itemType: 'https://schema.org/ListItem',\r\n            }\r\n          : undefined;\r\n\r\n        const itemContent = isLink ? (\r\n          <LinkComponent\r\n            href={item.href}\r\n            className={styles.breadcrumbLink}\r\n            onClick={handleItemClick(item)}\r\n            {...item.linkProps}\r\n            {...(enableStructuredData ? { itemProp: 'item' } : undefined)}\r\n          >\r\n            {enableStructuredData\r\n              ? renderItemContent(item, { itemProp: 'name' })\r\n              : renderItemContent(item)}\r\n          </LinkComponent>\r\n        ) : (\r\n          <span\r\n            className={isCurrent ? styles.breadcrumbCurrent : styles.breadcrumbStatic}\r\n            {...(isCurrent ? { 'aria-current': 'page' as const } : undefined)}\r\n            {...(enableStructuredData ? { itemProp: 'name' } : undefined)}\r\n          >\r\n            {renderItemContent(item)}\r\n          </span>\r\n        );\r\n\r\n        return (\r\n          <li\r\n            key={item.id ?? `breadcrumb-item-${visibleItem.originalIndex}`}\r\n            className={listItemClasses}\r\n            {...listItemProps}\r\n          >\r\n            {itemContent}\r\n            {enableStructuredData ? (\r\n              <meta itemProp=\"position\" content={String(index + 1)} />\r\n            ) : null}\r\n            {!isLast && renderSeparator(visibleItem.originalIndex)}\r\n          </li>\r\n        );\r\n      },\r\n      [enableStructuredData, handleItemClick, renderItemContent, renderSeparator]\r\n    );\r\n\r\n    const renderEllipsis = useCallback(() => {\r\n      if (!hasHiddenItems || !showEllipsis) {\r\n        return null;\r\n      }\r\n\r\n      return (\r\n        <>\r\n          <li\r\n            key=\"ellipsis\"\r\n            className={cn(styles.breadcrumbItem, styles['breadcrumbItem--ellipsis'])}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className={styles['breadcrumbItem--ellipsis']}\r\n              onClick={handleEllipsisClick}\r\n              aria-label={`Show ${hiddenItemCount} hidden breadcrumb items`}\r\n              aria-expanded={expanded}\r\n            >\r\n              …\r\n            </button>\r\n          </li>\r\n          {renderSeparator(-1)}\r\n        </>\r\n      );\r\n    }, [expanded, handleEllipsisClick, hasHiddenItems, hiddenItemCount, renderSeparator, showEllipsis]);\r\n\r\n    if (visibleItems.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    const breadcrumbClasses = cn(\r\n      styles.breadcrumb,\r\n      styles[`breadcrumb--${size}`],\r\n      shouldCollapse && showEllipsis && styles['breadcrumb--collapsed'],\r\n      className\r\n    );\r\n\r\n    const navStructuredDataProps = enableStructuredData\r\n      ? {\r\n          itemScope: true,\r\n          itemType: 'https://schema.org/BreadcrumbList',\r\n        }\r\n      : undefined;\r\n\r\n    return (\r\n      <nav\r\n        ref={ref}\r\n        id={navId}\r\n        className={breadcrumbClasses}\r\n        aria-label={ariaLabel ?? navigationLabel}\r\n        data-testid={dataTestId}\r\n        {...navStructuredDataProps}\r\n        {...rest}\r\n      >\r\n        <ol className={styles.breadcrumbList}>\r\n          {visibleItems[0] && renderItem(visibleItems[0], 0, visibleItems)}\r\n          {visibleItems.length > 1 ? (\r\n            <>\r\n              {renderEllipsis()}\r\n              {visibleItems.slice(1).map((visibleItem, index) =>\r\n                renderItem(visibleItem, index + 1, visibleItems)\r\n              )}\r\n            </>\r\n          ) : null}\r\n        </ol>\r\n        {children}\r\n      </nav>\r\n    );\r\n  }\r\n);\r\n\r\nDynBreadcrumb.displayName = 'DynBreadcrumb';\r\n\r\nexport default DynBreadcrumb;\r\n","import type { BaseComponentProps } from '../../types';\r\n\r\nexport interface ChartDataPoint {\r\n  label?: string;\r\n  value: number;\r\n  color?: string;\r\n}\r\n\r\nexport interface ChartSeries {\r\n  name: string;\r\n  data: ChartDataPoint[];\r\n  color?: string;\r\n}\r\n\r\nexport interface ChartAxis {\r\n  title?: string;\r\n  min?: number;\r\n  max?: number;\r\n  showLabels?: boolean;\r\n}\r\n\r\nexport type ChartType = 'line' | 'bar' | 'pie' | 'area';\r\n\r\nexport type DynChartData = ChartDataPoint[] | ChartSeries[];\r\n\r\nexport interface DynChartOptions {\r\n  showLegend?: boolean;\r\n  showTooltip?: boolean;\r\n  showGrid?: boolean;\r\n}\r\n\r\nexport interface DynChartProps extends BaseComponentProps, DynChartOptions {\r\n  /** Chart type */\r\n  type?: ChartType;\r\n\r\n  /** Chart data - can be array of data points or series */\r\n  data?: DynChartData;\r\n\r\n  /** Chart title */\r\n  title?: string;\r\n\r\n  /** Chart subtitle */\r\n  subtitle?: string;\r\n\r\n  /** Chart width in pixels */\r\n  width?: number;\r\n\r\n  /** Chart height in pixels */\r\n  height?: number;\r\n\r\n  /** Color palette for chart elements */\r\n  colors?: string[];\r\n\r\n  /** X axis configuration */\r\n  xAxis?: ChartAxis;\r\n\r\n  /** Y axis configuration */\r\n  yAxis?: ChartAxis;\r\n\r\n  /** Accessible description for assistive technologies */\r\n  ariaDescription?: string;\r\n}\r\n\r\nexport interface NormalizedChartSeries extends ChartSeries {\r\n  color: string;\r\n}\r\n\r\nexport interface DynChartLegendItem {\r\n  id: string;\r\n  label: string;\r\n  color: string;\r\n  seriesIndex: number;\r\n}\r\n\r\nexport type DynChartDefaultProps = Required<\r\n  Pick<\r\n    DynChartProps,\r\n    'type' | 'data' | 'width' | 'height' | 'colors' | 'showLegend' | 'showTooltip' | 'showGrid'\r\n  >\r\n>;\r\n\r\nexport const DYN_CHART_DEFAULT_PROPS: DynChartDefaultProps = {\r\n  type: 'line',\r\n  data: [],\r\n  width: 400,\r\n  height: 300,\r\n  colors: ['#0066cc', '#00b248', '#f44336', '#ff9800', '#9c27b0'],\r\n  showLegend: true,\r\n  showTooltip: true,\r\n  showGrid: true,\r\n};\r\n\r\nexport type DynChartType = DynChartProps;\r\n","import type {\r\n  ChartAxis,\r\n  ChartDataPoint,\r\n  ChartSeries,\r\n  DynChartData,\r\n  DynChartLegendItem,\r\n  NormalizedChartSeries,\r\n} from './DynChart.types';\r\n\r\nexport interface ChartDimensions {\r\n  padding: { top: number; right: number; bottom: number; left: number };\r\n  chartWidth: number;\r\n  chartHeight: number;\r\n  totalWidth: number;\r\n  totalHeight: number;\r\n}\r\n\r\nexport interface DataRanges {\r\n  minX: number;\r\n  maxX: number;\r\n  minY: number;\r\n  maxY: number;\r\n}\r\n\r\nconst DEFAULT_PADDING = { top: 20, right: 20, bottom: 60, left: 60 } as const;\r\n\r\nconst FALLBACK_COLORS = ['#0066cc', '#00b248', '#f44336', '#ff9800', '#9c27b0'];\r\n\r\nexport const EMPTY_DATA_RANGES: DataRanges = {\r\n  minX: 0,\r\n  maxX: 0,\r\n  minY: 0,\r\n  maxY: 1,\r\n};\r\n\r\nexport function isSeriesCollection(data?: DynChartData): data is ChartSeries[] {\r\n  return Array.isArray(data) && data.length > 0 && typeof data[0] === 'object' && 'name' in (data[0] as ChartSeries);\r\n}\r\n\r\nexport function normalizeSeries(\r\n  data: DynChartData | undefined,\r\n  palette: string[] = FALLBACK_COLORS\r\n): NormalizedChartSeries[] {\r\n  if (!data || data.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  if (isSeriesCollection(data)) {\r\n    return data.map((series, index) => ({\r\n      ...series,\r\n      color: series.color ?? palette[index % palette.length] ?? FALLBACK_COLORS[index % FALLBACK_COLORS.length],\r\n    } as NormalizedChartSeries));\r\n  }\r\n\r\n  const fallbackColor = palette[0] ?? FALLBACK_COLORS[0];\r\n\r\n  return [\r\n    {\r\n      name: 'Series 1',\r\n      data: data as ChartDataPoint[],\r\n      color: fallbackColor!,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function calculateChartDimensions(width: number, height: number): ChartDimensions {\r\n  const chartWidth = Math.max(0, width - (DEFAULT_PADDING.left + DEFAULT_PADDING.right));\r\n  const chartHeight = Math.max(0, height - (DEFAULT_PADDING.top + DEFAULT_PADDING.bottom));\r\n\r\n  return {\r\n    padding: { ...DEFAULT_PADDING },\r\n    chartWidth,\r\n    chartHeight,\r\n    totalWidth: width,\r\n    totalHeight: height,\r\n  };\r\n}\r\n\r\nexport function calculateDataRanges(\r\n  seriesCollection: NormalizedChartSeries[],\r\n  axis?: ChartAxis\r\n): DataRanges {\r\n  if (seriesCollection.length === 0) {\r\n    if (axis?.min !== undefined && axis?.max !== undefined) {\r\n      return { minX: 0, maxX: 0, minY: axis.min, maxY: axis.max };\r\n    }\r\n\r\n    return EMPTY_DATA_RANGES;\r\n  }\r\n\r\n  let minY = axis?.min ?? Number.POSITIVE_INFINITY;\r\n  let maxY = axis?.max ?? Number.NEGATIVE_INFINITY;\r\n  let maxX = 0;\r\n\r\n  seriesCollection.forEach(series => {\r\n    series.data.forEach((point, index) => {\r\n      maxX = Math.max(maxX, index);\r\n\r\n      if (axis?.min === undefined) {\r\n        minY = Math.min(minY, point.value);\r\n      }\r\n\r\n      if (axis?.max === undefined) {\r\n        maxY = Math.max(maxY, point.value);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (!Number.isFinite(minY) || !Number.isFinite(maxY)) {\r\n    return { ...EMPTY_DATA_RANGES, maxX };\r\n  }\r\n\r\n  if (axis?.min === undefined) {\r\n    minY = Math.min(minY, 0);\r\n  }\r\n\r\n  if (axis?.max === undefined) {\r\n    maxY = maxY === minY ? minY + 1 : maxY;\r\n  }\r\n\r\n  return {\r\n    minX: 0,\r\n    maxX,\r\n    minY,\r\n    maxY,\r\n  };\r\n}\r\n\r\nexport function buildLegendItems(seriesCollection: NormalizedChartSeries[]): DynChartLegendItem[] {\r\n  return seriesCollection.map((series, index) => ({\r\n    id: `${series.name}-${index}`,\r\n    label: series.name,\r\n    color: series.color,\r\n    seriesIndex: index,\r\n  }));\r\n}\r\n\r\nexport function getEmptyStateMessage(seriesCollection: NormalizedChartSeries[]): string {\r\n  if (seriesCollection.length === 0) {\r\n    return 'No chart data available';\r\n  }\r\n\r\n  const totalValues = seriesCollection.reduce((total, series) => {\r\n    return total + series.data.reduce((sum, point) => sum + Math.abs(point.value), 0);\r\n  }, 0);\r\n\r\n  return totalValues === 0 ? 'Chart data contains no measurable values' : '';\r\n}\r\n","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { MouseEvent } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { DYN_CHART_DEFAULT_PROPS, DynChartProps } from './DynChart.types';\r\nimport {\r\n  buildLegendItems,\r\n  calculateChartDimensions,\r\n  calculateDataRanges,\r\n  getEmptyStateMessage,\r\n  normalizeSeries,\r\n} from './DynChart.utils';\r\nimport styles from './DynChart.module.css';\r\n\r\ntype TooltipTarget =\r\n  | {\r\n      kind: 'point';\r\n      x: number;\r\n      y: number;\r\n      radius: number;\r\n      value: number;\r\n      label?: string;\r\n      series: string;\r\n      color: string;\r\n    }\r\n  | {\r\n      kind: 'bar';\r\n      x: number;\r\n      y: number;\r\n      width: number;\r\n      height: number;\r\n      value: number;\r\n      label?: string;\r\n      series: string;\r\n      color: string;\r\n    }\r\n  | {\r\n      kind: 'slice';\r\n      startAngle: number;\r\n      endAngle: number;\r\n      centerX: number;\r\n      centerY: number;\r\n      radius: number;\r\n      value: number;\r\n      label?: string;\r\n      series: string;\r\n      color: string;\r\n      percentage: number;\r\n    };\r\n\r\ninterface TooltipState {\r\n  visible: boolean;\r\n  x: number;\r\n  y: number;\r\n  value: number;\r\n  label?: string;\r\n  series?: string;\r\n  color?: string;\r\n  percentage?: number;\r\n}\r\n\r\nconst normalizeAngle = (angle: number) => {\r\n  const twoPi = Math.PI * 2;\r\n  const normalized = angle % twoPi;\r\n  return normalized >= 0 ? normalized : normalized + twoPi;\r\n};\r\n\r\n// const createTooltipState = (\r\n//   target: TooltipTarget,\r\n//   offsetX: number,\r\n//   offsetY: number\r\n// ): TooltipState => {\r\n//   const nextState: TooltipState = {\r\n//     visible: true,\r\n//     x: offsetX + 12,\r\n//     y: offsetY - 12,\r\n//     value: target.value,\r\n//   };\r\n\r\n//   if (typeof target.series === 'string' && target.series.length > 0) {\r\n//     nextState.series = target.series;\r\n//   }\r\n\r\n//   if (typeof target.color === 'string' && target.color.length > 0) {\r\n//     nextState.color = target.color;\r\n//   }\r\n\r\n//   if (typeof target.label === 'string' && target.label.length > 0) {\r\n//     nextState.label = target.label;\r\n//   }\r\n\r\n//   if (target.kind === 'slice') {\r\n//     nextState.percentage = target.percentage;\r\n//   }\r\n\r\n//   return nextState;\r\n// };\r\n\r\nconst typeClassNameMap: Record<'line' | 'bar' | 'pie' | 'area', string | undefined> = {\r\n  line: styles.typeLine,\r\n  bar: styles.typeBar,\r\n  pie: styles.typePie,\r\n  area: styles.typeArea,\r\n};\r\n\r\nconst DynChart = forwardRef<HTMLDivElement, DynChartProps>((props, ref) => {\r\n  const {\r\n    type = DYN_CHART_DEFAULT_PROPS.type,\r\n    data = DYN_CHART_DEFAULT_PROPS.data,\r\n    title,\r\n    subtitle,\r\n    width = DYN_CHART_DEFAULT_PROPS.width,\r\n    height = DYN_CHART_DEFAULT_PROPS.height,\r\n    colors = DYN_CHART_DEFAULT_PROPS.colors,\r\n    showLegend = DYN_CHART_DEFAULT_PROPS.showLegend,\r\n    showTooltip = DYN_CHART_DEFAULT_PROPS.showTooltip,\r\n    showGrid = DYN_CHART_DEFAULT_PROPS.showGrid,\r\n    xAxis,\r\n    yAxis,\r\n    ariaDescription,\r\n    className,\r\n    id,\r\n    children,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const tooltipTargetsRef = useRef<TooltipTarget[]>([]);\r\n  const [tooltipState, setTooltipState] = useState<TooltipState>({\r\n    visible: false,\r\n    x: 0,\r\n    y: 0,\r\n    value: 0,\r\n  });\r\n\r\n  const instanceId = useId();\r\n  const titleId = title ? `${id ?? instanceId}-title` : undefined;\r\n  const subtitleId = subtitle ? `${id ?? instanceId}-subtitle` : undefined;\r\n  const descriptionId = ariaDescription ? `${id ?? instanceId}-description` : undefined;\r\n\r\n  const normalizedData = useMemo(\r\n    () => normalizeSeries(data, colors),\r\n    [data, colors]\r\n  );\r\n\r\n  const chartDimensions = useMemo(\r\n    () => calculateChartDimensions(width, height),\r\n    [width, height]\r\n  );\r\n\r\n  const dataRanges = useMemo(\r\n    () => calculateDataRanges(normalizedData, yAxis),\r\n    [normalizedData, yAxis]\r\n  );\r\n\r\n  const legendItems = useMemo(\r\n    () => buildLegendItems(normalizedData),\r\n    [normalizedData]\r\n  );\r\n\r\n  const emptyStateMessage = useMemo(\r\n    () => getEmptyStateMessage(normalizedData),\r\n    [normalizedData]\r\n  );\r\n\r\n  const hideTooltip = useCallback(() => {\r\n    setTooltipState(prev => (prev.visible ? { ...prev, visible: false } : prev));\r\n  }, []);\r\n\r\n  const findTooltipTarget = useCallback((x: number, y: number) => {\r\n    for (const target of tooltipTargetsRef.current) {\r\n      if (target.kind === 'point') {\r\n        const distance = Math.hypot(x - target.x, y - target.y);\r\n        if (distance <= target.radius + 6) {\r\n          return target;\r\n        }\r\n      } else if (target.kind === 'bar') {\r\n        if (\r\n          x >= target.x &&\r\n          x <= target.x + target.width &&\r\n          y >= target.y &&\r\n          y <= target.y + target.height\r\n        ) {\r\n          return target;\r\n        }\r\n      } else if (target.kind === 'slice') {\r\n        const dx = x - target.centerX;\r\n        const dy = y - target.centerY;\r\n        const distance = Math.hypot(dx, dy);\r\n\r\n        if (distance > target.radius) {\r\n          continue;\r\n        }\r\n\r\n        const angle = normalizeAngle(Math.atan2(dy, dx));\r\n        const start = normalizeAngle(target.startAngle);\r\n        const end = normalizeAngle(target.endAngle);\r\n\r\n        if (end < start) {\r\n          if (angle >= start || angle <= end) {\r\n            return target;\r\n          }\r\n        } else if (angle >= start && angle <= end) {\r\n          return target;\r\n        }\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback(\r\n    (event: MouseEvent<HTMLCanvasElement>) => {\r\n      if (!showTooltip) {\r\n        return;\r\n      }\r\n\r\n      const { offsetX, offsetY } = event.nativeEvent;\r\n      const target = findTooltipTarget(offsetX, offsetY);\r\n\r\n      if (!target) {\r\n        hideTooltip();\r\n        return;\r\n      }\r\n\r\n      setTooltipState(prev => {\r\n        const nextState: TooltipState = {\r\n          visible: true,\r\n          x: offsetX + 12,\r\n          y: offsetY - 12,\r\n          value: target.value,\r\n          series: target.series,\r\n          color: target.color,\r\n        };\r\n        if (target.kind === 'slice') {\r\n          nextState.percentage = target.percentage;\r\n        }\r\n\r\n        if (typeof target.label === 'string' && target.label.length > 0) {\r\n          nextState.label = target.label;\r\n        }\r\n\r\n        if (\r\n          prev.visible &&\r\n          prev.x === nextState.x &&\r\n          prev.y === nextState.y &&\r\n          prev.value === nextState.value &&\r\n          prev.label === nextState.label &&\r\n          prev.series === nextState.series &&\r\n          prev.color === nextState.color &&\r\n          prev.percentage === nextState.percentage\r\n        ) {\r\n          return prev;\r\n        }\r\n\r\n        return nextState;\r\n      });\r\n    },\r\n    [findTooltipTarget, hideTooltip, showTooltip]\r\n  );\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    if (!showTooltip) {\r\n      return;\r\n    }\r\n\r\n    hideTooltip();\r\n  }, [hideTooltip, showTooltip]);\r\n\r\n  useEffect(() => {\r\n    if (!showTooltip) {\r\n      hideTooltip();\r\n    }\r\n  }, [hideTooltip, showTooltip]);\r\n\r\n  useEffect(() => () => hideTooltip(), [hideTooltip]);\r\n\r\n  const drawGrid = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      if (!showGrid || type === 'pie') return;\r\n\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n\r\n      ctx.save();\r\n      ctx.strokeStyle = '#e0e0e0';\r\n      ctx.lineWidth = 1;\r\n      ctx.setLineDash([2, 2]);\r\n\r\n      for (let i = 0; i <= 5; i++) {\r\n        const y = padding.top + (chartHeight / 5) * i;\r\n        ctx.beginPath();\r\n        ctx.moveTo(padding.left, y);\r\n        ctx.lineTo(padding.left + chartWidth, y);\r\n        ctx.stroke();\r\n      }\r\n\r\n      const maxDataPoints = normalizedData.length\r\n        ? Math.max(...normalizedData.map(series => series.data.length))\r\n        : 0;\r\n\r\n      if (maxDataPoints > 1) {\r\n        const stepCount = Math.min(maxDataPoints - 1, 10);\r\n        for (let i = 0; i <= stepCount; i++) {\r\n          const x = padding.left + (chartWidth / stepCount) * i;\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, padding.top);\r\n          ctx.lineTo(x, padding.top + chartHeight);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      ctx.restore();\r\n    },\r\n    [chartDimensions, normalizedData, showGrid, type]\r\n  );\r\n\r\n  const drawAxes = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      if (type === 'pie') return;\r\n\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n\r\n      ctx.save();\r\n      ctx.strokeStyle = '#333';\r\n      ctx.lineWidth = 2;\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding.left, padding.top + chartHeight);\r\n      ctx.lineTo(padding.left + chartWidth, padding.top + chartHeight);\r\n      ctx.stroke();\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding.left, padding.top);\r\n      ctx.lineTo(padding.left, padding.top + chartHeight);\r\n      ctx.stroke();\r\n\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'center';\r\n\r\n      if (xAxis?.title) {\r\n        ctx.fillText(xAxis.title, padding.left + chartWidth / 2, chartDimensions.totalHeight - 10);\r\n      }\r\n\r\n      if (yAxis?.title) {\r\n        ctx.save();\r\n        ctx.translate(15, padding.top + chartHeight / 2);\r\n        ctx.rotate(-Math.PI / 2);\r\n        ctx.fillText(yAxis.title, 0, 0);\r\n        ctx.restore();\r\n      }\r\n\r\n      ctx.textAlign = 'right';\r\n      for (let i = 0; i <= 5; i++) {\r\n        const value = dataRanges.minY + ((dataRanges.maxY - dataRanges.minY) / 5) * (5 - i);\r\n        const y = padding.top + (chartHeight / 5) * i;\r\n        ctx.fillText(value.toFixed(1), padding.left - 10, y + 5);\r\n      }\r\n\r\n      ctx.restore();\r\n    },\r\n    [chartDimensions, dataRanges, type, xAxis?.title, yAxis?.title]\r\n  );\r\n\r\n  const drawLineOrAreaChart = useCallback(\r\n    (ctx: CanvasRenderingContext2D, variant: 'line' | 'area') => {\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n      const yRange = Math.max(dataRanges.maxY - dataRanges.minY || 0, 1);\r\n\r\n      normalizedData.forEach((series, seriesIndex) => {\r\n        const color = series.color || colors[seriesIndex % colors.length] || '#0066cc';\r\n\r\n        ctx.strokeStyle = color;\r\n        ctx.fillStyle = color;\r\n        ctx.lineWidth = 3;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineJoin = 'round';\r\n\r\n        if (series.data.length === 0) return;\r\n\r\n        ctx.beginPath();\r\n\r\n        series.data.forEach((point, index) => {\r\n          const x = padding.left + (chartWidth / Math.max(series.data.length - 1, 1)) * index;\r\n          const y =\r\n            padding.top +\r\n            chartHeight -\r\n            ((point.value - dataRanges.minY) / yRange) * chartHeight;\r\n\r\n          if (index === 0) {\r\n            ctx.moveTo(x, y);\r\n          } else {\r\n            ctx.lineTo(x, y);\r\n          }\r\n        });\r\n\r\n        if (variant === 'area') {\r\n          const lastX =\r\n            padding.left +\r\n            (chartWidth / Math.max(series.data.length - 1, 1)) * (series.data.length - 1);\r\n          const firstX = padding.left;\r\n          const baseY = padding.top + chartHeight;\r\n\r\n          ctx.lineTo(lastX, baseY);\r\n          ctx.lineTo(firstX, baseY);\r\n          ctx.closePath();\r\n          ctx.globalAlpha = 0.15;\r\n          ctx.fill();\r\n          ctx.globalAlpha = 1;\r\n        }\r\n\r\n        ctx.stroke();\r\n\r\n        series.data.forEach((point, index) => {\r\n          const x = padding.left + (chartWidth / Math.max(series.data.length - 1, 1)) * index;\r\n          const y =\r\n            padding.top +\r\n            chartHeight -\r\n            ((point.value - dataRanges.minY) / yRange) * chartHeight;\r\n\r\n          ctx.beginPath();\r\n          ctx.arc(x, y, 4, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n\r\n          if (showTooltip) {\r\n            tooltipTargetsRef.current.push({\r\n              kind: 'point',\r\n              x,\r\n              y,\r\n              radius: 6,\r\n              value: point.value,\r\n              label: point.label ?? `Point ${index + 1}`,\r\n              series: series.name,\r\n              color,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n    [chartDimensions, colors, dataRanges, normalizedData, showTooltip]\r\n  );\r\n\r\n  const drawBarChart = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      const { padding, chartWidth, chartHeight } = chartDimensions;\r\n      const yRange = Math.max(dataRanges.maxY - dataRanges.minY || 0, 1);\r\n\r\n      if (!normalizedData.length) return;\r\n\r\n      const maxDataPoints = normalizedData[0]?.data.length || 0;\r\n      if (maxDataPoints === 0) return;\r\n\r\n      const groupWidth = chartWidth / maxDataPoints;\r\n      const barWidth = groupWidth * 0.8;\r\n      const barSpacing = groupWidth * 0.2;\r\n\r\n      normalizedData.forEach((series, seriesIndex) => {\r\n        const color = series.color || colors[seriesIndex % colors.length] || '#0066cc';\r\n        ctx.fillStyle = color;\r\n\r\n        series.data.forEach((point, index) => {\r\n          const x =\r\n            padding.left +\r\n            groupWidth * index +\r\n            barSpacing / 2 +\r\n            (barWidth / normalizedData.length) * seriesIndex;\r\n          const individualWidth = barWidth / Math.max(normalizedData.length, 1);\r\n          const barHeight = ((point.value - dataRanges.minY) / yRange) * chartHeight;\r\n          const y = padding.top + chartHeight - barHeight;\r\n\r\n          ctx.fillRect(x, y, individualWidth, barHeight);\r\n\r\n          if (showTooltip) {\r\n            tooltipTargetsRef.current.push({\r\n              kind: 'bar',\r\n              x,\r\n              y,\r\n              width: individualWidth,\r\n              height: barHeight,\r\n              value: point.value,\r\n              label: point.label ?? `Category ${index + 1}`,\r\n              series: series.name,\r\n              color,\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n    [chartDimensions, colors, dataRanges, normalizedData, showTooltip]\r\n  );\r\n\r\n  const drawPieChart = useCallback(\r\n    (ctx: CanvasRenderingContext2D) => {\r\n      const { chartWidth, chartHeight } = chartDimensions;\r\n      const centerX = width / 2;\r\n      const centerY = height / 2;\r\n      const radius = Math.min(chartWidth, chartHeight) / 3;\r\n\r\n      if (!normalizedData.length) return;\r\n\r\n      const series = normalizedData[0];\r\n      const dataPoints = series?.data ?? [];\r\n      const total = dataPoints.reduce((sum, point) => sum + point.value, 0);\r\n\r\n      if (total === 0) return;\r\n\r\n      let currentAngle = -Math.PI / 2;\r\n\r\n      dataPoints.forEach((point, index) => {\r\n        const sliceAngle = (point.value / total) * 2 * Math.PI;\r\n        const color = point.color || colors[index % colors.length] || '#0066cc';\r\n        const nextAngle = currentAngle + sliceAngle;\r\n        const percentage = total ? (point.value / total) * 100 : 0;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.moveTo(centerX, centerY);\r\n        ctx.arc(centerX, centerY, radius, currentAngle, nextAngle);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if (point.value / total > 0.05) {\r\n          const labelAngle = currentAngle + sliceAngle / 2;\r\n          const labelX = centerX + Math.cos(labelAngle) * (radius * 0.7);\r\n          const labelY = centerY + Math.sin(labelAngle) * (radius * 0.7);\r\n\r\n          ctx.fillStyle = '#fff';\r\n          ctx.font = '12px Arial';\r\n          ctx.textAlign = 'center';\r\n          ctx.fillText(`${percentage.toFixed(1)}%`, labelX, labelY);\r\n        }\r\n\r\n        if (showTooltip) {\r\n          tooltipTargetsRef.current.push({\r\n            kind: 'slice',\r\n            startAngle: currentAngle,\r\n            endAngle: nextAngle,\r\n            centerX,\r\n            centerY,\r\n            radius,\r\n            value: point.value,\r\n            label: point.label ?? '',\r\n            series: series?.name ?? 'Series 1',\r\n            color,\r\n            percentage,\r\n          });\r\n        }\r\n\r\n        currentAngle = nextAngle;\r\n      });\r\n    },\r\n    [chartDimensions, colors, height, normalizedData, showTooltip, width]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) {\r\n      return;\r\n    }\r\n\r\n    const context = canvas.getContext('2d');\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    canvas.width = chartDimensions.totalWidth;\r\n    canvas.height = chartDimensions.totalHeight;\r\n\r\n    tooltipTargetsRef.current = [];\r\n    hideTooltip();\r\n\r\n    context.clearRect(0, 0, chartDimensions.totalWidth, chartDimensions.totalHeight);\r\n\r\n    if (!normalizedData.length) {\r\n      return;\r\n    }\r\n\r\n    drawGrid(context);\r\n    drawAxes(context);\r\n\r\n    switch (type) {\r\n      case 'line':\r\n        drawLineOrAreaChart(context, 'line');\r\n        break;\r\n      case 'area':\r\n        drawLineOrAreaChart(context, 'area');\r\n        break;\r\n      case 'bar':\r\n        drawBarChart(context);\r\n        break;\r\n      case 'pie':\r\n        drawPieChart(context);\r\n        break;\r\n      default:\r\n        drawLineOrAreaChart(context, 'line');\r\n    }\r\n  }, [\r\n    chartDimensions,\r\n    drawAxes,\r\n    drawBarChart,\r\n    drawGrid,\r\n    drawLineOrAreaChart,\r\n    drawPieChart,\r\n    hideTooltip,\r\n    normalizedData,\r\n    type,\r\n  ]);\r\n\r\n  const canvasAriaLabel = title ?? 'Chart visualization';\r\n  const describedBy = [subtitle ? subtitleId : undefined, ariaDescription ? descriptionId : undefined]\r\n    .filter(Boolean)\r\n    .join(' ');\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      ref={ref}\r\n      id={id}\r\n      data-testid={dataTestId}\r\n      className={cn(styles.root, typeClassNameMap[type], className)}\r\n    >\r\n      <figure className={styles.figure} aria-labelledby={titleId} aria-describedby={describedBy || undefined}>\r\n        {(title || subtitle) && (\r\n          <header className={styles.header}>\r\n            {title && (\r\n              <h3 id={titleId} className={styles.title}>\r\n                {title}\r\n              </h3>\r\n            )}\r\n            {subtitle && (\r\n              <p id={subtitleId} className={styles.subtitle}>\r\n                {subtitle}\r\n              </p>\r\n            )}\r\n          </header>\r\n        )}\r\n\r\n        <div className={styles.content}>\r\n          <canvas\r\n            ref={canvasRef}\r\n            className={styles.canvas}\r\n            role=\"img\"\r\n            aria-label={canvasAriaLabel}\r\n            aria-describedby={describedBy || undefined}\r\n            width={chartDimensions.totalWidth}\r\n            height={chartDimensions.totalHeight}\r\n            style={{ width, height }}\r\n            onMouseMove={showTooltip ? handleMouseMove : undefined}\r\n            onMouseLeave={showTooltip ? handleMouseLeave : undefined}\r\n          />\r\n\r\n          {showTooltip && (\r\n            <div\r\n              className={styles.tooltip}\r\n              data-visible={tooltipState.visible}\r\n              aria-hidden={!tooltipState.visible}\r\n              style={{\r\n                left: `${tooltipState.x}px`,\r\n                top: `${tooltipState.y}px`,\r\n              }}\r\n            >\r\n              {(tooltipState.series || tooltipState.color || typeof tooltipState.percentage === 'number') && (\r\n                <div className={styles.tooltipHeader}>\r\n                  {tooltipState.color && (\r\n                    <span\r\n                      className={styles.tooltipColor}\r\n                      style={{ backgroundColor: tooltipState.color }}\r\n                    />\r\n                  )}\r\n                  {tooltipState.series && (\r\n                    <span className={styles.tooltipSeries}>{tooltipState.series}</span>\r\n                  )}\r\n                  {typeof tooltipState.percentage === 'number' && (\r\n                    <span className={styles.tooltipPercentage}>\r\n                      {tooltipState.percentage.toFixed(1)}%\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className={styles.tooltipValue}>{tooltipState.value}</div>\r\n              {tooltipState.label && <div className={styles.tooltipLabel}>{tooltipState.label}</div>}\r\n            </div>\r\n          )}\r\n\r\n          {emptyStateMessage && (\r\n            <p className={styles.emptyState} role=\"status\">\r\n              {emptyStateMessage}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {showLegend && legendItems.length > 0 && (\r\n          <div className={styles.legend} role=\"list\">\r\n            {legendItems.map(item => (\r\n              <div key={item.id} className={styles.legendItem} role=\"listitem\">\r\n                <span\r\n                  className={styles.legendColor}\r\n                  style={{ backgroundColor: normalizedData[item.seriesIndex]?.color }}\r\n                />\r\n                <span className={styles.legendLabel}>{item.label}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {children}\r\n\r\n        {ariaDescription && (\r\n          <figcaption id={descriptionId} className={styles.visuallyHidden}>\r\n            {ariaDescription}\r\n          </figcaption>\r\n        )}\r\n      </figure>\r\n    </div>\r\n  );\r\n});\r\n\r\nDynChart.displayName = 'DynChart';\r\n\r\nexport { DynChart };\r\nexport default DynChart;\r\n","import type { HTMLAttributes, ReactNode } from 'react';\r\nimport type { BaseComponentProps } from '../../types';\r\n\r\nexport interface DynFieldContainerOwnProps {\r\n  /** Form field element that should be wrapped */\r\n  children: ReactNode;\r\n  /** Optional label to display above the field */\r\n  label?: string;\r\n  /** Indicates the field is required */\r\n  required?: boolean;\r\n  /** Indicates the field is optional */\r\n  optional?: boolean;\r\n  /** Informational helper text displayed below the field */\r\n  helpText?: string;\r\n  /** Error message displayed below the field */\r\n  errorText?: string;\r\n  /** Controls whether validation messages are shown */\r\n  showValidation?: boolean;\r\n  /** Id of the input element for the label association */\r\n  htmlFor?: string;\r\n}\r\n\r\nexport type DynFieldContainerProps = Omit<BaseComponentProps, 'children'> &\r\n  DynFieldContainerOwnProps &\r\n  Omit<HTMLAttributes<HTMLDivElement>, 'children'>;\r\n\r\nexport interface DynFieldContainerDefaultProps {\r\n  showValidation: boolean;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_FIELD_CONTAINER_DEFAULT_PROPS: DynFieldContainerDefaultProps = {\r\n  showValidation: true,\r\n  'data-testid': 'dyn-field-container',\r\n};\r\n","import { forwardRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_FIELD_CONTAINER_DEFAULT_PROPS,\r\n  type DynFieldContainerProps,\r\n} from './DynFieldContainer.types';\r\nimport styles from './DynFieldContainer.module.css';\r\n\r\nexport const DynFieldContainer = forwardRef<HTMLDivElement, DynFieldContainerProps>(\r\n  (props, ref) => {\r\n    const {\r\n      children,\r\n      label,\r\n      required = false,\r\n      optional = false,\r\n      helpText,\r\n      errorText,\r\n      showValidation = DYN_FIELD_CONTAINER_DEFAULT_PROPS.showValidation,\r\n      className,\r\n      htmlFor,\r\n      id,\r\n      'data-testid': dataTestIdProp,\r\n      ...rest\r\n    } = props;\r\n\r\n    const dataTestId =\r\n      dataTestIdProp ?? DYN_FIELD_CONTAINER_DEFAULT_PROPS['data-testid'];\r\n\r\n    const containerClasses = cn(\r\n      styles.container,\r\n      errorText && styles.containerError,\r\n      required && styles.containerRequired,\r\n      optional && styles.containerOptional,\r\n      className\r\n    );\r\n\r\n    const errorId = htmlFor ? `${htmlFor}-error` : undefined;\r\n    const helpId = htmlFor ? `${htmlFor}-help` : undefined;\r\n    const labelId = label && htmlFor ? `${htmlFor}-label` : undefined;\r\n\r\n    return (\r\n      <div\r\n        {...rest}\r\n        ref={ref}\r\n        id={id}\r\n        className={containerClasses}\r\n        data-testid={dataTestId}\r\n      >\r\n        {label && (\r\n          <label\r\n            className={styles.label}\r\n            htmlFor={htmlFor}\r\n            id={labelId}\r\n          >\r\n            {label}\r\n            {required && (\r\n              <span className={styles.required} aria-label=\"obrigatório\">\r\n                *\r\n              </span>\r\n            )}\r\n            {optional && (\r\n              <span className={styles.optional} aria-label=\"opcional\">\r\n                (opcional)\r\n              </span>\r\n            )}\r\n          </label>\r\n        )}\r\n\r\n        {children}\r\n\r\n        {showValidation && (helpText || errorText) && (\r\n          <div className={styles.feedback}>\r\n            {errorText ? (\r\n              <div\r\n                className={styles.error}\r\n                id={errorId}\r\n                role=\"alert\"\r\n                aria-live=\"polite\"\r\n              >\r\n                {errorText}\r\n              </div>\r\n            ) : helpText ? (\r\n              <div className={styles.help} id={helpId}>\r\n                {helpText}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDynFieldContainer.displayName = 'DynFieldContainer';\r\n\r\nexport default DynFieldContainer;\r\n","/**\r\n * Validation hook for DYN UI form components\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport type { ValidationRule } from '../types/field.types';\r\n\r\ninterface UseFieldValidationOptions {\r\n  value: any;\r\n  required?: boolean;\r\n  validation?: ValidationRule[];\r\n  customError?: string;\r\n}\r\n\r\nexport const useDynFieldValidation = ({\r\n  value,\r\n  required,\r\n  validation,\r\n  customError\r\n}: UseFieldValidationOptions) => {\r\n  const [error, setError] = useState<string>('');\r\n\r\n  const validate = useCallback(async (): Promise<boolean> => {\r\n    // Clear previous error\r\n    setError('');\r\n\r\n    // Custom error takes precedence\r\n    if (customError) {\r\n      setError(customError);\r\n      return false;\r\n    }\r\n\r\n    // Required validation\r\n    if (required) {\r\n      if (\r\n        value === undefined ||\r\n        value === null ||\r\n        value === '' ||\r\n        (Array.isArray(value) && value.length === 0)\r\n      ) {\r\n        setError('Este campo é obrigatório');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Custom validation rules\r\n    if (validation && value !== undefined && value !== null && value !== '') {\r\n      for (const rule of validation) {\r\n        let isValid = true;\r\n        let errorMessage = rule.message;\r\n\r\n        switch (rule.type) {\r\n          case 'minLength':\r\n            if (typeof rule.value === 'number' && String(value).length < rule.value) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'maxLength':\r\n            if (typeof rule.value === 'number' && String(value).length > rule.value) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'email':\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(String(value))) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'url':\r\n            try {\r\n              new URL(String(value));\r\n            } catch {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'pattern':\r\n            const regex = typeof rule.value === 'string' ? new RegExp(rule.value) : rule.value;\r\n            if (regex && !regex.test(String(value))) {\r\n              isValid = false;\r\n            }\r\n            break;\r\n\r\n          case 'custom':\r\n            if (rule.validator) {\r\n              try {\r\n                const result = await rule.validator(value);\r\n                isValid = result;\r\n              } catch (error) {\r\n                isValid = false;\r\n                errorMessage = error instanceof Error ? error.message : rule.message;\r\n              }\r\n            }\r\n            break;\r\n        }\r\n\r\n        if (!isValid) {\r\n          setError(errorMessage);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }, [value, required, validation, customError]);\r\n\r\n  const clearError = useCallback(() => {\r\n    setError('');\r\n  }, []);\r\n\r\n  return {\r\n    error,\r\n    isValid: !error,\r\n    validate,\r\n    clearError\r\n  };\r\n};\r\n\r\n// Export individual validation functions for reuse\r\nexport const validators = {\r\n  required: (value: any): boolean => {\r\n    return value !== undefined && value !== null && value !== '' && (!Array.isArray(value) || value.length > 0);\r\n  },\r\n\r\n  email: (value: string): boolean => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(value);\r\n  },\r\n\r\n  url: (value: string): boolean => {\r\n    try {\r\n      new URL(value);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  minLength: (value: string, minLength: number): boolean => {\r\n    return value.length >= minLength;\r\n  },\r\n\r\n  maxLength: (value: string, maxLength: number): boolean => {\r\n    return value.length <= maxLength;\r\n  },\r\n\r\n  pattern: (value: string, pattern: string | RegExp): boolean => {\r\n    const regex = typeof pattern === 'string' ? new RegExp(pattern) : pattern;\r\n    return regex.test(value);\r\n  }\r\n};\r\n","import type { BaseComponentProps } from '../../types';\r\nimport type { DynFieldRef, ValidationRule } from '../../types/field.types';\r\n\r\nexport type DynCheckboxSize = 'small' | 'medium' | 'large';\r\n\r\nexport interface DynCheckboxProps extends BaseComponentProps {\r\n  /** Field name */\r\n  name?: string;\r\n  /** Label displayed next to the checkbox */\r\n  label?: string;\r\n  /** Helper text displayed below the field */\r\n  help?: string;\r\n  /** Disables user interaction */\r\n  disabled?: boolean;\r\n  /** Prevents value changes while keeping the field focusable */\r\n  readonly?: boolean;\r\n  /** Marks the field as required */\r\n  required?: boolean;\r\n  /** Shows the optional indicator */\r\n  optional?: boolean;\r\n  /** Controls visibility of the field */\r\n  visible?: boolean;\r\n  /** Controlled checked state */\r\n  checked?: boolean;\r\n  /** Shows the indeterminate state */\r\n  indeterminate?: boolean;\r\n  /** Custom validation error message */\r\n  errorMessage?: string;\r\n  /** Validation rules */\r\n  validation?: ValidationRule[];\r\n  /** Size variant */\r\n  size?: DynCheckboxSize;\r\n  /** Change handler */\r\n  onChange?: (checked: boolean) => void;\r\n  /** Blur handler */\r\n  onBlur?: () => void;\r\n  /** Focus handler */\r\n  onFocus?: () => void;\r\n}\r\n\r\nexport type DynCheckboxRef = DynFieldRef;\r\n\r\nexport interface DynCheckboxDefaultProps\r\n  extends Required<\r\n      Pick<\r\n        DynCheckboxProps,\r\n        | 'disabled'\r\n        | 'readonly'\r\n        | 'required'\r\n        | 'optional'\r\n        | 'visible'\r\n        | 'checked'\r\n        | 'indeterminate'\r\n        | 'size'\r\n      >\r\n    > {\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_CHECKBOX_DEFAULT_PROPS: DynCheckboxDefaultProps = {\r\n  disabled: false,\r\n  readonly: false,\r\n  required: false,\r\n  optional: false,\r\n  visible: true,\r\n  checked: false,\r\n  indeterminate: false,\r\n  size: 'medium',\r\n  'data-testid': 'dyn-checkbox',\r\n};\r\n","import {\r\n  forwardRef,\r\n  useEffect,\r\n  useId,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { ChangeEvent, ForwardedRef, KeyboardEvent } from 'react';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport type { DynFieldContainerProps } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { DynCheckboxProps, DynCheckboxRef } from './DynCheckbox.types';\r\nimport { DYN_CHECKBOX_DEFAULT_PROPS } from './DynCheckbox.types';\r\nimport styles from './DynCheckbox.module.css';\r\n\r\nconst DynCheckboxComponent = (\r\n  {\r\n    name,\r\n    label,\r\n    help,\r\n    disabled = DYN_CHECKBOX_DEFAULT_PROPS.disabled,\r\n    readonly = DYN_CHECKBOX_DEFAULT_PROPS.readonly,\r\n    required = DYN_CHECKBOX_DEFAULT_PROPS.required,\r\n    optional = DYN_CHECKBOX_DEFAULT_PROPS.optional,\r\n    visible = DYN_CHECKBOX_DEFAULT_PROPS.visible,\r\n    checked: checkedProp = DYN_CHECKBOX_DEFAULT_PROPS.checked,\r\n    indeterminate = DYN_CHECKBOX_DEFAULT_PROPS.indeterminate,\r\n    errorMessage,\r\n    validation,\r\n    className,\r\n    size = DYN_CHECKBOX_DEFAULT_PROPS.size,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    id,\r\n    'data-testid': dataTestId = DYN_CHECKBOX_DEFAULT_PROPS['data-testid'],\r\n  }: DynCheckboxProps,\r\n  ref: ForwardedRef<DynCheckboxRef>\r\n) => {\r\n  const [checked, setChecked] = useState<boolean>(checkedProp);\r\n  const checkboxRef = useRef<HTMLInputElement>(null);\r\n  const fallbackId = useId();\r\n  const fieldId = id ?? name ?? `${fallbackId}-checkbox`;\r\n\r\n  const validationOptions: Parameters<typeof useDynFieldValidation>[0] = {\r\n    value: checked ? 'checked' : '',\r\n    required,\r\n  };\r\n\r\n  if (validation) {\r\n    validationOptions.validation = validation;\r\n  }\r\n\r\n  if (errorMessage) {\r\n    validationOptions.customError = errorMessage;\r\n  }\r\n\r\n  const { error, validate, clearError } = useDynFieldValidation(validationOptions);\r\n\r\n  const resolvedError = errorMessage ?? (error || undefined);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      focus: () => checkboxRef.current?.focus(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setChecked(false);\r\n        onChange?.(false);\r\n        clearError();\r\n      },\r\n      getValue: () => checked,\r\n      setValue: (newValue: unknown) => {\r\n        const booleanValue = Boolean(newValue);\r\n        setChecked(booleanValue);\r\n        onChange?.(booleanValue);\r\n      },\r\n    }),\r\n    [checked, clearError, onChange, validate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setChecked(checkedProp);\r\n  }, [checkedProp]);\r\n\r\n  useEffect(() => {\r\n    if (checkboxRef.current) {\r\n      checkboxRef.current.indeterminate = indeterminate;\r\n    }\r\n  }, [indeterminate]);\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (readonly || disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    const nextValue = event.target.checked;\r\n    setChecked(nextValue);\r\n    onChange?.(nextValue);\r\n    clearError();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    void validate();\r\n    onBlur?.();\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === ' ' || event.key === 'Enter') {\r\n      event.preventDefault();\r\n\r\n      if (disabled || readonly) {\r\n        return;\r\n      }\r\n\r\n      const nextValue = !checked;\r\n      setChecked(nextValue);\r\n      onChange?.(nextValue);\r\n      clearError();\r\n    }\r\n  };\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  const sizeClassMap: Record<NonNullable<DynCheckboxProps['size']>, string | undefined> = {\r\n    small: styles.boxSmall,\r\n    medium: undefined,\r\n    large: styles.boxLarge,\r\n  };\r\n\r\n  const checkboxClasses = cn(\r\n    styles.box,\r\n    sizeClassMap[size],\r\n    checked && !indeterminate && styles.boxChecked,\r\n    indeterminate && styles.boxIndeterminate,\r\n    resolvedError && styles.boxError,\r\n    disabled && styles.boxDisabled,\r\n    readonly && styles.boxReadonly\r\n  );\r\n\r\n  const containerClasses = cn(\r\n    styles.container,\r\n    disabled && styles.containerDisabled,\r\n    readonly && styles.containerReadonly,\r\n    className\r\n  );\r\n\r\n  const wrapperClasses = cn(\r\n    styles.wrapper,\r\n    disabled && styles.wrapperDisabled,\r\n    readonly && styles.wrapperReadonly\r\n  );\r\n\r\n  const describedById = resolvedError\r\n    ? `${fieldId}-error`\r\n    : help\r\n    ? `${fieldId}-help`\r\n    : undefined;\r\n\r\n  const visualState = indeterminate ? 'indeterminate' : checked ? 'checked' : 'unchecked';\r\n\r\n  const fieldContainerProps: Omit<DynFieldContainerProps, 'children'> = {\r\n    required,\r\n    optional,\r\n    className: containerClasses,\r\n    htmlFor: fieldId,\r\n  };\r\n\r\n  if (help) {\r\n    fieldContainerProps.helpText = help;\r\n  }\r\n\r\n  if (resolvedError) {\r\n    fieldContainerProps.errorText = resolvedError;\r\n  }\r\n\r\n  return (\r\n    <DynFieldContainer {...fieldContainerProps}>\r\n      <label className={wrapperClasses} htmlFor={fieldId}>\r\n        <input\r\n          ref={checkboxRef}\r\n          type=\"checkbox\"\r\n          id={fieldId}\r\n          name={name}\r\n          className={styles.input}\r\n          checked={checked}\r\n          disabled={disabled}\r\n          readOnly={readonly}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          onFocus={onFocus}\r\n          onKeyDown={handleKeyDown}\r\n          aria-invalid={Boolean(resolvedError)}\r\n          aria-describedby={describedById}\r\n          aria-required={required || undefined}\r\n          data-testid={dataTestId}\r\n        />\r\n\r\n        <span\r\n          className={checkboxClasses}\r\n          aria-hidden=\"true\"\r\n          data-state={visualState}\r\n          data-size={size}\r\n        >\r\n          <span className={styles.checkmark}>\r\n            {indeterminate ? (\r\n              <span className={styles.indeterminateMark}>-</span>\r\n            ) : checked ? (\r\n              <span className={styles.checkMark}>✓</span>\r\n            ) : null}\r\n          </span>\r\n        </span>\r\n        {label && (\r\n          <span className={styles.label}>\r\n            {label}\r\n            {required && (\r\n              <span className={styles.requiredIndicator} aria-hidden=\"true\">\r\n                *\r\n              </span>\r\n            )}\r\n            {optional && !required && (\r\n              <span className={styles.optionalIndicator} aria-label=\"opcional\">\r\n                (opcional)\r\n              </span>\r\n            )}\r\n          </span>\r\n        )}\r\n      </label>\r\n    </DynFieldContainer>\r\n  );\r\n};\r\n\r\nconst DynCheckbox = forwardRef<DynCheckboxRef, DynCheckboxProps>(DynCheckboxComponent);\r\n\r\nDynCheckbox.displayName = 'DynCheckbox';\r\n\r\nexport { DynCheckbox };\r\nexport default DynCheckbox;\r\n","import type { CSSProperties, HTMLAttributes, ReactNode } from 'react';\r\nimport type { BaseComponentProps } from '../../types/theme';\r\nimport type {\r\n  LayoutAlignment,\r\n  LayoutDirection,\r\n  LayoutJustify,\r\n  LayoutSize,\r\n  LayoutSpacing,\r\n} from '../../types/layout.types';\r\n\r\nexport type DynContainerBackground = 'none' | 'surface' | 'card';\r\nexport type DynContainerLayout = 'fluid' | 'fixed';\r\nexport type DynContainerMaxWidthToken = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\r\nexport type DynContainerSpaceValue = LayoutSpacing | number | string;\r\n\r\nexport interface DynContainerOwnProps {\r\n  /** Optional title displayed above the content */\r\n  title?: string;\r\n  /** Optional subtitle displayed under the title */\r\n  subtitle?: string;\r\n  /** Layout direction for the content area */\r\n  direction?: LayoutDirection;\r\n  /** Cross-axis alignment for content */\r\n  align?: LayoutAlignment;\r\n  /** Main-axis alignment for content */\r\n  justify?: LayoutJustify;\r\n  /** Spacing between content elements */\r\n  spacing?: LayoutSpacing;\r\n  /** Visual size variant which controls internal padding */\r\n  size?: LayoutSize;\r\n  /** Controls whether the container has a border */\r\n  bordered?: boolean;\r\n  /** Controls whether the container has a shadow */\r\n  shadow?: boolean;\r\n  /** Background style variant */\r\n  background?: DynContainerBackground;\r\n  /** Fixed height for the container */\r\n  height?: number | string;\r\n  /** Maximum width constraint, accepts design tokens or raw CSS values */\r\n  maxWidth?: number | string | DynContainerMaxWidthToken;\r\n  /** Layout behavior for responsive alignment */\r\n  layout?: DynContainerLayout;\r\n  /** Optional padding override using spacing tokens or raw CSS values */\r\n  padding?: DynContainerSpaceValue;\r\n  /** Optional margin override using spacing tokens or raw CSS values */\r\n  margin?: DynContainerSpaceValue;\r\n  /** Render prop children are supported in addition to nodes */\r\n  children?: ReactNode;\r\n  /** Removes border regardless of bordered value (legacy prop support) */\r\n  noBorder?: boolean;\r\n  /** Removes padding regardless of size value (legacy prop support) */\r\n  noPadding?: boolean;\r\n  /** Inline style overrides */\r\n  style?: CSSProperties;\r\n}\r\n\r\nexport type DynContainerProps = BaseComponentProps &\r\n  DynContainerOwnProps &\r\n  Omit<\r\n    HTMLAttributes<HTMLDivElement>,\r\n    keyof BaseComponentProps | keyof DynContainerOwnProps\r\n  >;\r\n\r\nexport type DynContainerRef = HTMLDivElement;\r\n\r\nexport interface DynContainerDefaultProps {\r\n  direction: LayoutDirection;\r\n  spacing: LayoutSpacing;\r\n  size: LayoutSize;\r\n  background: DynContainerBackground;\r\n  bordered: boolean;\r\n  shadow: boolean;\r\n  layout: DynContainerLayout;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_CONTAINER_DEFAULT_PROPS: DynContainerDefaultProps = {\r\n  direction: 'vertical',\r\n  spacing: 'md',\r\n  size: 'medium',\r\n  background: 'surface',\r\n  bordered: true,\r\n  shadow: false,\r\n  layout: 'fluid',\r\n  'data-testid': 'dyn-container',\r\n};\r\n","import { forwardRef, useMemo } from 'react';\r\nimport type { CSSProperties, ForwardedRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_CONTAINER_DEFAULT_PROPS,\r\n  DynContainerProps,\r\n  DynContainerRef,\r\n  type DynContainerMaxWidthToken,\r\n  type DynContainerSpaceValue,\r\n} from './DynContainer.types';\r\nimport styles from './DynContainer.module.css';\r\n\r\nconst toPascalCase = (value: string) => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\nconst SPACING_TOKENS: Record<string, string> = {\r\n  none: '0',\r\n  xs: 'var(--dyn-spacing-xs, var(--spacing-xs, 0.25rem))',\r\n  sm: 'var(--dyn-spacing-sm, var(--spacing-sm, 0.5rem))',\r\n  md: 'var(--dyn-spacing-md, var(--spacing-md, 1rem))',\r\n  lg: 'var(--dyn-spacing-lg, var(--spacing-lg, 1.5rem))',\r\n  xl: 'var(--dyn-spacing-xl, var(--spacing-xl, 2rem))',\r\n};\r\n\r\nconst MAX_WIDTH_TOKENS: Record<DynContainerMaxWidthToken, string> = {\r\n  xs: 'min(100%, var(--dyn-container-max-width-xs))',\r\n  sm: 'min(100%, var(--dyn-container-max-width-sm))',\r\n  md: 'min(100%, var(--dyn-container-max-width-md))',\r\n  lg: 'min(100%, var(--dyn-container-max-width-lg))',\r\n  xl: 'min(100%, var(--dyn-container-max-width-xl))',\r\n  full: '100%',\r\n};\r\n\r\ntype CSSVarProperties = CSSProperties & Record<string, string | number | undefined>;\r\n\r\nconst resolveSpacingValue = (value?: DynContainerSpaceValue): string | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return `${value}px`;\r\n  }\r\n\r\n  const normalized = value.trim();\r\n\r\n  if (normalized in SPACING_TOKENS) {\r\n    return SPACING_TOKENS[normalized];\r\n  }\r\n\r\n  return normalized;\r\n};\r\n\r\nconst resolveMaxWidth = (\r\n  value?: DynContainerProps['maxWidth']\r\n): string | undefined => {\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return `${value}px`;\r\n  }\r\n\r\n  const normalized = value.trim();\r\n\r\n  if (normalized in MAX_WIDTH_TOKENS) {\r\n    return MAX_WIDTH_TOKENS[normalized as DynContainerMaxWidthToken];\r\n  }\r\n\r\n  return normalized;\r\n};\r\n\r\nconst DynContainerComponent = (\r\n  {\r\n    title,\r\n    subtitle,\r\n    direction = DYN_CONTAINER_DEFAULT_PROPS.direction,\r\n    align,\r\n    justify,\r\n    spacing = DYN_CONTAINER_DEFAULT_PROPS.spacing,\r\n    size = DYN_CONTAINER_DEFAULT_PROPS.size,\r\n    bordered = DYN_CONTAINER_DEFAULT_PROPS.bordered,\r\n    shadow = DYN_CONTAINER_DEFAULT_PROPS.shadow,\r\n    background = DYN_CONTAINER_DEFAULT_PROPS.background,\r\n    height,\r\n    maxWidth,\r\n    layout = DYN_CONTAINER_DEFAULT_PROPS.layout,\r\n    padding,\r\n    margin,\r\n    noBorder,\r\n    noPadding,\r\n    className,\r\n    children,\r\n    style,\r\n    'data-testid': dataTestId = DYN_CONTAINER_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  }: DynContainerProps,\r\n  ref: ForwardedRef<DynContainerRef>\r\n) => {\r\n  const resolvedBordered = noBorder ? false : bordered;\r\n  const hasTitleContent = Boolean(title || subtitle);\r\n  const resolvedMaxWidth = resolveMaxWidth(maxWidth);\r\n  const resolvedPadding = resolveSpacingValue(padding);\r\n  const resolvedMargin = resolveSpacingValue(margin);\r\n\r\n  const containerStyle = useMemo<CSSProperties | undefined>(() => {\r\n    const next: CSSVarProperties = { ...(style as CSSVarProperties) };\r\n\r\n    if (typeof height === 'number') {\r\n      next.height = `${height}px`;\r\n    } else if (typeof height === 'string') {\r\n      next.height = height;\r\n    }\r\n\r\n    if (resolvedMaxWidth) {\r\n      next.maxWidth = resolvedMaxWidth;\r\n      next['--dyn-container-max-width'] = resolvedMaxWidth;\r\n    }\r\n\r\n    if (resolvedPadding) {\r\n      next['--dyn-container-padding'] = resolvedPadding;\r\n    }\r\n\r\n    if (resolvedMargin) {\r\n      next['--dyn-container-margin'] = resolvedMargin;\r\n    }\r\n\r\n    return Object.keys(next).length > 0 ? next : undefined;\r\n  }, [height, resolvedMargin, resolvedMaxWidth, resolvedPadding, style]);\r\n\r\n  const directionClass = styles[`direction${toPascalCase(direction)}` as keyof typeof styles];\r\n  const spacingClass = spacing\r\n    ? styles[`spacing${toPascalCase(spacing)}` as keyof typeof styles]\r\n    : undefined;\r\n  const sizeClass = size\r\n    ? styles[`size${toPascalCase(size)}` as keyof typeof styles]\r\n    : undefined;\r\n  const backgroundClass = background\r\n    ? styles[`background${toPascalCase(background)}` as keyof typeof styles]\r\n    : undefined;\r\n  const alignClass = align\r\n    ? styles[`align${toPascalCase(align)}` as keyof typeof styles]\r\n    : undefined;\r\n  const justifyClass = justify\r\n    ? styles[`justify${toPascalCase(justify)}` as keyof typeof styles]\r\n    : undefined;\r\n\r\n  const containerClassName = cn(\r\n    styles.root,\r\n    directionClass,\r\n    spacingClass,\r\n    sizeClass,\r\n    backgroundClass,\r\n    alignClass,\r\n    justifyClass,\r\n    layout === 'fixed' && styles.layoutFixed,\r\n    resolvedBordered && styles.bordered,\r\n    shadow && styles.shadow,\r\n    noPadding && styles.noPadding,\r\n    hasTitleContent && styles.withTitle,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={containerClassName}\r\n      style={containerStyle}\r\n      data-testid={dataTestId}\r\n      {...rest}\r\n    >\r\n      {hasTitleContent && (\r\n        <div className={styles.header}>\r\n          {title && <h2 className={styles.title}>{title}</h2>}\r\n          {subtitle && <p className={styles.subtitle}>{subtitle}</p>}\r\n        </div>\r\n      )}\r\n      <div className={styles.content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DynContainer = forwardRef<DynContainerRef, DynContainerProps>(DynContainerComponent);\r\n\r\nDynContainer.displayName = 'DynContainer';\r\n\r\nexport { DynContainer };\r\nexport default DynContainer;\r\n","/**\r\n * Date parsing hook for DYN UI DatePicker component\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\n\r\ninterface DateParserOptions {\r\n  format?: string;\r\n  locale?: string;\r\n  customParser?: (input: string) => Date | null;\r\n}\r\n\r\n/**\r\n * Hook for date parsing with custom formats and locales\r\n * @param options - Date parser configuration\r\n * @returns Date parsing utilities\r\n */\r\nexport const useDynDateParser = ({\r\n  format = 'dd/MM/yyyy',\r\n  locale = 'pt-BR',\r\n  customParser\r\n}: DateParserOptions = {}) => {\r\n  // Locale support is reserved for future enhancements; consume the value to satisfy linting.\r\n  void locale;\r\n\r\n  const [displayValue, setDisplayValue] = useState<string>('');\r\n\r\n  const formatDate = useCallback((date: Date | null, formatStr: string = format): string => {\r\n    if (!date) return '';\r\n\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = date.getFullYear().toString();\r\n\r\n    return formatStr\r\n      .replace('dd', day)\r\n      .replace('MM', month)\r\n      .replace('yyyy', year);\r\n  }, [format]);\r\n\r\n  const parseDate = useCallback((dateStr: string): Date | null => {\r\n    if (!dateStr || dateStr.trim() === '') return null;\r\n\r\n    // Try custom parser first\r\n    if (customParser) {\r\n      try {\r\n        return customParser(dateStr);\r\n      } catch {\r\n        // Fall back to default parsing if custom parser fails\r\n      }\r\n    }\r\n\r\n    // Handle natural language inputs (Portuguese)\r\n    const today = new Date();\r\n    const normalizedInput = dateStr.toLowerCase().trim();\r\n\r\n    switch (normalizedInput) {\r\n      case 'hoje':\r\n      case 'today':\r\n        return today;\r\n      \r\n      case 'ontem':\r\n      case 'yesterday':\r\n        const yesterday = new Date(today);\r\n        yesterday.setDate(today.getDate() - 1);\r\n        return yesterday;\r\n      \r\n      case 'amanhã':\r\n      case 'amanha':\r\n      case 'tomorrow':\r\n        const tomorrow = new Date(today);\r\n        tomorrow.setDate(today.getDate() + 1);\r\n        return tomorrow;\r\n    }\r\n\r\n    // Try to parse standard formats\r\n    const cleanStr = dateStr.replace(/[^0-9]/g, '');\r\n    \r\n    if (cleanStr.length === 8) {\r\n      // DDMMYYYY format\r\n      const day = parseInt(cleanStr.substr(0, 2));\r\n      const month = parseInt(cleanStr.substr(2, 2)) - 1; // Month is 0-indexed\r\n      const year = parseInt(cleanStr.substr(4, 4));\r\n\r\n      if (day >= 1 && day <= 31 && month >= 0 && month <= 11 && year >= 1900) {\r\n        const date = new Date(year, month, day);\r\n        // Validate the date is actually valid (handles things like Feb 30th)\r\n        if (\r\n          date.getDate() === day &&\r\n          date.getMonth() === month &&\r\n          date.getFullYear() === year\r\n        ) {\r\n          return date;\r\n        }\r\n      }\r\n    } else if (cleanStr.length === 6) {\r\n      // DDMMYY format\r\n      const day = parseInt(cleanStr.substr(0, 2));\r\n      const month = parseInt(cleanStr.substr(2, 2)) - 1;\r\n      let year = parseInt(cleanStr.substr(4, 2));\r\n      \r\n      // Handle 2-digit year (assume 20XX for years 00-30, 19XX for 31-99)\r\n      year = year <= 30 ? 2000 + year : 1900 + year;\r\n\r\n      if (day >= 1 && day <= 31 && month >= 0 && month <= 11) {\r\n        const date = new Date(year, month, day);\r\n        if (\r\n          date.getDate() === day &&\r\n          date.getMonth() === month &&\r\n          date.getFullYear() === year\r\n        ) {\r\n          return date;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Try standard date parsing as last resort\r\n    try {\r\n      const parsed = new Date(dateStr);\r\n      if (!isNaN(parsed.getTime())) {\r\n        return parsed;\r\n      }\r\n    } catch {\r\n      // Ignore parsing errors\r\n    }\r\n\r\n    return null;\r\n  }, [customParser]);\r\n\r\n  const isValidDate = useCallback((date: Date | null): boolean => {\r\n    return date !== null && date instanceof Date && !isNaN(date.getTime());\r\n  }, []);\r\n\r\n  const getRelativeDescription = useCallback((date: Date | null): string | null => {\r\n    if (!date) return null;\r\n\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const targetDate = new Date(date);\r\n    targetDate.setHours(0, 0, 0, 0);\r\n    \r\n    const diffTime = targetDate.getTime() - today.getTime();\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffDays === 0) return 'hoje';\r\n    if (diffDays === 1) return 'amanhã';\r\n    if (diffDays === -1) return 'ontem';\r\n    if (diffDays > 1 && diffDays <= 7) return `em ${diffDays} dias`;\r\n    if (diffDays < -1 && diffDays >= -7) return `${Math.abs(diffDays)} dias atrás`;\r\n\r\n    return null;\r\n  }, []);\r\n\r\n  return {\r\n    displayValue,\r\n    setDisplayValue,\r\n    formatDate,\r\n    parseDate,\r\n    isValidDate,\r\n    getRelativeDescription\r\n  };\r\n};\r\n\r\n/**\r\n * Predefined date formats\r\n */\r\nexport const DATE_FORMATS = {\r\n  'pt-BR': 'dd/MM/yyyy',\r\n  'en-US': 'MM/dd/yyyy',\r\n  'ISO': 'yyyy-MM-dd',\r\n  'short': 'dd/MM/yy',\r\n  'long': 'dd de MMMM de yyyy'\r\n} as const;\r\n\r\n/**\r\n * Get date format by locale\r\n * @param locale - Locale string\r\n * @returns Date format pattern\r\n */\r\nexport const getDateFormat = (locale: keyof typeof DATE_FORMATS = 'pt-BR'): string => {\r\n  return DATE_FORMATS[locale] || DATE_FORMATS['pt-BR'];\r\n};\r\n","/**\r\n * DynDatePicker - Advanced date picker with custom parsing\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useImperativeHandle,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { ChangeEvent, KeyboardEvent } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { DynDatePickerProps, DynFieldRef, InputSize } from '../../types/field.types';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { useDynDateParser } from '../../hooks/useDynDateParser';\r\nimport { DynIcon } from '../DynIcon';\r\nimport styles from './DynDatePicker.module.css';\r\n\r\nconst MAX_DATE_LENGTH = 10;\r\n\r\nconst sizeClassMap: Record<InputSize, string | undefined> = {\r\n  small: styles.sizeSmall,\r\n  medium: undefined,\r\n  large: styles.sizeLarge,\r\n};\r\n\r\nexport const DynDatePicker = forwardRef<DynFieldRef, DynDatePickerProps>((props, ref) => {\r\n  const {\r\n    id: idProp,\r\n    name,\r\n    label,\r\n    help,\r\n    placeholder = 'dd/mm/aaaa',\r\n    disabled = false,\r\n    readonly = false,\r\n    required = false,\r\n    optional = false,\r\n    visible = true,\r\n    value: propValue,\r\n    errorMessage,\r\n    validation,\r\n    className,\r\n    format = 'dd/MM/yyyy',\r\n    locale = 'pt-BR',\r\n    minDate,\r\n    maxDate,\r\n    customParser,\r\n    size = 'medium',\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    children: _children,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const instanceId = useId();\r\n  const inputId = idProp ?? name ?? instanceId;\r\n  const dropdownId = `${inputId}-dropdown`;\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [value, setValue] = useState<Date | null>(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [focused, setFocused] = useState(false);\r\n\r\n  const { error, validate, clearError } = useDynFieldValidation({\r\n    value,\r\n    ...(required ? { required } : {}),\r\n    ...(validation ? { validation } : {}),\r\n  });\r\n\r\n  const {\r\n    displayValue,\r\n    setDisplayValue,\r\n    formatDate,\r\n    parseDate,\r\n    isValidDate,\r\n    getRelativeDescription,\r\n  } = useDynDateParser({\r\n    format,\r\n    locale,\r\n    ...(customParser ? { customParser } : {}),\r\n  });\r\n\r\n  const parseExternalValue = useCallback(\r\n    (input: DynDatePickerProps['value']): Date | null => {\r\n      if (!input) {\r\n        return null;\r\n      }\r\n\r\n      const candidate = input instanceof Date ? input : new Date(input);\r\n      return isValidDate(candidate) ? candidate : null;\r\n    },\r\n    [isValidDate]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const nextValue = parseExternalValue(propValue);\r\n    setValue(prev => {\r\n      const prevTime = prev?.getTime();\r\n      const nextTime = nextValue?.getTime();\r\n      return prevTime === nextTime ? prev : nextValue;\r\n    });\r\n    setDisplayValue(nextValue ? formatDate(nextValue) : '');\r\n  }, [propValue, formatDate, parseExternalValue, setDisplayValue]);\r\n\r\n  const handleDocumentClick = useCallback((event: MouseEvent) => {\r\n    if (containerRef.current && !containerRef.current.contains(event.target as Node)) {\r\n      setIsOpen(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isOpen) {\r\n      return;\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleDocumentClick);\r\n    };\r\n  }, [isOpen, handleDocumentClick]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => inputRef.current?.focus(),\r\n    validate: () => validate(),\r\n    clear: () => {\r\n      setValue(null);\r\n      setDisplayValue('');\r\n      onChange?.(null);\r\n      clearError();\r\n    },\r\n    getValue: () => value,\r\n    setValue: (newValue: any) => {\r\n      const nextValue = parseExternalValue(newValue);\r\n      setValue(nextValue);\r\n      setDisplayValue(nextValue ? formatDate(nextValue) : '');\r\n      onChange?.(nextValue);\r\n    },\r\n  }));\r\n\r\n  const emitChange = useCallback(\r\n    (nextValue: Date | null) => {\r\n      setValue(nextValue);\r\n      setDisplayValue(nextValue ? formatDate(nextValue) : '');\r\n      onChange?.(nextValue);\r\n    },\r\n    [formatDate, onChange, setDisplayValue]\r\n  );\r\n\r\n  const handleInputChange = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const inputValue = event.target.value;\r\n      setDisplayValue(inputValue);\r\n\r\n      const parsedDate = parseDate(inputValue);\r\n      if (parsedDate && isValidDate(parsedDate)) {\r\n        if (minDate && parsedDate < minDate) {\r\n          return;\r\n        }\r\n        if (maxDate && parsedDate > maxDate) {\r\n          return;\r\n        }\r\n\r\n        emitChange(parsedDate);\r\n        clearError();\r\n      } else if (!inputValue) {\r\n        emitChange(null);\r\n        clearError();\r\n      }\r\n    },\r\n    [parseDate, isValidDate, minDate, maxDate, emitChange, clearError]\r\n  );\r\n\r\n  const handleCalendarToggle = useCallback(() => {\r\n    if (disabled || readonly) {\r\n      return;\r\n    }\r\n    setIsOpen(prev => !prev);\r\n    inputRef.current?.focus();\r\n  }, [disabled, readonly]);\r\n\r\n  const handleTodayClick = useCallback(() => {\r\n    const today = new Date();\r\n    emitChange(today);\r\n    clearError();\r\n    setIsOpen(false);\r\n  }, [emitChange, clearError]);\r\n\r\n  const handleClearClick = useCallback(() => {\r\n    emitChange(null);\r\n    clearError();\r\n    inputRef.current?.focus();\r\n  }, [emitChange, clearError]);\r\n\r\n  const handleBlur = useCallback(() => {\r\n    setFocused(false);\r\n    validate();\r\n    onBlur?.();\r\n  }, [validate, onBlur]);\r\n\r\n  const handleFocus = useCallback(() => {\r\n    setFocused(true);\r\n    clearError();\r\n    onFocus?.();\r\n  }, [clearError, onFocus]);\r\n\r\n  const handleKeyDown = useCallback(\r\n    (event: KeyboardEvent<HTMLInputElement>) => {\r\n      switch (event.key) {\r\n        case 'Enter':\r\n        case 'ArrowDown':\r\n          if (!isOpen) {\r\n            setIsOpen(true);\r\n            event.preventDefault();\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          if (isOpen) {\r\n            setIsOpen(false);\r\n            event.preventDefault();\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [isOpen]\r\n  );\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  const fieldError = errorMessage ?? (error || undefined);\r\n\r\n  const inputClasses = cn(\r\n    styles.input,\r\n    sizeClassMap[size],\r\n    focused && styles.stateFocused,\r\n    Boolean(fieldError) && styles.stateError,\r\n    disabled && styles.stateDisabled,\r\n    readonly && styles.stateReadonly,\r\n    isOpen && styles.stateOpen\r\n  );\r\n\r\n  const describedBy =\r\n    [\r\n      fieldError ? `${inputId}-error` : null,\r\n      help ? `${inputId}-help` : null,\r\n    ]\r\n      .filter(Boolean)\r\n      .join(' ') || undefined;\r\n\r\n  const relativeText = useMemo(\r\n    () => (value ? getRelativeDescription(value) : null),\r\n    [value, getRelativeDescription]\r\n  );\r\n\r\n  return (\r\n    <DynFieldContainer\r\n      {...(label !== undefined ? { label } : {})}\r\n      {...(help !== undefined ? { helpText: help } : {})}\r\n      {...(required ? { required } : {})}\r\n      {...(optional ? { optional } : {})}\r\n      {...(fieldError ? { errorText: fieldError } : {})}\r\n      {...(className !== undefined ? { className } : {})}\r\n      htmlFor={inputId}\r\n    >\r\n      <div ref={containerRef} className={styles.container} data-testid={dataTestId}>\r\n        <div className={styles.inputContainer}>\r\n          <input\r\n            ref={inputRef}\r\n            id={inputId}\r\n            name={name ?? inputId}\r\n            type=\"text\"\r\n            className={inputClasses}\r\n            placeholder={placeholder}\r\n            value={displayValue}\r\n            disabled={disabled}\r\n            readOnly={readonly}\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            onFocus={handleFocus}\r\n            onKeyDown={handleKeyDown}\r\n            aria-invalid={Boolean(fieldError)}\r\n            aria-describedby={describedBy}\r\n            aria-expanded={isOpen}\r\n            aria-controls={isOpen ? dropdownId : undefined}\r\n            maxLength={MAX_DATE_LENGTH}\r\n            data-size={size}\r\n            {...rest}\r\n          />\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={styles.calendarButton}\r\n            onClick={handleCalendarToggle}\r\n            disabled={disabled}\r\n            tabIndex={-1}\r\n            aria-label=\"Abrir calendário\"\r\n            aria-expanded={isOpen}\r\n            aria-controls={isOpen ? dropdownId : undefined}\r\n          >\r\n            <DynIcon icon=\"dyn-icon-calendar\" />\r\n          </button>\r\n\r\n          {displayValue && !readonly && !disabled && (\r\n            <button\r\n              type=\"button\"\r\n              className={styles.clearButton}\r\n              onClick={handleClearClick}\r\n              tabIndex={-1}\r\n              aria-label=\"Limpar data\"\r\n            >\r\n              <DynIcon icon=\"dyn-icon-close\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {relativeText && <div className={styles.relativeText}>{relativeText}</div>}\r\n\r\n        {isOpen && (\r\n          <div id={dropdownId} className={styles.dropdown} role=\"dialog\">\r\n            <div className={styles.shortcuts}>\r\n              <button type=\"button\" className={styles.shortcut} onClick={handleTodayClick}>\r\n                Hoje\r\n              </button>\r\n              <button type=\"button\" className={styles.shortcut} onClick={handleClearClick}>\r\n                Limpar\r\n              </button>\r\n            </div>\r\n\r\n            <div>\r\n              <div className={styles.helpTitle}>Formatos aceitos:</div>\r\n              <ul className={styles.helpList}>\r\n                <li className={styles.helpListItem}>dd/mm/aaaa (ex: 25/12/2023)</li>\r\n                <li className={styles.helpListItem}>hoje, amanhã, ontem</li>\r\n                <li className={styles.helpListItem}>Texto natural</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DynFieldContainer>\r\n  );\r\n});\r\n\r\nDynDatePicker.displayName = 'DynDatePicker';\r\n\r\nexport default DynDatePicker;\r\n","import type { ComponentPropsWithoutRef, ElementRef } from 'react';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types/theme';\r\n\r\n// Local type definitions (previously from ../../types)\r\nexport type DynDividerColor = 'default' | 'subtle' | 'primary' | 'secondary' | 'success' | 'warning' | 'danger';\r\nexport type DynDividerLabelPosition = 'left' | 'center' | 'right';\r\nexport type DynDividerLineStyle = 'solid' | 'dashed' | 'dotted';\r\nexport type DynDividerThickness = 'thin' | 'medium' | 'thick';\r\nexport type LayoutDirection = 'horizontal' | 'vertical';\r\nexport type LayoutSpacing = 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n\r\nexport interface DynDividerProps \r\n  extends BaseComponentProps,\r\n    AccessibilityProps,\r\n    Omit<ComponentPropsWithoutRef<'div'>, keyof BaseComponentProps> {\r\n  /** Direction of the divider */\r\n  direction?: LayoutDirection;\r\n  /** Thickness of the divider line */\r\n  thickness?: DynDividerThickness;\r\n  /** Style of the divider line */\r\n  lineStyle?: DynDividerLineStyle;\r\n  /** Color variant of the divider */\r\n  color?: DynDividerColor;\r\n  /** Label text to display */\r\n  label?: string;\r\n  /** Position of the label */\r\n  labelPosition?: DynDividerLabelPosition;\r\n  /** Spacing around the divider */\r\n  spacing?: LayoutSpacing;\r\n  /** Additional CSS classes */\r\n  className?: string;\r\n  /** Custom styles */\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nexport type DynDividerRef = HTMLDivElement;\r\n\r\nexport interface DynDividerDefaultProps {\r\n  direction: LayoutDirection;\r\n  thickness: DynDividerThickness;\r\n  lineStyle: DynDividerLineStyle;\r\n  color: DynDividerColor;\r\n  labelPosition: DynDividerLabelPosition;\r\n  spacing: LayoutSpacing;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_DIVIDER_DEFAULT_PROPS: DynDividerDefaultProps = {\r\n  direction: 'horizontal',\r\n  thickness: 'thin',\r\n  lineStyle: 'solid',\r\n  color: 'default',\r\n  labelPosition: 'center',\r\n  spacing: 'md',\r\n  'data-testid': 'dyn-divider',\r\n};","import { forwardRef, useId } from 'react';\r\nimport type { ForwardedRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_DIVIDER_DEFAULT_PROPS,\r\n  DynDividerProps,\r\n  DynDividerRef,\r\n} from './DynDivider.types';\r\nimport styles from './DynDivider.module.css';\r\n\r\nconst toPascalCase = (value: string) => value.charAt(0).toUpperCase() + value.slice(1);\r\n\r\nconst DynDividerComponent = (\r\n  {\r\n    label,\r\n    labelPosition = DYN_DIVIDER_DEFAULT_PROPS.labelPosition,\r\n    direction = DYN_DIVIDER_DEFAULT_PROPS.direction,\r\n    thickness = DYN_DIVIDER_DEFAULT_PROPS.thickness,\r\n    lineStyle = DYN_DIVIDER_DEFAULT_PROPS.lineStyle,\r\n    color = DYN_DIVIDER_DEFAULT_PROPS.color,\r\n    spacing = DYN_DIVIDER_DEFAULT_PROPS.spacing,\r\n    children,\r\n    className,\r\n    id,\r\n    'data-testid': dataTestId = DYN_DIVIDER_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  }: DynDividerProps,\r\n  ref: ForwardedRef<DynDividerRef>\r\n) => {\r\n  const generatedId = useId();\r\n  const orientation = direction === 'vertical' ? 'vertical' : 'horizontal';\r\n  const labelContent = children ?? label;\r\n  const labelId = labelContent ? `${id ?? `dyn-divider-${generatedId}`}-label` : undefined;\r\n  const ariaLabel =\r\n    !labelId && typeof labelContent === 'string' ? labelContent : undefined;\r\n\r\n  const directionClass = styles[`direction${toPascalCase(orientation)}` as keyof typeof styles];\r\n  const thicknessClass = styles[`thickness${toPascalCase(thickness)}` as keyof typeof styles];\r\n  const styleClass = styles[`lineStyle${toPascalCase(lineStyle)}` as keyof typeof styles];\r\n  const colorClass = styles[`color${toPascalCase(color)}` as keyof typeof styles];\r\n  const spacingClass = styles[`spacing${toPascalCase(spacing)}` as keyof typeof styles];\r\n  const labelPositionClass = labelContent\r\n    ? styles[`label${toPascalCase(labelPosition)}` as keyof typeof styles]\r\n    : undefined;\r\n\r\n  const dividerClassName = cn(\r\n    styles.root,\r\n    directionClass,\r\n    thicknessClass,\r\n    styleClass,\r\n    colorClass,\r\n    spacingClass,\r\n    Boolean(labelContent) && styles.withLabel,\r\n    labelPositionClass,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      id={id}\r\n      role=\"separator\"\r\n      aria-orientation={orientation}\r\n      aria-labelledby={labelId}\r\n      aria-label={ariaLabel}\r\n      className={dividerClassName}\r\n      data-testid={dataTestId}\r\n      {...rest}\r\n    >\r\n      <span className={styles.line} aria-hidden=\"true\" />\r\n      {labelContent ? (\r\n        <span className={styles.label} id={labelId}>\r\n          {labelContent}\r\n        </span>\r\n      ) : null}\r\n      <span className={styles.line} aria-hidden=\"true\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DynDivider = forwardRef<DynDividerRef, DynDividerProps>(DynDividerComponent);\r\n\r\nDynDivider.displayName = 'DynDivider';\r\n\r\nexport { DynDivider };\r\nexport default DynDivider;\r\n","import { BaseComponentProps } from '../../types';\r\n\r\nexport interface GaugeRange {\r\n  from: number;\r\n  to: number;\r\n  color: string;\r\n  label?: string;\r\n}\r\n\r\nexport type GaugeSize = 'small' | 'medium' | 'large';\r\nexport type GaugeType = 'arc' | 'circle' | 'line';\r\n\r\nexport interface DynGaugeProps extends BaseComponentProps {\r\n  /** Current value to display */\r\n  value: number;\r\n  \r\n  /** Minimum value */\r\n  min?: number;\r\n  \r\n  /** Maximum value */\r\n  max?: number;\r\n  \r\n  /** Gauge title */\r\n  title?: string;\r\n  \r\n  /** Gauge label (alias for title) */\r\n  label?: string;\r\n  \r\n  /** Gauge subtitle */\r\n  subtitle?: string;\r\n  \r\n  /** Gauge type/style */\r\n  type?: GaugeType;\r\n  \r\n  /** Unit of measurement */\r\n  unit?: string;\r\n  \r\n  /** Color ranges */\r\n  ranges?: GaugeRange[];\r\n  \r\n  /** Show the numeric value */\r\n  showValue?: boolean;\r\n  \r\n  /** Show range indicators */\r\n  showRanges?: boolean;\r\n  \r\n  /** Gauge size */\r\n  size?: GaugeSize;\r\n  \r\n  /** Arc thickness */\r\n  thickness?: number;\r\n  \r\n  /** Rounded line caps */\r\n  rounded?: boolean;\r\n  \r\n  /** Animated transitions */\r\n  animated?: boolean;\r\n  \r\n  /** Custom color (overrides range colors) */\r\n  color?: string;\r\n  \r\n  /** Background arc color */\r\n  backgroundColor?: string;\r\n  \r\n  /** Custom value formatter */\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport type DynGaugeDefaultProps = Required<\r\n  Pick<\r\n    DynGaugeProps,\r\n    | 'min'\r\n    | 'max'\r\n    | 'type'\r\n    | 'unit'\r\n    | 'ranges'\r\n    | 'showValue'\r\n    | 'showRanges'\r\n    | 'size'\r\n    | 'thickness'\r\n    | 'rounded'\r\n    | 'animated'\r\n    | 'backgroundColor'\r\n  >\r\n>;\r\n\r\nexport const DYN_GAUGE_DEFAULT_PROPS: DynGaugeDefaultProps = {\r\n  min: 0,\r\n  max: 100,\r\n  type: 'arc',\r\n  unit: '%',\r\n  ranges: [],\r\n  showValue: true,\r\n  showRanges: true,\r\n  size: 'medium',\r\n  thickness: 20,\r\n  rounded: true,\r\n  animated: true,\r\n  backgroundColor: '#e0e0e0',\r\n};","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useMemo,\r\n  useRef,\r\n} from 'react';\r\n\r\nimport { cn } from '../../utils/classNames';\r\nimport {\r\n  DYN_GAUGE_DEFAULT_PROPS,\r\n  DynGaugeProps,\r\n  GaugeRange,\r\n  GaugeSize,\r\n  GaugeType,\r\n} from './DynGauge.types';\r\nimport styles from './DynGauge.module.css';\r\n\r\nconst gaugeDimensionsMap: Record<GaugeSize, { width: number; height: number }> = {\r\n  small: { width: 120, height: 120 },\r\n  medium: { width: 200, height: 200 },\r\n  large: { width: 280, height: 280 },\r\n};\r\n\r\nconst sizeClassNameMap: Partial<Record<GaugeSize, string | undefined>> = {\r\n  small: styles.sizeSmall,\r\n  medium: styles.sizeMedium,\r\n  large: styles.sizeLarge,\r\n};\r\n\r\nconst typeClassNameMap: Partial<Record<GaugeType, string | undefined>> = {\r\n  arc: styles.typeArc,\r\n  circle: styles.typeCircle,\r\n  line: styles.typeLine,\r\n};\r\n\r\nconst clampGaugeValue = (value: number, min: number, max: number): number => {\r\n  if (!Number.isFinite(value)) {\r\n    return min;\r\n  }\r\n\r\n  if (max <= min) {\r\n    return min;\r\n  }\r\n\r\n  return Math.min(max, Math.max(min, value));\r\n};\r\n\r\nconst findRangeForValue = (ranges: GaugeRange[], value: number) =>\r\n  ranges.find(range => value >= range.from && value <= range.to);\r\n\r\nexport const DynGauge = forwardRef<HTMLDivElement, DynGaugeProps>((props, ref) => {\r\n  const {\r\n    value,\r\n    min = DYN_GAUGE_DEFAULT_PROPS.min,\r\n    max = DYN_GAUGE_DEFAULT_PROPS.max,\r\n    title,\r\n    label,\r\n    subtitle,\r\n    type = DYN_GAUGE_DEFAULT_PROPS.type,\r\n    unit = DYN_GAUGE_DEFAULT_PROPS.unit,\r\n    ranges = DYN_GAUGE_DEFAULT_PROPS.ranges,\r\n    showValue = DYN_GAUGE_DEFAULT_PROPS.showValue,\r\n    showRanges = DYN_GAUGE_DEFAULT_PROPS.showRanges,\r\n    size = DYN_GAUGE_DEFAULT_PROPS.size,\r\n    thickness = DYN_GAUGE_DEFAULT_PROPS.thickness,\r\n    rounded = DYN_GAUGE_DEFAULT_PROPS.rounded,\r\n    animated = DYN_GAUGE_DEFAULT_PROPS.animated,\r\n    color,\r\n    backgroundColor = DYN_GAUGE_DEFAULT_PROPS.backgroundColor,\r\n    className,\r\n    format,\r\n    id,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  } = props;\r\n\r\n  const instanceId = useId();\r\n  const componentId = id ?? instanceId;\r\n  const titleId = title || label ? `${componentId}-title` : undefined;\r\n  const subtitleId = subtitle ? `${componentId}-subtitle` : undefined;\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const animationFrameRef = useRef<number | undefined>(undefined);\r\n  const currentValueRef = useRef<number>(clampGaugeValue(value, min, max));\r\n\r\n  const gaugeDimensions = gaugeDimensionsMap[size] ?? gaugeDimensionsMap.medium;\r\n  const resolvedTitle = title ?? label;\r\n  const safeValue = clampGaugeValue(value, min, max);\r\n\r\n  const numberFormatter = useMemo(\r\n    () =>\r\n      new Intl.NumberFormat(undefined, {\r\n        maximumFractionDigits: 1,\r\n      }),\r\n    []\r\n  );\r\n\r\n  const formatValue = useCallback(\r\n    (val: number): string => {\r\n      if (typeof format === 'function') {\r\n        return format(val);\r\n      }\r\n\r\n      const formattedNumber = numberFormatter.format(val);\r\n\r\n      if (!unit) {\r\n        return formattedNumber;\r\n      }\r\n\r\n      const trimmedUnit = unit.trim();\r\n      const shouldJoin = trimmedUnit.startsWith('%') || trimmedUnit.startsWith('°');\r\n\r\n      return shouldJoin\r\n        ? `${formattedNumber}${trimmedUnit}`\r\n        : `${formattedNumber} ${trimmedUnit}`;\r\n    },\r\n    [format, numberFormatter, unit]\r\n  );\r\n\r\n  const getColorForValue = useCallback(\r\n    (val: number) => {\r\n      if (typeof color === 'string' && color.length > 0) {\r\n        return color;\r\n      }\r\n\r\n      return findRangeForValue(ranges, val)?.color ?? '#0066cc';\r\n    },\r\n    [color, ranges]\r\n  );\r\n\r\n  const drawGauge = useCallback(\r\n    (displayValue: number) => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) {\r\n        return;\r\n      }\r\n\r\n      const context = canvas.getContext('2d');\r\n      if (!context) {\r\n        return;\r\n      }\r\n\r\n      const { width, height } = gaugeDimensions;\r\n      const centerX = width / 2;\r\n      const centerY = height / 2;\r\n      const radius = Math.min(width, height) / 2 - thickness / 2 - 10;\r\n      const startAngle = -Math.PI * 0.75;\r\n      const sweepAngle = Math.PI * 1.5;\r\n      const span = Math.max(max - min, Number.EPSILON);\r\n      const normalizedValue = (clampGaugeValue(displayValue, min, max) - min) / span;\r\n      const currentColor = getColorForValue(displayValue);\r\n\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      context.clearRect(0, 0, width, height);\r\n\r\n      context.beginPath();\r\n      context.arc(centerX, centerY, radius, startAngle, startAngle + sweepAngle);\r\n      context.strokeStyle = backgroundColor;\r\n      context.lineWidth = thickness;\r\n      context.lineCap = rounded ? 'round' : 'butt';\r\n      context.stroke();\r\n\r\n      if (showRanges && ranges.length > 0) {\r\n        for (const range of ranges) {\r\n          const rangeStart = startAngle + ((range.from - min) / span) * sweepAngle;\r\n          const rangeEnd = startAngle + ((range.to - min) / span) * sweepAngle;\r\n\r\n          context.beginPath();\r\n          context.arc(centerX, centerY, radius, rangeStart, rangeEnd);\r\n          context.strokeStyle = range.color;\r\n          context.lineWidth = thickness * 0.3;\r\n          context.lineCap = rounded ? 'round' : 'butt';\r\n          context.stroke();\r\n        }\r\n      }\r\n\r\n      if (normalizedValue > 0) {\r\n        const endAngle = startAngle + normalizedValue * sweepAngle;\r\n\r\n        context.beginPath();\r\n        context.arc(centerX, centerY, radius, startAngle, endAngle);\r\n        context.strokeStyle = currentColor;\r\n        context.lineWidth = thickness;\r\n        context.lineCap = rounded ? 'round' : 'butt';\r\n        context.stroke();\r\n      }\r\n\r\n      const tickCount = 11;\r\n      for (let index = 0; index < tickCount; index += 1) {\r\n        const angle = startAngle + (index / (tickCount - 1)) * sweepAngle;\r\n        const isMajorTick = index % 2 === 0;\r\n        const tickLength = isMajorTick ? 15 : 8;\r\n        const tickWidth = isMajorTick ? 2 : 1;\r\n\r\n        const outerRadius = radius + thickness / 2 + 5;\r\n        const innerRadius = outerRadius + tickLength;\r\n\r\n        const startX = centerX + Math.cos(angle) * outerRadius;\r\n        const startY = centerY + Math.sin(angle) * outerRadius;\r\n        const endX = centerX + Math.cos(angle) * innerRadius;\r\n        const endY = centerY + Math.sin(angle) * innerRadius;\r\n\r\n        context.beginPath();\r\n        context.moveTo(startX, startY);\r\n        context.lineTo(endX, endY);\r\n        context.strokeStyle = '#666666';\r\n        context.lineWidth = tickWidth;\r\n        context.lineCap = 'round';\r\n        context.stroke();\r\n\r\n        if (isMajorTick) {\r\n          const labelRadius = innerRadius + 15;\r\n          const labelX = centerX + Math.cos(angle) * labelRadius;\r\n          const labelY = centerY + Math.sin(angle) * labelRadius;\r\n          const tickValue = min + (index / (tickCount - 1)) * span;\r\n\r\n          context.fillStyle = '#666666';\r\n          context.font =\r\n            size === 'small'\r\n              ? '10px Arial'\r\n              : size === 'large'\r\n                ? '14px Arial'\r\n                : '12px Arial';\r\n          context.textAlign = 'center';\r\n          context.textBaseline = 'middle';\r\n          context.fillText(numberFormatter.format(tickValue), labelX, labelY);\r\n        }\r\n      }\r\n\r\n      const needleAngle = startAngle + normalizedValue * sweepAngle;\r\n      const needleLength = radius - 20;\r\n      const needleX = centerX + Math.cos(needleAngle) * needleLength;\r\n      const needleY = centerY + Math.sin(needleAngle) * needleLength;\r\n\r\n      context.beginPath();\r\n      context.arc(centerX, centerY, 8, 0, Math.PI * 2);\r\n      context.fillStyle = currentColor;\r\n      context.fill();\r\n\r\n      context.beginPath();\r\n      context.moveTo(centerX, centerY);\r\n      context.lineTo(needleX, needleY);\r\n      context.strokeStyle = currentColor;\r\n      context.lineWidth = 3;\r\n      context.lineCap = 'round';\r\n      context.stroke();\r\n\r\n      context.beginPath();\r\n      context.arc(centerX, centerY, 4, 0, Math.PI * 2);\r\n      context.fillStyle = '#ffffff';\r\n      context.fill();\r\n      context.strokeStyle = currentColor;\r\n      context.lineWidth = 2;\r\n      context.stroke();\r\n    },\r\n    [\r\n      backgroundColor,\r\n      gaugeDimensions,\r\n      getColorForValue,\r\n      max,\r\n      min,\r\n      numberFormatter,\r\n      ranges,\r\n      rounded,\r\n      showRanges,\r\n      size,\r\n      thickness,\r\n    ]\r\n  );\r\n\r\n  const animateToValue = useCallback(\r\n    (target: number) => {\r\n      const clampedTarget = clampGaugeValue(target, min, max);\r\n\r\n      if (!animated) {\r\n        currentValueRef.current = clampedTarget;\r\n        drawGauge(clampedTarget);\r\n        return;\r\n      }\r\n\r\n      const startValue = currentValueRef.current;\r\n      const distance = clampedTarget - startValue;\r\n\r\n      if (Math.abs(distance) <= 0.001) {\r\n        currentValueRef.current = clampedTarget;\r\n        drawGauge(clampedTarget);\r\n        return;\r\n      }\r\n\r\n      let startTime: number | null = null;\r\n      const duration = 800;\r\n\r\n      const step = (timestamp: number) => {\r\n        if (startTime === null) {\r\n          startTime = timestamp;\r\n        }\r\n\r\n        const elapsed = timestamp - startTime;\r\n        const progress = Math.min(elapsed / duration, 1);\r\n        const easedProgress = 1 - Math.pow(1 - progress, 3);\r\n        const nextValue = startValue + distance * easedProgress;\r\n\r\n        currentValueRef.current = nextValue;\r\n        drawGauge(nextValue);\r\n\r\n        if (progress < 1) {\r\n          animationFrameRef.current = requestAnimationFrame(step);\r\n        } else {\r\n          currentValueRef.current = clampedTarget;\r\n          drawGauge(clampedTarget);\r\n        }\r\n      };\r\n\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n\r\n      animationFrameRef.current = requestAnimationFrame(step);\r\n    },\r\n    [animated, drawGauge, max, min]\r\n  );\r\n\r\n  useEffect(() => {\r\n    animateToValue(value);\r\n\r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [animateToValue, value]);\r\n\r\n  useEffect(() => {\r\n    drawGauge(currentValueRef.current);\r\n  }, [drawGauge]);\r\n\r\n  const currentRange = useMemo(\r\n    () => findRangeForValue(ranges, safeValue),\r\n    [ranges, safeValue]\r\n  );\r\n\r\n  const rootClassName = cn(\r\n    styles.root,\r\n    sizeClassNameMap[size] ?? styles.sizeMedium,\r\n    typeClassNameMap[type],\r\n    animated && styles.animated,\r\n    rounded && styles.rounded,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      id={componentId}\r\n      role=\"progressbar\"\r\n      aria-valuemin={min}\r\n      aria-valuemax={max}\r\n      aria-valuenow={safeValue}\r\n      aria-labelledby={titleId}\r\n      aria-describedby={subtitleId}\r\n      data-testid={dataTestId ?? 'dyn-gauge'}\r\n      data-size={size}\r\n      data-type={type}\r\n      className={rootClassName}\r\n      {...rest}\r\n    >\r\n      <figure className={styles.figure}>\r\n        {(resolvedTitle || subtitle) && (\r\n          <header className={styles.header}>\r\n            {resolvedTitle ? (\r\n              <h3 id={titleId} className={styles.title}>\r\n                {resolvedTitle}\r\n              </h3>\r\n            ) : null}\r\n            {subtitle ? (\r\n              <p id={subtitleId} className={styles.subtitle}>\r\n                {subtitle}\r\n              </p>\r\n            ) : null}\r\n          </header>\r\n        )}\r\n\r\n        <div className={styles.content}>\r\n          <div className={styles.canvasContainer}>\r\n            <canvas\r\n              ref={canvasRef}\r\n              className={styles.canvas}\r\n              style={{\r\n                width: gaugeDimensions.width,\r\n                height: gaugeDimensions.height,\r\n              }}\r\n            />\r\n\r\n            {showValue ? (\r\n              <div className={styles.value}>\r\n                <span className={styles.valueText}>{formatValue(safeValue)}</span>\r\n                {currentRange?.label ? (\r\n                  <span className={styles.valueLabel}>{currentRange.label}</span>\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        {showRanges && ranges.length > 0 ? (\r\n          <figcaption className={styles.legend}>\r\n            {ranges.map((range, index) => (\r\n              <div\r\n                key={`${range.from}-${range.to}-${index}`}\r\n                className={styles.legendItem}\r\n              >\r\n                <span\r\n                  className={styles.legendColor}\r\n                  style={{ backgroundColor: range.color }}\r\n                  aria-hidden=\"true\"\r\n                />\r\n                <span className={styles.legendLabel}>\r\n                  {range.label ?? `${formatValue(range.from)} - ${formatValue(range.to)}`}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </figcaption>\r\n        ) : null}\r\n      </figure>\r\n    </div>\r\n  );\r\n});\r\n\r\nDynGauge.displayName = 'DynGauge';\r\n\r\nexport default DynGauge;\r\n","import type { HTMLAttributes, ReactNode } from 'react';\r\nimport type { BaseComponentProps } from '../../types';\r\nimport type { LayoutSize } from '../../types/layout.types';\r\n\r\nexport type DynGridSortDirection = 'asc' | 'desc';\r\n\r\nexport interface DynGridColumn {\r\n  key: string;\r\n  title: ReactNode;\r\n  width?: string | number;\r\n  minWidth?: string | number;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  resizable?: boolean;\r\n  render?: (value: unknown, record: Record<string, unknown>, index: number) => ReactNode;\r\n  align?: 'left' | 'center' | 'right';\r\n  fixed?: 'left' | 'right';\r\n  hidden?: boolean;\r\n}\r\n\r\nexport interface DynGridPagination {\r\n  current: number;\r\n  pageSize: number;\r\n  total: number;\r\n  showSizeChanger?: boolean;\r\n  showQuickJumper?: boolean;\r\n  showTotal?: (total: number, range: [number, number]) => ReactNode;\r\n  onChange?: (page: number, pageSize: number) => void;\r\n}\r\n\r\nexport type DynGridSelectable = boolean | 'single' | 'multiple';\r\n\r\nexport interface DynGridProps\r\n  extends BaseComponentProps,\r\n    Omit<HTMLAttributes<HTMLDivElement>, keyof BaseComponentProps | 'children'> {\r\n  columns: DynGridColumn[];\r\n  data: Record<string, unknown>[];\r\n  loading?: boolean;\r\n  size?: LayoutSize;\r\n  bordered?: boolean;\r\n  striped?: boolean;\r\n  hoverable?: boolean;\r\n  sortable?: boolean;\r\n  filterable?: boolean;\r\n  selectable?: DynGridSelectable;\r\n  selectedKeys?: string[];\r\n  onSelectionChange?: (selectedKeys: string[], selectedRows: Record<string, unknown>[]) => void;\r\n  onSort?: (column: string, direction: DynGridSortDirection) => void;\r\n  onFilter?: (filters: Record<string, unknown>) => void;\r\n  pagination?: DynGridPagination;\r\n  emptyText?: ReactNode;\r\n}\r\n\r\nexport interface DynGridDefaultProps\r\n  extends Required<\r\n      Pick<\r\n        DynGridProps,\r\n        | 'loading'\r\n        | 'size'\r\n        | 'bordered'\r\n        | 'striped'\r\n        | 'hoverable'\r\n        | 'sortable'\r\n        | 'filterable'\r\n        | 'selectable'\r\n        | 'selectedKeys'\r\n        | 'emptyText'\r\n      >\r\n    > {\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_GRID_DEFAULT_PROPS: DynGridDefaultProps = {\r\n  loading: false,\r\n  size: 'medium',\r\n  bordered: true,\r\n  striped: false,\r\n  hoverable: true,\r\n  sortable: true,\r\n  filterable: false,\r\n  selectable: false,\r\n  selectedKeys: [],\r\n  emptyText: 'No data available',\r\n  'data-testid': 'dyn-grid',\r\n};\r\n","import {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useId,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport type { ReactNode } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport type {\r\n  DynGridColumn,\r\n  DynGridProps,\r\n  DynGridSortDirection,\r\n} from './DynGrid.types';\r\nimport { DYN_GRID_DEFAULT_PROPS } from './DynGrid.types';\r\nimport styles from './DynGrid.module.css';\r\n\r\nconst headerAlignClassMap: Record<'center' | 'right', string> = {\r\n  center: styles.headerCellAlignCenter,\r\n  right: styles.headerCellAlignRight,\r\n};\r\n\r\nconst cellAlignClassMap: Record<'center' | 'right', string> = {\r\n  center: styles.cellAlignCenter,\r\n  right: styles.cellAlignRight,\r\n};\r\n\r\nconst sizeClassNameMap: Record<NonNullable<DynGridProps['size']>, string | undefined> = {\r\n  small: styles.sizeSmall,\r\n  medium: undefined,\r\n  large: styles.sizeLarge,\r\n};\r\n\r\nconst DynGrid = forwardRef<HTMLDivElement, DynGridProps>((props, ref) => {\r\n  const {\r\n    columns,\r\n    data,\r\n    loading = DYN_GRID_DEFAULT_PROPS.loading,\r\n    size = DYN_GRID_DEFAULT_PROPS.size,\r\n    bordered = DYN_GRID_DEFAULT_PROPS.bordered,\r\n    striped = DYN_GRID_DEFAULT_PROPS.striped,\r\n    hoverable = DYN_GRID_DEFAULT_PROPS.hoverable,\r\n    sortable = DYN_GRID_DEFAULT_PROPS.sortable,\r\n    filterable = DYN_GRID_DEFAULT_PROPS.filterable,\r\n    selectable = DYN_GRID_DEFAULT_PROPS.selectable,\r\n    selectedKeys,\r\n    onSelectionChange,\r\n    onSort,\r\n    onFilter,\r\n    pagination,\r\n    emptyText = DYN_GRID_DEFAULT_PROPS.emptyText,\r\n    className,\r\n    id,\r\n    'data-testid': dataTestId = DYN_GRID_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  } = props;\r\n\r\n  const selectionName = useId();\r\n\r\n  void filterable;\r\n  void onFilter;\r\n\r\n  const selectionMode: 'none' | 'single' | 'multiple' = useMemo(() => {\r\n    if (selectable === 'single') {\r\n      return 'single';\r\n    }\r\n\r\n    if (selectable === 'multiple' || selectable === true) {\r\n      return 'multiple';\r\n    }\r\n\r\n    return 'none';\r\n  }, [selectable]);\r\n\r\n  const [sortConfig, setSortConfig] = useState<{\r\n    key: string;\r\n    direction: DynGridSortDirection;\r\n  } | null>(null);\r\n\r\n  const resolvedSelectedKeys = useMemo(\r\n    () => selectedKeys ?? DYN_GRID_DEFAULT_PROPS.selectedKeys,\r\n    [selectedKeys]\r\n  );\r\n\r\n  const [selectedRows, setSelectedRows] = useState<string[]>(resolvedSelectedKeys);\r\n\r\n  useEffect(() => {\r\n    setSelectedRows(resolvedSelectedKeys);\r\n  }, [resolvedSelectedKeys]);\r\n\r\n  const visibleColumns = useMemo(\r\n    () => columns.filter(column => !column.hidden),\r\n    [columns]\r\n  );\r\n\r\n  const getRowKey = useCallback((record: Record<string, unknown>, index: number) => {\r\n    const candidate =\r\n      (record.id as string | number | undefined) ??\r\n      (record.key as string | number | undefined) ??\r\n      (record.rowKey as string | number | undefined);\r\n\r\n    if (typeof candidate === 'string' || typeof candidate === 'number') {\r\n      return String(candidate);\r\n    }\r\n\r\n    return index.toString();\r\n  }, []);\r\n\r\n  const handleSort = useCallback(\r\n    (columnKey: string) => {\r\n      if (!sortable) {\r\n        return;\r\n      }\r\n\r\n      const column = visibleColumns.find(col => col.key === columnKey);\r\n      if (!column?.sortable) {\r\n        return;\r\n      }\r\n\r\n      let direction: DynGridSortDirection = 'asc';\r\n\r\n      if (sortConfig?.key === columnKey && sortConfig.direction === 'asc') {\r\n        direction = 'desc';\r\n      }\r\n\r\n      setSortConfig({ key: columnKey, direction });\r\n      onSort?.(columnKey, direction);\r\n    },\r\n    [sortable, visibleColumns, sortConfig, onSort]\r\n  );\r\n\r\n  const getSelectedRowData = useCallback(\r\n    (keys: string[]): Record<string, unknown>[] =>\r\n      keys\r\n        .map(key => {\r\n          const rowIndex = data.findIndex((record, index) => getRowKey(record, index) === key);\r\n          return rowIndex >= 0 ? data[rowIndex] : undefined;\r\n        })\r\n        .filter((record): record is Record<string, unknown> => Boolean(record)),\r\n    [data, getRowKey]\r\n  );\r\n\r\n  const handleRowSelect = useCallback(\r\n    (rowKey: string, selected: boolean) => {\r\n      if (selectionMode === 'none') {\r\n        return;\r\n      }\r\n\r\n      let newSelection: string[];\r\n\r\n      if (selectionMode === 'single') {\r\n        newSelection = selected ? [rowKey] : [];\r\n      } else {\r\n        newSelection = selected\r\n          ? [...new Set([...selectedRows, rowKey])]\r\n          : selectedRows.filter(key => key !== rowKey);\r\n      }\r\n\r\n      setSelectedRows(newSelection);\r\n      onSelectionChange?.(newSelection, getSelectedRowData(newSelection));\r\n    },\r\n    [selectionMode, selectedRows, onSelectionChange, getSelectedRowData]\r\n  );\r\n\r\n  const handleSelectAll = useCallback(\r\n    (selected: boolean) => {\r\n      if (selectionMode !== 'multiple') {\r\n        return;\r\n      }\r\n\r\n      const allKeys = data.map((record, index) => getRowKey(record, index));\r\n      const newSelection = selected ? allKeys : [];\r\n\r\n      setSelectedRows(newSelection);\r\n      onSelectionChange?.(newSelection, selected ? data : []);\r\n    },\r\n    [selectionMode, data, getRowKey, onSelectionChange]\r\n  );\r\n\r\n  const renderCell = useCallback(\r\n    (column: DynGridColumn, record: Record<string, unknown>, rowIndex: number) => {\r\n      if (column.render) {\r\n        return column.render(record[column.key], record, rowIndex);\r\n      }\r\n\r\n      return record[column.key] as ReactNode;\r\n    },\r\n    []\r\n  );\r\n\r\n  const isAllSelected = useMemo(() => {\r\n    if (selectionMode !== 'multiple' || data.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const allKeys = data.map((record, index) => getRowKey(record, index));\r\n    return allKeys.every(key => selectedRows.includes(key));\r\n  }, [selectionMode, data, getRowKey, selectedRows]);\r\n\r\n  const isSelectionIndeterminate = useMemo(() => {\r\n    if (selectionMode !== 'multiple' || data.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    const selectedCount = data.filter((record, index) => selectedRows.includes(getRowKey(record, index))).length;\r\n    return selectedCount > 0 && selectedCount < data.length;\r\n  }, [selectionMode, data, getRowKey, selectedRows]);\r\n\r\n  const gridClassName = cn(\r\n    styles.root,\r\n    sizeClassNameMap[size],\r\n    bordered && styles.bordered,\r\n    striped && styles.striped,\r\n    hoverable && styles.hoverable,\r\n    loading && styles.loading,\r\n    className\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div ref={ref} className={gridClassName} id={id} data-testid={dataTestId} {...rest}>\r\n        <div className={styles.loadingState} role=\"status\" aria-live=\"polite\">\r\n          <div className={styles.spinner} aria-hidden=\"true\" />\r\n          <span>Loading data…</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div ref={ref} className={gridClassName} id={id} data-testid={dataTestId} {...rest}>\r\n        <div className={styles.emptyState}>\r\n          {typeof emptyText === 'string' ? (\r\n            <span>{emptyText}</span>\r\n          ) : (\r\n            emptyText\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} className={gridClassName} id={id} data-testid={dataTestId} {...rest}>\r\n      <div className={styles.wrapper}>\r\n        <table className={styles.table} role=\"table\">\r\n          <thead className={styles.header}>\r\n            <tr className={styles.headerRow}>\r\n              {selectionMode === 'multiple' && (\r\n                <th className={cn(styles.headerCell, styles.selectionCell)} scope=\"col\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className={styles.checkbox}\r\n                    checked={isAllSelected}\r\n                    onChange={event => handleSelectAll(event.target.checked)}\r\n                    aria-checked={isSelectionIndeterminate ? 'mixed' : isAllSelected}\r\n                    aria-label=\"Select all rows\"\r\n                  />\r\n                </th>\r\n              )}\r\n              {visibleColumns.map(column => {\r\n                const isSorted = sortConfig?.key === column.key;\r\n                const direction = isSorted ? sortConfig?.direction : undefined;\r\n                const headerAlignmentClass =\r\n                  column.align && column.align !== 'left'\r\n                    ? headerAlignClassMap[column.align]\r\n                    : undefined;\r\n\r\n                return (\r\n                  <th\r\n                    key={column.key}\r\n                    className={cn(\r\n                      styles.headerCell,\r\n                      headerAlignmentClass,\r\n                      column.sortable && sortable && styles.headerCellSortable,\r\n                      isSorted && styles.headerCellSorted\r\n                    )}\r\n                    style={{ width: column.width, minWidth: column.minWidth }}\r\n                    onClick={() => column.sortable && handleSort(column.key)}\r\n                    aria-sort={\r\n                      column.sortable && sortable\r\n                        ? direction === 'asc'\r\n                          ? 'ascending'\r\n                          : direction === 'desc'\r\n                          ? 'descending'\r\n                          : 'none'\r\n                        : undefined\r\n                    }\r\n                    scope=\"col\"\r\n                  >\r\n                    <div className={styles.headerContent}>\r\n                      <span>{column.title}</span>\r\n                      {column.sortable && sortable && (\r\n                        <span className={styles.sortIndicator} aria-hidden=\"true\">\r\n                          {isSorted ? (direction === 'asc' ? '↑' : '↓') : '↕'}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody className={styles.body}>\r\n            {data.map((record, rowIndex) => {\r\n              const rowKey = getRowKey(record, rowIndex);\r\n              const isSelected = selectedRows.includes(rowKey);\r\n\r\n              return (\r\n                <tr\r\n                  key={rowKey}\r\n                  className={cn(\r\n                    styles.row,\r\n                    rowIndex % 2 === 0 ? styles.rowEven : styles.rowOdd,\r\n                    isSelected && styles.rowSelected\r\n                  )}\r\n                  role=\"row\"\r\n                >\r\n                  {selectionMode !== 'none' && (\r\n                    <td className={cn(styles.cell, styles.selectionCell)}>\r\n                      <input\r\n                        type={selectionMode === 'single' ? 'radio' : 'checkbox'}\r\n                        className={styles.checkbox}\r\n                        name={selectionMode === 'single' ? selectionName : undefined}\r\n                        checked={isSelected}\r\n                        onChange={event => handleRowSelect(rowKey, event.target.checked)}\r\n                        aria-label={`Select row ${rowIndex + 1}`}\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  {visibleColumns.map(column => (\r\n                    <td\r\n                      key={column.key}\r\n                      className={cn(\r\n                        styles.cell,\r\n                        column.align && column.align !== 'left'\r\n                          ? cellAlignClassMap[column.align]\r\n                          : undefined\r\n                      )}\r\n                    >\r\n                      {renderCell(column, record, rowIndex)}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {pagination && (\r\n        <div className={styles.pagination} role=\"navigation\" aria-label=\"Table pagination\">\r\n          <div className={styles.paginationInfo}>\r\n            {pagination.showTotal?.(\r\n              pagination.total,\r\n              [\r\n                (pagination.current - 1) * pagination.pageSize + 1,\r\n                Math.min(pagination.current * pagination.pageSize, pagination.total),\r\n              ]\r\n            )}\r\n          </div>\r\n          <div className={styles.paginationControls}>\r\n            <span>\r\n              Page {pagination.current} of {Math.ceil(pagination.total / pagination.pageSize)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nDynGrid.displayName = 'DynGrid';\r\n\r\nexport { DynGrid };\r\nexport default DynGrid;\r\n","/**\r\n * Input masking hook for DYN UI input components\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\n\r\ninterface MaskOptions {\r\n  mask?: string;\r\n  formatModel?: boolean;\r\n}\r\n\r\n/**\r\n * Hook for input masking functionality\r\n * @param mask - Mask pattern (e.g., \"(##) ####-####\" for phone)\r\n * @param initialValue - Initial value\r\n * @param formatModel - Whether to format the model value\r\n * @returns Masked value, unmasked value, and change handler\r\n */\r\nexport const useDynMask = (\r\n  mask?: string,\r\n  initialValue: string = '',\r\n  formatModel: boolean = false\r\n) => {\r\n  const [maskedValue, setMaskedValue] = useState<string>(\r\n    mask ? applyMask(initialValue, mask) : initialValue\r\n  );\r\n\r\n  const unmaskValue = useCallback((value: string): string => {\r\n    if (!mask) return value;\r\n    return value.replace(/[^0-9a-zA-Z]/g, '');\r\n  }, [mask]);\r\n\r\n  const handleMaskedChange = useCallback((newValue: string): string => {\r\n    if (!mask) return newValue;\r\n    \r\n    const maskedResult = applyMask(newValue, mask);\r\n    setMaskedValue(maskedResult);\r\n    \r\n    return formatModel ? maskedResult : unmaskValue(maskedResult);\r\n  }, [mask, formatModel, unmaskValue]);\r\n\r\n  return {\r\n    maskedValue,\r\n    unmaskValue,\r\n    handleMaskedChange\r\n  };\r\n};\r\n\r\n/**\r\n * Apply mask to a value\r\n * @param value - Input value\r\n * @param mask - Mask pattern\r\n * @returns Masked value\r\n */\r\nfunction applyMask(value: string, mask: string): string {\r\n  if (!mask || !value) return value;\r\n\r\n  const cleanValue = value.replace(/[^0-9a-zA-Z]/g, '');\r\n  let maskedValue = '';\r\n  let valueIndex = 0;\r\n\r\n  for (let i = 0; i < mask.length && valueIndex < cleanValue.length; i++) {\r\n    const maskChar = mask[i];\r\n    \r\n    if (maskChar === '#') {\r\n      // Numeric placeholder\r\n      if (/[0-9]/.test(cleanValue[valueIndex])) {\r\n        maskedValue += cleanValue[valueIndex];\r\n        valueIndex++;\r\n      } else {\r\n        break;\r\n      }\r\n    } else if (maskChar === 'A') {\r\n      // Alpha placeholder\r\n      if (/[a-zA-Z]/.test(cleanValue[valueIndex])) {\r\n        maskedValue += cleanValue[valueIndex];\r\n        valueIndex++;\r\n      } else {\r\n        break;\r\n      }\r\n    } else if (maskChar === '*') {\r\n      // Alphanumeric placeholder\r\n      maskedValue += cleanValue[valueIndex];\r\n      valueIndex++;\r\n    } else {\r\n      // Literal character\r\n      maskedValue += maskChar;\r\n    }\r\n  }\r\n\r\n  return maskedValue;\r\n}\r\n\r\n/**\r\n * Predefined mask patterns\r\n */\r\nexport const MASK_PATTERNS = {\r\n  phone: '(##) ####-####',\r\n  phoneWithCountry: '+## (##) ####-####',\r\n  cpf: '###.###.###-##',\r\n  cnpj: '##.###.###/####-##',\r\n  cep: '#####-###',\r\n  creditCard: '#### #### #### ####',\r\n  date: '##/##/####',\r\n  time: '##:##',\r\n  currency: '###.###.###,##'\r\n} as const;\r\n\r\n/**\r\n * Get mask pattern by type\r\n * @param type - Mask type\r\n * @returns Mask pattern\r\n */\r\nexport const getMaskPattern = (type: keyof typeof MASK_PATTERNS): string => {\r\n  return MASK_PATTERNS[type];\r\n};","/**\r\n * DynInput - Advanced input component with validation and masking\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback\r\n} from 'react';\r\nimport styles from './DynInput.module.css';\r\nimport { cn } from '../../utils/classNames';\r\n\r\nimport type {\r\n  DynInputProps,\r\n  DynInputRef,\r\n  CurrencyInputConfig,\r\n} from './DynInput.types';\r\nimport type { ValidationRule } from '../../types/field.types';\r\nimport type { DynCurrencyConfig } from '../../utils/dynFormatters';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { useDynMask } from '../../hooks/useDynMask';\r\nimport { DynIcon } from '../DynIcon';\r\n// NOTE: DynInput implements its own formatting helpers; do not import formatCurrencyValue\r\n// from utils to avoid name collision with local implementations.\r\n\r\ninterface ResolvedCurrencyConfig {\r\n  currencyCode: string;\r\n  precision: number;\r\n  thousandSeparator: string;\r\n  decimalSeparator: string;\r\n  showSymbol: boolean;\r\n  symbol: string;\r\n  symbolPosition: 'prefix' | 'suffix';\r\n  autoFormat: boolean;\r\n  symbolSpacing: string;\r\n}\r\n\r\nconst DEFAULT_CURRENCY_CODE = 'BRL';\r\nconst DEFAULT_PRECISION = 2;\r\n\r\nconst getStyleClass = (className: string): string => styles[className] ?? className;\r\n\r\nexport const DynInput = forwardRef<DynInputRef, DynInputProps>(\r\n  (\r\n    {\r\n      name,\r\n      id,\r\n      label,\r\n      help,\r\n      helpText,\r\n      placeholder,\r\n      disabled = false,\r\n      readOnly,\r\n      readonly,\r\n      required = false,\r\n      optional = false,\r\n      visible = true,\r\n      value: propValue = '',\r\n      showSpinButtons = false,\r\n      errorMessage,\r\n      validation,\r\n      validationRules,\r\n      className,\r\n      type = 'text',\r\n      size = 'medium',\r\n      maxLength,\r\n      minLength,\r\n      mask,\r\n      maskFormatModel = false,\r\n      pattern,\r\n      icon,\r\n      showClearButton,\r\n      showCleanButton,\r\n      step,\r\n      min,\r\n      max,\r\n      currencyConfig,\r\n      onChange,\r\n      onBlur,\r\n      onFocus,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const { ['aria-describedby']: ariaDescribedBy, ...restProps } = rest;\r\n    const isCurrencyType = type === 'currency';\r\n    const resolvedCurrencyConfig = useMemo(\r\n      () => resolveCurrencyConfig(currencyConfig, type),\r\n      [currencyConfig, type]\r\n    );\r\n\r\n    const [inputValue, setInputValue] = useState<string>(() =>\r\n      initializeInputValue(propValue, type, resolvedCurrencyConfig)\r\n    );\r\n    const [focused, setFocused] = useState(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    // generate stable id for the input when not provided\r\n    const generatedIdRef = useRef<string>(`dyn-input-${Math.random().toString(36).slice(2, 9)}`);\r\n    const inputId = id ?? name ?? generatedIdRef.current;\r\n    const isReadOnly = Boolean(readOnly ?? readonly);\r\n    const fieldHelpText = helpText ?? help;\r\n    const shouldShowClearButton = Boolean(showClearButton ?? showCleanButton);\r\n\r\n    const normalizedValidationRules = useMemo<ValidationRule[] | undefined>(() => {\r\n      const collected: ValidationRule[] = [];\r\n\r\n      const pushRules = (rules?: DynInputProps['validation']) => {\r\n        if (!rules) {\r\n          return;\r\n        }\r\n\r\n        if (Array.isArray(rules)) {\r\n          collected.push(...rules);\r\n        } else {\r\n          collected.push(rules);\r\n        }\r\n      };\r\n\r\n      pushRules(validation);\r\n      if (validationRules?.length) {\r\n        collected.push(...validationRules);\r\n      }\r\n\r\n      return collected.length > 0 ? collected : undefined;\r\n    }, [validation, validationRules]);\r\n\r\n    const { error, validate, clearError: clearValidationError } = useDynFieldValidation({\r\n      value: inputValue,\r\n      required,\r\n      validation: normalizedValidationRules,\r\n      customError: errorMessage\r\n    });\r\n\r\n    const resolvedMaskPattern = typeof mask === 'string' ? mask : mask?.pattern;\r\n    const resolvedMaskFormatModel =\r\n      typeof mask === 'object' && mask !== null\r\n        ? mask.formatModel ?? maskFormatModel\r\n        : maskFormatModel;\r\n\r\n    const { maskedValue, unmaskValue, handleMaskedChange } = useDynMask(\r\n      resolvedMaskPattern,\r\n      inputValue,\r\n      resolvedMaskFormatModel\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      focus: () => inputRef.current?.focus(),\r\n      blur: () => inputRef.current?.blur(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setInputValue('');\r\n        onChange?.('');\r\n        clearValidationError();\r\n      },\r\n      clearError: () => {\r\n        clearValidationError();\r\n      },\r\n      getValue: () => {\r\n        if (isCurrencyType) {\r\n          const numericValue = parseCurrencyLikeValue(inputValue, resolvedCurrencyConfig);\r\n          return numericValue ?? '';\r\n        }\r\n        return mask && !maskFormatModel ? unmaskValue(inputValue) : inputValue;\r\n      },\r\n      setValue: (newValue: string | number | null | undefined) => {\r\n        if (isCurrencyType) {\r\n          const numericValue = parseCurrencyLikeValue(newValue, resolvedCurrencyConfig);\r\n          if (numericValue == null) {\r\n            setInputValue('');\r\n            onChange?.('');\r\n            return;\r\n          }\r\n\r\n          const normalizedValue = roundToPrecision(numericValue, resolvedCurrencyConfig.precision);\r\n          const formattedValue = resolvedCurrencyConfig.autoFormat\r\n            ? formatCurrencyValue(normalizedValue, { ...resolvedCurrencyConfig, showSymbol: false })\r\n            : formatPlainCurrencyValue(normalizedValue, resolvedCurrencyConfig);\r\n\r\n          setInputValue(formattedValue);\r\n          onChange?.(normalizedValue);\r\n          return;\r\n        }\r\n\r\n        const stringValue = newValue == null ? '' : String(newValue);\r\n        setInputValue(stringValue);\r\n        onChange?.(stringValue);\r\n      },\r\n      getElement: () => inputRef.current\r\n    }));\r\n\r\n    const mergedCurrencyConfig = useMemo<Required<DynCurrencyConfig> & {\r\n      showCurrencyCode: boolean;\r\n    }>(() => {\r\n      const defaultConfig: Required<DynCurrencyConfig> & {\r\n        showCurrencyCode: boolean;\r\n      } = {\r\n        symbol: 'R$',\r\n        currencyCode: 'BRL',\r\n        showCurrencyCode: false,\r\n        precision: 2,\r\n        decimalSeparator: ',',\r\n        thousandSeparator: '.'\r\n      };\r\n\r\n      return {\r\n        ...defaultConfig,\r\n        ...(currencyConfig ?? {})\r\n      };\r\n    }, [currencyConfig]);\r\n\r\n    const sanitizeCurrencyValue = useCallback(\r\n      (rawValue: string | number | null | undefined) => {\r\n        if (rawValue == null || rawValue === '') {\r\n          return '';\r\n        }\r\n\r\n        const valueAsString = String(rawValue);\r\n        const { decimalSeparator, thousandSeparator, symbol, currencyCode } =\r\n          mergedCurrencyConfig;\r\n\r\n        let sanitized = valueAsString.replace(/\\s/g, '');\r\n\r\n        if (symbol) {\r\n          sanitized = sanitized.replace(new RegExp(escapeRegExp(symbol), 'g'), '');\r\n        }\r\n\r\n        if (currencyCode) {\r\n          sanitized = sanitized.replace(new RegExp(escapeRegExp(currencyCode), 'gi'), '');\r\n        }\r\n\r\n        const allowedSeparator = decimalSeparator ?? '.';\r\n        sanitized = sanitized.replace(\r\n          new RegExp(`[^0-9${escapeRegExp(allowedSeparator)}\\\\.\\\\-]`, 'g'),\r\n          ''\r\n        );\r\n\r\n        const dotMatches = sanitized.match(/\\./g) ?? [];\r\n        let decimalMarker: string | null = null;\r\n\r\n        if (sanitized.includes(allowedSeparator)) {\r\n          decimalMarker = allowedSeparator;\r\n        } else if (sanitized.includes('.')) {\r\n          const digitsAfterLastDot = sanitized.length - sanitized.lastIndexOf('.') - 1;\r\n          if (\r\n            thousandSeparator === '.' &&\r\n            (dotMatches.length > 1 || digitsAfterLastDot === 3)\r\n          ) {\r\n            decimalMarker = null;\r\n          } else {\r\n            decimalMarker = '.';\r\n          }\r\n        }\r\n\r\n        if (thousandSeparator && thousandSeparator !== decimalMarker) {\r\n          sanitized = sanitized.replace(new RegExp(escapeRegExp(thousandSeparator), 'g'), '');\r\n        }\r\n\r\n        if (decimalMarker) {\r\n          const escapedDecimal = escapeRegExp(decimalMarker);\r\n          const lastDecimalIndex = sanitized.lastIndexOf(decimalMarker);\r\n          if (lastDecimalIndex !== -1) {\r\n            const before = sanitized\r\n              .slice(0, lastDecimalIndex)\r\n              .replace(new RegExp(escapedDecimal, 'g'), '')\r\n              .replace(/\\./g, '');\r\n            const after = sanitized\r\n              .slice(lastDecimalIndex + 1)\r\n              .replace(new RegExp(escapedDecimal, 'g'), '')\r\n              .replace(/\\./g, '');\r\n            sanitized = `${before}.${after}`;\r\n          }\r\n        }\r\n\r\n        sanitized = sanitized.replace(/[^0-9.\\-]/g, '');\r\n\r\n        const minusIndex = sanitized.indexOf('-');\r\n        if (minusIndex > 0) {\r\n          sanitized = sanitized.replace(/-/g, '');\r\n        } else if (minusIndex === 0) {\r\n          sanitized = `-${sanitized.slice(1).replace(/-/g, '')}`;\r\n        } else {\r\n          sanitized = sanitized.replace(/-/g, '');\r\n        }\r\n\r\n        if (sanitized.split('.').length > 2) {\r\n          const [integerPart, ...decimalParts] = sanitized.split('.');\r\n          sanitized = `${integerPart}.${decimalParts.join('')}`;\r\n        }\r\n\r\n        return sanitized;\r\n      },\r\n      [mergedCurrencyConfig]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (isCurrencyType) {\r\n        const formattedValue = initializeInputValue(propValue, type, resolvedCurrencyConfig);\r\n        setInputValue(formattedValue);\r\n      } else {\r\n        const stringValue = propValue == null ? '' : String(propValue);\r\n        setInputValue(stringValue);\r\n      }\r\n    }, [propValue, isCurrencyType, type, resolvedCurrencyConfig]);\r\n\r\n    const handleCurrencyChange = (rawValue: string) => {\r\n      processCurrencyChange(rawValue, resolvedCurrencyConfig, setInputValue, onChange);\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const newValue = e.target.value;\r\n\r\n      if (mask) {\r\n        const processedValue = handleMaskedChange(newValue);\r\n        setInputValue(processedValue);\r\n        onChange?.(maskFormatModel ? processedValue : unmaskValue(processedValue));\r\n      } else if (isCurrencyType) {\r\n        handleCurrencyChange(newValue);\r\n      } else {\r\n        setInputValue(newValue);\r\n\r\n        if (type === 'number') {\r\n          if (newValue === '' || newValue === '-' || newValue === '.') {\r\n            onChange?.('');\r\n          } else {\r\n            const numericValue = Number(newValue);\r\n            onChange?.(Number.isNaN(numericValue) ? newValue : numericValue);\r\n          }\r\n        } else {\r\n          onChange?.(newValue);\r\n        }\r\n      }\r\n\r\n      clearValidationError();\r\n    };\r\n\r\n    const handleStepChange = useCallback(\r\n      (direction: 1 | -1) => {\r\n        if (disabled || isReadOnly) return;\r\n\r\n        const stepValue = step ?? 1;\r\n        const currentNumeric = type === 'currency'\r\n          ? (parseCurrencyLikeValue(inputValue, resolvedCurrencyConfig) ?? 0)\r\n          : Number(inputValue || 0);\r\n\r\n        const baseValue = Number.isNaN(currentNumeric) ? 0 : currentNumeric;\r\n        let nextValue = baseValue + direction * stepValue;\r\n\r\n        if (typeof min === 'number') {\r\n          nextValue = Math.max(nextValue, min);\r\n        }\r\n\r\n        if (typeof max === 'number') {\r\n          nextValue = Math.min(nextValue, max);\r\n        }\r\n\r\n        const nextValueString = String(nextValue);\r\n\r\n        if (type === 'currency') {\r\n          const normalizedNext = roundToPrecision(nextValue, resolvedCurrencyConfig.precision);\r\n          const formatted = resolvedCurrencyConfig.autoFormat\r\n            ? formatCurrencyValue(normalizedNext, { ...resolvedCurrencyConfig, showSymbol: false })\r\n            : formatPlainCurrencyValue(normalizedNext, resolvedCurrencyConfig);\r\n          setInputValue(formatted);\r\n          onChange?.(normalizedNext);\r\n        } else {\r\n          setInputValue(nextValueString);\r\n          onChange?.(type === 'number' ? nextValue : nextValueString);\r\n        }\r\n\r\n        clearValidationError();\r\n      },\r\n      [\r\n        clearValidationError,\r\n        disabled,\r\n        inputValue,\r\n        isReadOnly,\r\n        max,\r\n        min,\r\n        onChange,\r\n        resolvedCurrencyConfig,\r\n        step,\r\n        type\r\n      ]\r\n    );\r\n\r\n    const handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(false);\r\n      validate();\r\n      onBlur?.(event);\r\n    };\r\n\r\n    const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n      setFocused(true);\r\n      clearValidationError();\r\n      onFocus?.(event);\r\n    };\r\n\r\n    const handleClean = () => {\r\n      setInputValue('');\r\n      onChange?.('');\r\n      clearValidationError();\r\n      inputRef.current?.focus();\r\n    };\r\n\r\n    if (!visible) return null;\r\n\r\n    const showSpin = showSpinButtons && (type === 'number' || type === 'currency');\r\n\r\n    const inputClasses = cn(\r\n      getStyleClass('dyn-input'),\r\n      getStyleClass(`dyn-input--${size}`),\r\n      focused && getStyleClass('dyn-input--focused'),\r\n      !!error && getStyleClass('dyn-input--error'),\r\n      disabled && getStyleClass('dyn-input--disabled'),\r\n      isReadOnly && getStyleClass('dyn-input--readonly'),\r\n      !!icon && getStyleClass('dyn-input--with-icon'),\r\n      !!(shouldShowClearButton && inputValue && !isReadOnly && !disabled) &&\r\n        getStyleClass('dyn-input--cleanable')\r\n    );\r\n\r\n    const displayValue = mask ? maskedValue : inputValue;\r\n\r\n    const containerDivClass = cn(\r\n      getStyleClass('dyn-input-container'),\r\n      className,\r\n      type === 'currency' && getStyleClass('dyn-input-container--currency'),\r\n      showSpin && getStyleClass('dyn-input-container--with-spin-buttons')\r\n    );\r\n\r\n    const errorId = `${inputId}-error`;\r\n    const helpId = `${inputId}-help`;\r\n    const describedBy = [\r\n      ariaDescribedBy,\r\n      help ? helpId : undefined,\r\n      error ? errorId : undefined\r\n    ]\r\n      .filter(Boolean)\r\n      .join(' ') || undefined;\r\n\r\n    return (\r\n      <DynFieldContainer\r\n        label={label}\r\n        helpText={fieldHelpText}\r\n        required={required}\r\n        optional={optional}\r\n        errorText={error}\r\n        className={className}\r\n        htmlFor={inputId}\r\n        id={id}\r\n      >\r\n        <div className={containerDivClass}>\r\n          {type === 'currency' && resolvedCurrencyConfig.symbol && (\r\n            <span className={getStyleClass('dyn-input-currency-symbol')} aria-hidden=\"true\">\r\n              {resolvedCurrencyConfig.symbol}\r\n            </span>\r\n          )}\r\n\r\n          {icon && (\r\n            <div className={getStyleClass('dyn-input-icon-container')}>\r\n              <DynIcon icon={icon} />\r\n            </div>\r\n          )}\r\n\r\n          <input\r\n            ref={inputRef}\r\n            id={inputId}\r\n            name={name}\r\n            type={type === 'number' || isCurrencyType ? 'text' : type}\r\n            className={inputClasses}\r\n            placeholder={placeholder}\r\n            value={displayValue}\r\n            disabled={disabled}\r\n            readOnly={isReadOnly}\r\n            required={required}\r\n            aria-required={required}\r\n            aria-disabled={disabled}\r\n            maxLength={maxLength}\r\n            minLength={minLength}\r\n            pattern={pattern}\r\n            step={type === 'number' ? step : undefined}\r\n            min={type === 'number' ? min : undefined}\r\n            max={type === 'number' ? max : undefined}\r\n            inputMode={type === 'number' || isCurrencyType ? 'decimal' : undefined}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            onFocus={handleFocus}\r\n            aria-invalid={!!error}\r\n            aria-describedby={describedBy}\r\n            {...restProps}\r\n          />\r\n\r\n          {shouldShowClearButton && inputValue && !isReadOnly && !disabled && (\r\n            <button\r\n              type=\"button\"\r\n              className={getStyleClass('dyn-input-clean-button')}\r\n              onClick={handleClean}\r\n              tabIndex={-1}\r\n              aria-label=\"Limpar campo\"\r\n            >\r\n              <DynIcon icon=\"dyn-icon-close\" />\r\n            </button>\r\n          )}\r\n\r\n          {showSpin && (\r\n            <div\r\n              className={getStyleClass('dyn-input-spin-buttons')}\r\n              aria-hidden={disabled || isReadOnly}\r\n            >\r\n              <button\r\n                type=\"button\"\r\n                className={cn(\r\n                  getStyleClass('dyn-input-spin-button'),\r\n                  getStyleClass('dyn-input-spin-button--increment')\r\n                )}\r\n                onClick={() => handleStepChange(1)}\r\n                tabIndex={-1}\r\n                aria-label=\"Increase value\"\r\n                disabled={disabled || isReadOnly}\r\n              >\r\n                ▲\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={cn(\r\n                  getStyleClass('dyn-input-spin-button'),\r\n                  getStyleClass('dyn-input-spin-button--decrement')\r\n                )}\r\n                onClick={() => handleStepChange(-1)}\r\n                tabIndex={-1}\r\n                aria-label=\"Decrease value\"\r\n                disabled={disabled || isReadOnly}\r\n              >\r\n                ▼\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DynFieldContainer>\r\n    );\r\n  }\r\n);\r\n\r\nDynInput.displayName = 'DynInput';\r\n\r\nexport default DynInput;\r\n\r\nfunction resolveCurrencyConfig(\r\n  config: CurrencyInputConfig | undefined,\r\n  type: DynInputProps['type']\r\n): ResolvedCurrencyConfig {\r\n  const precision = Math.max(0, config?.precision ?? DEFAULT_PRECISION);\r\n  const currencyCode = config?.currencyCode ?? DEFAULT_CURRENCY_CODE;\r\n\r\n  if (type !== 'currency') {\r\n    return {\r\n      currencyCode,\r\n      precision,\r\n      thousandSeparator: config?.thousandSeparator ?? ',',\r\n      decimalSeparator: config?.decimalSeparator ?? '.',\r\n      showSymbol: config?.showSymbol ?? true,\r\n      symbol: config?.symbol ?? currencyCode,\r\n      symbolPosition: config?.symbolPosition ?? 'prefix',\r\n      autoFormat: config?.autoFormat ?? true,\r\n      symbolSpacing: ' '\r\n    };\r\n  }\r\n\r\n  const defaults = deriveCurrencyDefaults(currencyCode, precision);\r\n\r\n  return {\r\n    currencyCode,\r\n    precision,\r\n    thousandSeparator: config?.thousandSeparator ?? defaults.group,\r\n    decimalSeparator: config?.decimalSeparator ?? defaults.decimal,\r\n    showSymbol: config?.showSymbol ?? true,\r\n    symbol: config?.symbol ?? defaults.symbol,\r\n    symbolPosition: config?.symbolPosition ?? 'prefix',\r\n    autoFormat: config?.autoFormat ?? true,\r\n    symbolSpacing: defaults.spacing\r\n  };\r\n}\r\n\r\nfunction initializeInputValue(\r\n  value: string | number,\r\n  type: DynInputProps['type'],\r\n  config: ResolvedCurrencyConfig\r\n): string {\r\n  if (type === 'currency') {\r\n    const numericValue = parseCurrencyLikeValue(value, config);\r\n    if (numericValue == null) {\r\n      return typeof value === 'string' ? value : '';\r\n    }\r\n\r\n    const normalizedValue = roundToPrecision(numericValue, config.precision);\r\n    // Input should not include the currency symbol (it's rendered separately)\r\n    return config.autoFormat\r\n      ? formatCurrencyValue(normalizedValue, { ...config, showSymbol: false })\r\n      : formatPlainCurrencyValue(normalizedValue, config);\r\n  }\r\n\r\n  if (value == null) return '';\r\n  return typeof value === 'string' ? value : String(value);\r\n}\r\n\r\nfunction parseCurrencyLikeValue(\r\n  value: unknown,\r\n  config: ResolvedCurrencyConfig\r\n): number | null {\r\n  if (value == null || value === '') {\r\n    return null;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return Number.isFinite(value) ? value : null;\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    const sanitized = sanitizeCurrencyInput(value, config);\r\n    if (!/[0-9]/.test(sanitized)) {\r\n      return null;\r\n    }\r\n\r\n    const numericValue = Number(sanitized);\r\n    return Number.isNaN(numericValue) ? null : numericValue;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nfunction processCurrencyChange(\r\n  rawValue: string,\r\n  config: ResolvedCurrencyConfig,\r\n  setValue: (value: string) => void,\r\n  notifyChange?: DynInputProps['onChange']\r\n) {\r\n  const sanitizedValue = sanitizeCurrencyInput(rawValue, config);\r\n\r\n  if (!/[0-9]/.test(sanitizedValue)) {\r\n    setValue(rawValue);\r\n    notifyChange?.('');\r\n    return;\r\n  }\r\n\r\n  const numericValue = Number(sanitizedValue);\r\n\r\n  if (Number.isNaN(numericValue)) {\r\n    setValue(rawValue);\r\n    notifyChange?.(sanitizedValue);\r\n    return;\r\n  }\r\n\r\n  const normalizedValue = roundToPrecision(numericValue, config.precision);\r\n  const formattedValue = config.autoFormat\r\n    ? formatCurrencyValue(normalizedValue, { ...config, showSymbol: false })\r\n    : formatPlainCurrencyValue(normalizedValue, config);\r\n\r\n  setValue(formattedValue);\r\n  notifyChange?.(normalizedValue);\r\n}\r\n\r\nfunction roundToPrecision(value: number, precision: number): number {\r\n  if (!Number.isFinite(value)) return value;\r\n  return Number(value.toFixed(precision));\r\n}\r\n\r\nfunction formatCurrencyValue(value: number, config: ResolvedCurrencyConfig): string {\r\n  const {\r\n    precision,\r\n    thousandSeparator,\r\n    decimalSeparator,\r\n    showSymbol,\r\n    symbol,\r\n    symbolPosition,\r\n    symbolSpacing,\r\n    currencyCode\r\n  } = config;\r\n\r\n  const absoluteValue = Math.abs(value);\r\n  const [integerPartRaw, fractionalPartRaw = ''] = absoluteValue\r\n    .toFixed(precision)\r\n    .split('.');\r\n\r\n  const groupedInteger =\r\n    thousandSeparator && thousandSeparator.length > 0\r\n      ? integerPartRaw.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandSeparator)\r\n      : integerPartRaw;\r\n\r\n  let formatted = groupedInteger;\r\n  if (precision > 0) {\r\n    formatted += `${decimalSeparator}${fractionalPartRaw}`;\r\n  }\r\n\r\n  if (showSymbol) {\r\n    const symbolValue = symbol || currencyCode;\r\n    const spacing = symbolSpacing ?? '';\r\n\r\n    if (symbolPosition === 'suffix') {\r\n      formatted = `${formatted}${spacing}${symbolValue}`;\r\n    } else {\r\n      formatted = `${symbolValue}${spacing}${formatted}`;\r\n    }\r\n  }\r\n\r\n  if (value < 0) {\r\n    formatted = `-${formatted}`;\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\nfunction formatPlainCurrencyValue(value: number, config: ResolvedCurrencyConfig): string {\r\n  const { precision, decimalSeparator } = config;\r\n  const absoluteValue = Math.abs(value);\r\n  const [integerPart, fractionalPart = ''] = absoluteValue.toFixed(precision).split('.');\r\n\r\n  let formatted = integerPart;\r\n  if (precision > 0) {\r\n    formatted += `${decimalSeparator}${fractionalPart}`;\r\n  }\r\n\r\n  if (value < 0) {\r\n    formatted = `-${formatted}`;\r\n  }\r\n\r\n  return formatted;\r\n}\r\n\r\nfunction sanitizeCurrencyInput(value: string, config: ResolvedCurrencyConfig): string {\r\n  if (!value) return '';\r\n\r\n  let normalized = value;\r\n\r\n  if (config.thousandSeparator) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.thousandSeparator), 'g'), '');\r\n  }\r\n\r\n  if (config.symbolSpacing) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.symbolSpacing), 'g'), '');\r\n  }\r\n\r\n  if (config.symbol) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.symbol), 'g'), '');\r\n  }\r\n\r\n  if (config.currencyCode) {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.currencyCode), 'gi'), '');\r\n  }\r\n\r\n  normalized = normalized.replace(/\\s+/g, '');\r\n\r\n  if (config.decimalSeparator && config.decimalSeparator !== '.') {\r\n    normalized = normalized.replace(new RegExp(escapeRegExp(config.decimalSeparator), 'g'), '.');\r\n  }\r\n\r\n  normalized = normalized.replace(/[^0-9.-]/g, '');\r\n\r\n  const hasNegative = normalized.includes('-');\r\n  normalized = normalized.replace(/-/g, '');\r\n  if (hasNegative) {\r\n    normalized = normalized.length > 0 ? `-${normalized}` : '-';\r\n  }\r\n\r\n  const firstDecimalIndex = normalized.indexOf('.');\r\n  if (firstDecimalIndex !== -1) {\r\n    const before = normalized.slice(0, firstDecimalIndex + 1);\r\n    const after = normalized.slice(firstDecimalIndex + 1).replace(/\\./g, '');\r\n    normalized = before + after;\r\n  }\r\n\r\n  return normalized;\r\n}\r\n\r\nfunction deriveCurrencyDefaults(currencyCode: string, precision: number) {\r\n  try {\r\n    const formatter = new Intl.NumberFormat(undefined, {\r\n      style: 'currency',\r\n      currency: currencyCode,\r\n      minimumFractionDigits: precision,\r\n      maximumFractionDigits: precision\r\n    });\r\n    const parts = formatter.formatToParts(1234567.89);\r\n    const group = parts.find((part) => part.type === 'group')?.value ?? ',';\r\n    const decimal = parts.find((part) => part.type === 'decimal')?.value ?? '.';\r\n    const symbol = parts.find((part) => part.type === 'currency')?.value ?? currencyCode;\r\n\r\n    let spacing = '';\r\n    const currencyIndex = parts.findIndex((part) => part.type === 'currency');\r\n    if (currencyIndex !== -1) {\r\n      const nextPart = parts[currencyIndex + 1];\r\n      const previousPart = parts[currencyIndex - 1];\r\n      if (nextPart?.type === 'literal') {\r\n        spacing = nextPart.value;\r\n      } else if (previousPart?.type === 'literal') {\r\n        spacing = previousPart.value;\r\n      }\r\n    }\r\n\r\n    return { group, decimal, symbol, spacing };\r\n  } catch (error) {\r\n    return { group: ',', decimal: '.', symbol: currencyCode, spacing: ' ' };\r\n  }\r\n}\r\n\r\nfunction escapeRegExp(value: string): string {\r\n  return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\n","import type { TextareaHTMLAttributes } from 'react';\r\nimport type { DynFieldBase, DynFieldRef } from '../../types/field.types';\r\n\r\nexport type DynTextAreaResize = 'none' | 'vertical' | 'horizontal' | 'both';\r\n\r\nexport interface DynTextAreaProps\r\n  extends DynFieldBase,\r\n    Omit<\r\n      TextareaHTMLAttributes<HTMLTextAreaElement>,\r\n      | 'value'\r\n      | 'defaultValue'\r\n      | 'onChange'\r\n      | 'onBlur'\r\n      | 'onFocus'\r\n      | 'rows'\r\n      | 'cols'\r\n      | keyof DynFieldBase\r\n    > {\r\n  /** Number of visible text lines */\r\n  rows?: number;\r\n  /** Number of visible columns */\r\n  cols?: number;\r\n  /** Controls the resize behavior of the textarea */\r\n  resize?: DynTextAreaResize;\r\n  /** Controlled value for the textarea */\r\n  value?: string;\r\n  /** Change handler returning the textarea value */\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nexport type DynTextAreaRef = DynFieldRef;\r\n\r\nexport interface DynTextAreaDefaultProps {\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  required: boolean;\r\n  optional: boolean;\r\n  visible: boolean;\r\n  value: string;\r\n  resize: DynTextAreaResize;\r\n  rows: number;\r\n  'data-testid': string;\r\n}\r\n\r\nexport const DYN_TEXT_AREA_DEFAULT_PROPS: DynTextAreaDefaultProps = {\r\n  disabled: false,\r\n  readonly: false,\r\n  required: false,\r\n  optional: false,\r\n  visible: true,\r\n  value: '',\r\n  resize: 'vertical',\r\n  rows: 4,\r\n  'data-testid': 'dyn-textarea',\r\n};\r\n","import {\r\n  forwardRef,\r\n  useEffect,\r\n  useId,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport type { ChangeEvent, ForwardedRef } from 'react';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport type { DynFieldContainerProps } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { cn } from '../../utils/classNames';\r\nimport type { DynTextAreaProps, DynTextAreaRef } from './DynTextArea.types';\r\nimport { DYN_TEXT_AREA_DEFAULT_PROPS } from './DynTextArea.types';\r\nimport styles from './DynTextArea.module.css';\r\n\r\nconst DynTextAreaComponent = (\r\n  {\r\n    name,\r\n    id,\r\n    label,\r\n    help,\r\n    placeholder,\r\n    disabled = DYN_TEXT_AREA_DEFAULT_PROPS.disabled,\r\n    readonly = DYN_TEXT_AREA_DEFAULT_PROPS.readonly,\r\n    required = DYN_TEXT_AREA_DEFAULT_PROPS.required,\r\n    optional = DYN_TEXT_AREA_DEFAULT_PROPS.optional,\r\n    visible = DYN_TEXT_AREA_DEFAULT_PROPS.visible,\r\n    value: valueProp = DYN_TEXT_AREA_DEFAULT_PROPS.value,\r\n    errorMessage,\r\n    validation,\r\n    className,\r\n    resize = DYN_TEXT_AREA_DEFAULT_PROPS.resize,\r\n    rows = DYN_TEXT_AREA_DEFAULT_PROPS.rows,\r\n    cols,\r\n    onChange,\r\n    onBlur,\r\n    onFocus,\r\n    'data-testid': dataTestId = DYN_TEXT_AREA_DEFAULT_PROPS['data-testid'],\r\n    ...rest\r\n  }: DynTextAreaProps,\r\n  ref: ForwardedRef<DynTextAreaRef>\r\n) => {\r\n  const [value, setValue] = useState<string>(valueProp ?? '');\r\n  const [focused, setFocused] = useState(false);\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const fallbackId = useId();\r\n  const fieldId = id ?? name ?? `${fallbackId}-textarea`;\r\n\r\n  const { error, validate, clearError } = useDynFieldValidation({\r\n    value,\r\n    required,\r\n    validation,\r\n    customError: errorMessage,\r\n  });\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => ({\r\n      focus: () => textareaRef.current?.focus(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setValue('');\r\n        onChange?.('');\r\n        clearError();\r\n      },\r\n      getValue: () => value,\r\n      setValue: (newValue: unknown) => {\r\n        const stringValue = String(newValue ?? '');\r\n        setValue(stringValue);\r\n        onChange?.(stringValue);\r\n      },\r\n    }),\r\n    [clearError, onChange, validate, value]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setValue(valueProp ?? '');\r\n  }, [valueProp]);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  const resolvedError = errorMessage ?? (error || undefined);\r\n  const describedById = resolvedError\r\n    ? `${fieldId}-error`\r\n    : help\r\n      ? `${fieldId}-help`\r\n      : undefined;\r\n\r\n  const textareaClasses = cn(\r\n    styles.textarea,\r\n    focused && styles.textareaFocused,\r\n    resolvedError && styles.textareaError,\r\n    disabled && styles.textareaDisabled,\r\n    readonly && styles.textareaReadonly,\r\n    resize === 'none' && styles.textareaResizeNone,\r\n    resize === 'horizontal' && styles.textareaResizeHorizontal,\r\n    resize === 'both' && styles.textareaResizeBoth\r\n  );\r\n\r\n  const containerClasses = cn(styles.container, className);\r\n\r\n  const fieldContainerProps: Omit<DynFieldContainerProps, 'children'> = {\r\n    label,\r\n    required,\r\n    optional,\r\n    helpText: help,\r\n    errorText: resolvedError,\r\n    className: containerClasses,\r\n    htmlFor: fieldId,\r\n    id,\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newValue = event.target.value;\r\n\r\n    if (disabled || readonly) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    setValue(newValue);\r\n    onChange?.(newValue);\r\n    clearError();\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    if (disabled) {\r\n      return;\r\n    }\r\n\r\n    setFocused(true);\r\n    clearError();\r\n    onFocus?.();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setFocused(false);\r\n    void validate();\r\n    onBlur?.();\r\n  };\r\n\r\n  return (\r\n    <DynFieldContainer {...fieldContainerProps}>\r\n      <textarea\r\n        {...rest}\r\n        ref={textareaRef}\r\n        id={fieldId}\r\n        name={name}\r\n        className={textareaClasses}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        disabled={disabled}\r\n        readOnly={readonly}\r\n        required={required}\r\n        rows={rows}\r\n        cols={cols}\r\n        onChange={handleChange}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        aria-invalid={Boolean(resolvedError)}\r\n        aria-required={required || undefined}\r\n        aria-describedby={describedById}\r\n        data-testid={dataTestId}\r\n      />\r\n    </DynFieldContainer>\r\n  );\r\n};\r\n\r\nconst DynTextArea = forwardRef<DynTextAreaRef, DynTextAreaProps>(DynTextAreaComponent);\r\n\r\nDynTextArea.displayName = 'DynTextArea';\r\n\r\nexport { DynTextArea };\r\nexport default DynTextArea;\r\n","import * as React from 'react';\r\nimport { DynLabelProps } from '../../types/label.types';\r\nimport styles from './DynLabel.module.css';\r\n\r\n// Lightweight replacement for the 'classnames' package to avoid adding an external dependency.\r\nconst classNames = (...args: Array<string | false | null | undefined>) =>\r\n  args.filter(Boolean).join(' ');\r\n\r\nexport const DynLabel: React.FC<DynLabelProps> = ({\r\n  children,\r\n  htmlFor,\r\n  disabled = false,\r\n  required = false,\r\n  optional = false,\r\n  helpText,\r\n  className,\r\n  ...restProps\r\n}: DynLabelProps) => {\r\n  const labelClasses = classNames(\r\n    styles['dyn-label'],\r\n    disabled && styles['dyn-label--disabled'],\r\n    (required || optional) && styles['dyn-label--with-requirement'],\r\n    className\r\n  );\r\n\r\n  const renderRequirementIndicator = () => {\r\n    if (required) {\r\n      return (\r\n        <span className={`${styles['dyn-label-requirement']} ${styles['dyn-label--required']}`}>\r\n          <span className={styles['dyn-label-required-asterisk']} aria-hidden=\"true\">*</span>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    if (optional) {\r\n      return (\r\n        <span \r\n          className={`${styles['dyn-label-requirement']} ${styles['dyn-label--optional']}`}\r\n          data-testid=\"optional-indicator\"\r\n        >\r\n          <span className={styles['dyn-label-optional-text']}>(optional)</span>\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderHelpText = () => {\r\n    if (!helpText) return null;\r\n\r\n    return (\r\n      <span className={styles['dyn-label-help-text']} id={htmlFor ? `${htmlFor}-help` : undefined}>\r\n        {helpText}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  // Use React.createElement for dynamic element type to avoid ESBuild JSX parsing issues\r\n  const elementProps = {\r\n    className: labelClasses,\r\n    ...(htmlFor && { htmlFor }),\r\n    ...(helpText && htmlFor && { 'aria-describedby': `${htmlFor}-help` }),\r\n    ...restProps\r\n  };\r\n\r\n  const labelContent = (\r\n    <span className={styles['dyn-label-text']}>\r\n      {children}\r\n      {renderRequirementIndicator()}\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div className={styles['dyn-label-container']} role=\"group\">\r\n      {htmlFor ? (\r\n        <label {...elementProps}>\r\n          {labelContent}\r\n        </label>\r\n      ) : (\r\n        <span {...elementProps}>\r\n          {labelContent}\r\n        </span>\r\n      )}\r\n      {renderHelpText()}\r\n    </div>\r\n  );\r\n};\r\n\r\nDynLabel.displayName = 'DynLabel';\r\n\r\n// Add default export\r\nexport default DynLabel;","import React, { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport styles from './DynListView.module.css';\r\nimport type { DynListViewProps, DynListViewRef, ListViewItem, ListAction } from './DynListView.types';\r\n\r\nconst getStyleClass = (n: string) => (styles as Record<string, string>)[n] || '';\r\n\r\nconst getActionButtonVariantClass = (type?: ListAction['type']) => {\r\n  const normalized = (type ?? 'default').toLowerCase();\r\n  const variantKey = `actionButton${normalized.replace(/^[a-z]/, (c) => c.toUpperCase())}`;\r\n  return getStyleClass(variantKey) || getStyleClass('actionButtonDefault');\r\n};\r\n\r\nconst isComplexItem = (item: any) => {\r\n  // Consider item complex if it has more than typical display fields\r\n  const displayKeys = new Set(['id','title','label','value','description','icon','disabled','selected']);\r\n  const keys = Object.keys(item || {});\r\n  return keys.filter(k => !displayKeys.has(k)).length >= 3; // threshold can be tuned\r\n};\r\n\r\nconst resolveBaseKey = (\r\n  item: ListViewItem,\r\n  index: number,\r\n  itemKey?: DynListViewProps['itemKey']\r\n): string => {\r\n  let candidate: unknown;\r\n  if (typeof itemKey === 'function') {\r\n    candidate = itemKey(item);\r\n  } else if (typeof itemKey === 'string') {\r\n    candidate = (item as Record<string, unknown>)[itemKey];\r\n  } else if (item.id !== undefined && item.id !== null) {\r\n    candidate = item.id;\r\n  } else if (item.value !== undefined && item.value !== null) {\r\n    candidate = item.value;\r\n  }\r\n\r\n  const normalized = candidate === undefined || candidate === null || candidate === ''\r\n    ? String(index)\r\n    : String(candidate);\r\n\r\n  return normalized;\r\n};\r\n\r\nconst createUniqueKeys = (\r\n  items: ListViewItem[],\r\n  itemKey?: DynListViewProps['itemKey']\r\n) => {\r\n  const occurrences = new Map<string, number>();\r\n\r\n  return items.map((item, index) => {\r\n    const baseKey = resolveBaseKey(item, index, itemKey);\r\n    const seen = occurrences.get(baseKey) ?? 0;\r\n    occurrences.set(baseKey, seen + 1);\r\n\r\n    if (seen === 0) return baseKey;\r\n    return `${baseKey}-${seen}`;\r\n  });\r\n};\r\n\r\nconst createKeyToItemMap = (items: ListViewItem[], keys: string[]) => {\r\n  const map = new Map<string, ListViewItem>();\r\n  keys.forEach((key, index) => {\r\n    map.set(key, items[index]);\r\n  });\r\n  return map;\r\n};\r\n\r\ntype SelectionInput = string[] | string | undefined;\r\n\r\nconst toInternalValue = (value: SelectionInput, multi: boolean): string[] | string | undefined => {\r\n  if (multi) {\r\n    if (Array.isArray(value)) return value;\r\n    if (typeof value === 'string' && value !== '') return [value];\r\n    return [];\r\n  }\r\n\r\n  if (Array.isArray(value)) return value[0];\r\n  return value;\r\n};\r\n\r\nconst toKeyArray = (value: string[] | string | undefined, multi: boolean): string[] => {\r\n  if (multi) {\r\n    if (Array.isArray(value)) return value;\r\n    if (typeof value === 'string' && value !== '') return [value];\r\n    return [];\r\n  }\r\n\r\n  return typeof value === 'string' && value !== '' ? [value] : [];\r\n};\r\n\r\ninterface SelectionManagerConfig {\r\n  multi: boolean;\r\n  disabled: boolean;\r\n  controlledValue?: string | string[];\r\n  defaultValue?: string | string[];\r\n  onChange?: DynListViewProps['onChange'];\r\n  onSelectionChange?: DynListViewProps['onSelectionChange'];\r\n  getSelectedItems: (keys: string[]) => ListViewItem[];\r\n}\r\n\r\nconst useSelectionManager = ({\r\n  multi,\r\n  disabled,\r\n  controlledValue,\r\n  defaultValue,\r\n  onChange,\r\n  onSelectionChange,\r\n  getSelectedItems,\r\n}: SelectionManagerConfig) => {\r\n  const isControlled = controlledValue !== undefined;\r\n  const [selected, setSelected] = useState<string[] | string | undefined>(() => {\r\n    const initial = isControlled ? controlledValue : defaultValue;\r\n    return toInternalValue(initial, multi);\r\n  });\r\n\r\n  const updateFromExternal = useCallback(\r\n    (value?: string | string[]) => {\r\n      setSelected(toInternalValue(value, multi));\r\n    },\r\n    [multi]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (isControlled) {\r\n      updateFromExternal(controlledValue);\r\n    }\r\n  }, [controlledValue, isControlled, updateFromExternal]);\r\n\r\n  const selectedKeys = useMemo(() => toKeyArray(selected, multi), [selected, multi]);\r\n\r\n  const updateSelection = useCallback(\r\n    (next: SelectionInput) => {\r\n      const internalValue = toInternalValue(next, multi);\r\n\r\n      if (!isControlled) {\r\n        setSelected(internalValue);\r\n      }\r\n\r\n      const keysArray = toKeyArray(internalValue, multi);\r\n      const items = getSelectedItems(keysArray);\r\n      const valueForChange = multi ? keysArray : keysArray[0];\r\n\r\n      onChange?.(valueForChange as any, multi ? items : items[0]);\r\n      onSelectionChange?.(keysArray, items);\r\n    },\r\n    [getSelectedItems, isControlled, multi, onChange, onSelectionChange]\r\n  );\r\n\r\n  const toggle = useCallback(\r\n    (key: string) => {\r\n      if (disabled) return;\r\n\r\n      if (multi) {\r\n        const current = new Set(selectedKeys);\r\n        if (current.has(key)) {\r\n          current.delete(key);\r\n        } else {\r\n          current.add(key);\r\n        }\r\n        updateSelection(Array.from(current));\r\n      } else {\r\n        updateSelection(selectedKeys[0] === key ? undefined : key);\r\n      }\r\n    },\r\n    [disabled, multi, selectedKeys, updateSelection]\r\n  );\r\n\r\n  const selectAll = useCallback(\r\n    (keys: string[]) => {\r\n      if (disabled) return;\r\n      updateSelection(multi ? keys : keys[0]);\r\n    },\r\n    [disabled, multi, updateSelection]\r\n  );\r\n\r\n  const clearSelection = useCallback(() => {\r\n    if (disabled) return;\r\n    updateSelection(multi ? [] : undefined);\r\n  }, [disabled, multi, updateSelection]);\r\n\r\n  const isSelected = useCallback((key: string) => selectedKeys.includes(key), [selectedKeys]);\r\n\r\n  return {\r\n    selectedKeys,\r\n    isSelected,\r\n    toggle,\r\n    selectAll,\r\n    clearSelection,\r\n  } as const;\r\n};\r\n\r\nexport const DynListView = forwardRef<DynListViewRef, DynListViewProps>(function DynListView(\r\n  {\r\n    items = [],\r\n    data = [], // legacy alias\r\n    value,\r\n    defaultValue,\r\n    multiSelect = false,\r\n    selectable = false,\r\n    disabled = false,\r\n    loading = false,\r\n    emptyText = 'No data available',\r\n    actions = [],\r\n    renderItem,\r\n    size,\r\n    height,\r\n    bordered = false,\r\n    selectedKeys,\r\n    itemKey,\r\n    onChange,\r\n    onSelectionChange,\r\n    className,\r\n    id,\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    'data-testid': dataTestId,\r\n    ...rest\r\n  }, ref) {\r\n  \r\n  // Use items prop, fallback to data for backward compatibility\r\n  const listItems = items.length > 0 ? items : data;\r\n\r\n  const [internalId] = useState(() => id || generateId('listview'));\r\n  const rootRef = useRef<HTMLDivElement | null>(null);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [expanded, setExpanded] = useState<Record<string, boolean>>({});\r\n\r\n  const toggleItemExpansion = useCallback((key: string) => {\r\n    setExpanded((prev) => ({ ...prev, [key]: !prev[key] }));\r\n  }, []);\r\n\r\n  const itemIds = useMemo(\r\n    () => listItems.map((_, i) => `${internalId}-option-${i}`),\r\n    [listItems, internalId]\r\n  );\r\n\r\n  const uniqueItemKeys = useMemo(\r\n    () => createUniqueKeys(listItems, itemKey),\r\n    [itemKey, listItems]\r\n  );\r\n\r\n  const keyToItemMap = useMemo(\r\n    () => createKeyToItemMap(listItems, uniqueItemKeys),\r\n    [listItems, uniqueItemKeys]\r\n  );\r\n\r\n  const getItemsByKeys = useCallback(\r\n    (keys: string[]) =>\r\n      keys\r\n        .map((key) => keyToItemMap.get(key))\r\n        .filter((item): item is ListViewItem => Boolean(item)),\r\n    [keyToItemMap]\r\n  );\r\n\r\n  const selection = useSelectionManager({\r\n    multi: multiSelect || selectable,\r\n    disabled,\r\n    controlledValue: selectedKeys ?? value,\r\n    defaultValue,\r\n    onChange,\r\n    onSelectionChange,\r\n    getSelectedItems: getItemsByKeys,\r\n  });\r\n\r\n  const { selectAll: selectAllKeys, clearSelection } = selection;\r\n  const allKeys = uniqueItemKeys;\r\n\r\n  useImperativeHandle<DynListViewRef | null>(\r\n    ref,\r\n    () => {\r\n      const node = rootRef.current;\r\n\r\n      if (!node) {\r\n        return null;\r\n      }\r\n\r\n      const handle = node as DynListViewRef;\r\n\r\n      handle.selectAll = () => {\r\n        if (!allKeys.length) return;\r\n        selectAllKeys(allKeys);\r\n      };\r\n\r\n      handle.clearSelection = () => {\r\n        clearSelection();\r\n      };\r\n\r\n      return handle;\r\n    },\r\n    [allKeys, clearSelection, selectAllKeys]\r\n  );\r\n\r\n  const moveActive = (delta: number) => {\r\n    const count = listItems.length;\r\n    if (!count) return;\r\n    setActiveIndex(idx => (idx + delta + count) % count);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    switch (e.key) {\r\n      case 'ArrowDown': e.preventDefault(); moveActive(1); break;\r\n      case 'ArrowUp': e.preventDefault(); moveActive(-1); break;\r\n      case 'Home': e.preventDefault(); setActiveIndex(0); break;\r\n      case 'End': e.preventDefault(); setActiveIndex(Math.max(0, listItems.length - 1)); break;\r\n      case 'Enter':\r\n      case ' ': {\r\n        e.preventDefault();\r\n        const item = listItems[activeIndex];\r\n        if (item) {\r\n          const key = uniqueItemKeys[activeIndex];\r\n          if (key) {\r\n            selection.toggle(key);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const rootClasses = cn(\r\n    'dyn-list-view',\r\n    getStyleClass('root'),\r\n    size === 'small' && [getStyleClass('rootSmall'), 'dyn-list-view--small'],\r\n    size === 'large' && [getStyleClass('rootLarge'), 'dyn-list-view--large'],\r\n    bordered && [getStyleClass('rootBordered'), 'dyn-list-view--bordered'],\r\n    className\r\n  );\r\n\r\n  const rootStyle = height ? { \r\n    height: typeof height === 'number' ? `${height}px` : String(height) \r\n  } : undefined;\r\n\r\n  const allChecked =\r\n    (multiSelect || selectable) &&\r\n    allKeys.length > 0 &&\r\n    allKeys.every((key) => selection.isSelected(key));\r\n\r\n  const computedAriaLabel = ariaLabel ?? (ariaLabelledBy ? undefined : 'List view');\r\n  const selectAllButtonLabel = allChecked ? 'Deselect all items' : 'Select all items';\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      id={internalId}\r\n      role=\"listbox\"\r\n      aria-multiselectable={multiSelect || selectable || undefined}\r\n      aria-label={computedAriaLabel}\r\n      aria-labelledby={ariaLabelledBy}\r\n      aria-activedescendant={listItems[activeIndex] ? itemIds[activeIndex] : undefined}\r\n      className={rootClasses}\r\n      data-testid={dataTestId || 'dyn-listview'}\r\n      tabIndex={0}\r\n      onKeyDown={handleKeyDown}\r\n      style={rootStyle}\r\n      {...rest}\r\n    >\r\n      {(multiSelect || selectable) && (\r\n        <div className={getStyleClass('bulkActions')}>\r\n          <button\r\n            type=\"button\"\r\n            className={cn(getStyleClass('option'), getStyleClass('bulkActions__button'))}\r\n            aria-pressed={allChecked}\r\n            aria-label={selectAllButtonLabel}\r\n            onClick={() => selection.selectAll(allChecked ? [] : allKeys)}\r\n          >\r\n            <span\r\n              aria-hidden=\"true\"\r\n              className={cn(\r\n                getStyleClass('option__checkbox'),\r\n                allChecked && getStyleClass('option__checkbox--checked')\r\n              )}\r\n            />\r\n            <span className={getStyleClass('option__label')}>Select All</span>\r\n            <span className={getStyleClass('visuallyHidden')}>\r\n              {allChecked ? 'All items selected' : 'No items selected'}\r\n            </span>\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {loading ? (\r\n        <div role=\"status\" className={getStyleClass('loading')}>\r\n          Loading...\r\n        </div>\r\n      ) : listItems.length === 0 ? (\r\n        <div role=\"note\" className={getStyleClass('empty')}>\r\n          {emptyText}\r\n        </div>\r\n      ) : (\r\n        listItems.map((item, i) => {\r\n          const key = uniqueItemKeys[i];\r\n          const selectedState = selection.isSelected(key);\r\n          const title = (item as any).title ?? (item as any).label ?? (item as any).value ?? String((item as any).id ?? i + 1);\r\n          const desc = (item as any).description;\r\n          const complex = isComplexItem(item);\r\n          const labelId = `${itemIds[i]}-label`;\r\n          const descriptionId = desc ? `${itemIds[i]}-description` : undefined;\r\n          const usesDefaultRenderer = !renderItem;\r\n          const optionLabelledBy = usesDefaultRenderer ? labelId : undefined;\r\n          const optionDescribedBy = usesDefaultRenderer && desc ? descriptionId : undefined;\r\n          const isExpandable = complex;\r\n          const usesTitleAsExpandTrigger = isExpandable && usesDefaultRenderer;\r\n          const renderSeparateExpandControl = isExpandable && !usesDefaultRenderer;\r\n          const isExpanded = !!expanded[key];\r\n          const hasActions = actions && actions.length > 0;\r\n          const shouldRenderControls = hasActions || renderSeparateExpandControl;\r\n\r\n          return (\r\n            <div\r\n              key={key}\r\n              className={cn(\r\n                getStyleClass('option'),\r\n                selectedState && getStyleClass('option--selected'),\r\n                i === activeIndex && getStyleClass('option--active'),\r\n                item.disabled && getStyleClass('option--disabled')\r\n              )}\r\n              onMouseEnter={() => !item.disabled && setActiveIndex(i)}\r\n            >\r\n              <div\r\n                id={itemIds[i]}\r\n                role=\"option\"\r\n                aria-selected={selectedState}\r\n                aria-disabled={item.disabled || undefined}\r\n                aria-labelledby={optionLabelledBy}\r\n                aria-describedby={optionDescribedBy}\r\n                className={getStyleClass('option__main')}\r\n                onMouseDown={(e) => e.preventDefault()}\r\n                onClick={() => !item.disabled && selection.toggle(key)}\r\n              >\r\n                {(selectable || multiSelect) && (\r\n                  <span\r\n                    aria-hidden=\"true\"\r\n                    className={cn(\r\n                      getStyleClass('option__checkbox'),\r\n                      selectedState && getStyleClass('option__checkbox--checked')\r\n                    )}\r\n                  />\r\n                )}\r\n\r\n                <div className={getStyleClass('option__content')}>\r\n                  {renderItem ? (\r\n                    renderItem(item, i)\r\n                  ) : (\r\n                    <>\r\n                      {usesTitleAsExpandTrigger ? (\r\n                        <button\r\n                          type=\"button\"\r\n                          id={labelId}\r\n                          className={cn(\r\n                            getStyleClass('option__label'),\r\n                            getStyleClass('option__label--expandable'),\r\n                            isExpanded && getStyleClass('option__label--expanded')\r\n                          )}\r\n                          onClick={(event) => {\r\n                            event.stopPropagation();\r\n                            toggleItemExpansion(key);\r\n                          }}\r\n                          aria-expanded={isExpanded}\r\n                        >\r\n                          {title}\r\n                        </button>\r\n                      ) : (\r\n                        <span id={labelId} className={getStyleClass('option__label')}>\r\n                          {title}\r\n                        </span>\r\n                      )}\r\n                      {desc && (\r\n                        <span\r\n                          id={descriptionId}\r\n                          className={getStyleClass('option__description')}\r\n                        >\r\n                          {desc}\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {shouldRenderControls && (\r\n                <div\r\n                  className={getStyleClass('option__controls')}\r\n                  onClick={(e) => e.stopPropagation()}\r\n                >\r\n                  {renderSeparateExpandControl && (\r\n                    <button\r\n                      type=\"button\"\r\n                      aria-expanded={isExpanded}\r\n                      aria-label={`${isExpanded ? 'Collapse' : 'Expand'} details for ${title}`}\r\n                      className={cn(\r\n                        getStyleClass('actionButton'),\r\n                        getStyleClass('actionButtonDefault'),\r\n                        getStyleClass('option__expandButton')\r\n                      )}\r\n                      onClick={(event) => {\r\n                        event.stopPropagation();\r\n                        toggleItemExpansion(key);\r\n                      }}\r\n                    >\r\n                      <span aria-hidden=\"true\" className={getStyleClass('option__expandButtonIcon')}>\r\n                        {isExpanded ? '▴' : '▾'}\r\n                      </span>\r\n                    </button>\r\n                  )}\r\n\r\n                  {hasActions && (\r\n                    <div className={getStyleClass('option__actions')}>\r\n                      {actions.map((action) => (\r\n                        <button\r\n                          key={action.key}\r\n                          type=\"button\"\r\n                          className={cn(\r\n                            getStyleClass('actionButton'),\r\n                            getActionButtonVariantClass(action.type)\r\n                          )}\r\n                          onClick={() => action.onClick(item, i)}\r\n                          title={action.title}\r\n                        >\r\n                          {action.title}\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {isExpanded && (\r\n                <div className={getStyleClass('option__details')}>\r\n                  {Object.entries(item).map(([k, v]) => (\r\n                    <div key={k}>\r\n                      <strong>{k}:</strong> {String(v)}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DynListView;","/**\r\n * DynPage - Complete page layout component\r\n * Part of DYN UI Layout Components Group - SCOPE 7\r\n */\r\n\r\nimport React from 'react';\r\nimport { DynPageProps } from '../../types/layout.types';\r\nimport { classNames } from '../../utils/classNames';\r\nimport { DynButton } from '../DynButton';\r\nimport type { DynButtonKind } from '../DynButton/DynButton.types';\r\nimport styles from './DynPage.module.css';\r\n\r\nexport const DynPage: React.FC<DynPageProps> = ({\r\n  title,\r\n  subtitle,\r\n  breadcrumbs = [],\r\n  actions = [],\r\n  children,\r\n  loading = false,\r\n  error,\r\n  size = 'medium',\r\n  padding = 'md',\r\n  background = 'page',\r\n  className,\r\n  id,\r\n  'data-testid': testId\r\n}) => {\r\n  const sizeClass =\r\n    size === 'small'\r\n      ? styles.sizeSmall\r\n      : size === 'large'\r\n        ? styles.sizeLarge\r\n        : undefined;\r\n\r\n  const paddingClass =\r\n    padding === 'none'\r\n      ? styles.paddingNone\r\n      : padding === 'xs'\r\n        ? styles.paddingXs\r\n        : padding === 'sm'\r\n          ? styles.paddingSm\r\n          : padding === 'lg'\r\n            ? styles.paddingLg\r\n            : padding === 'xl'\r\n              ? styles.paddingXl\r\n              : styles.paddingMd;\r\n\r\n  const backgroundClass =\r\n    background === 'page'\r\n      ? styles.backgroundPage\r\n      : background === 'surface'\r\n        ? styles.backgroundSurface\r\n        : undefined;\r\n\r\n  const pageClasses = classNames(\r\n    styles.root,\r\n    sizeClass,\r\n    paddingClass,\r\n    backgroundClass,\r\n    {\r\n      [styles.isLoading]: loading,\r\n      [styles.isError]: !!error\r\n    },\r\n    'dyn-page',\r\n    className\r\n  );\r\n\r\n  const renderBreadcrumbs = () => {\r\n    if (breadcrumbs.length === 0) return null;\r\n\r\n    return (\r\n      <nav className={styles.breadcrumbs} aria-label=\"Navegação\">\r\n        <ol className={styles.breadcrumbList}>\r\n          {breadcrumbs.map((breadcrumb, index) => (\r\n            <li key={index} className={styles.breadcrumbItem}>\r\n              {breadcrumb.href || breadcrumb.onClick ? (\r\n                <a\r\n                  href={breadcrumb.href}\r\n                  onClick={(e) => {\r\n                    if (breadcrumb.onClick) {\r\n                      e.preventDefault();\r\n                      breadcrumb.onClick();\r\n                    }\r\n                  }}\r\n                  className={styles.breadcrumbLink}\r\n                >\r\n                  {breadcrumb.title}\r\n                </a>\r\n              ) : (\r\n                <span className={styles.breadcrumbText}>{breadcrumb.title}</span>\r\n              )}\r\n              {index < breadcrumbs.length - 1 && (\r\n                <span className={styles.breadcrumbSeparator} aria-hidden=\"true\">/</span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderActions = () => {\r\n    if (actions.length === 0) return null;\r\n\r\n    return (\r\n      <div className={styles.actions}>\r\n        {actions.map((action) => (\r\n          <DynButton\r\n            key={action.key}\r\n            kind={(action.type ?? 'secondary') as DynButtonKind}\r\n            size={size === 'large' ? 'large' : 'medium'}\r\n            disabled={action.disabled}\r\n            loading={action.loading}\r\n            onClick={action.onClick}\r\n            icon={action.icon}\r\n          >\r\n            {action.title}\r\n          </DynButton>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={pageClasses} id={id} data-testid={testId}>\r\n        <div className={styles.loading}>\r\n          <div className={styles.spinner}></div>\r\n          <span>Carregando página...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={pageClasses} id={id} data-testid={testId}>\r\n        <div className={styles.error}>\r\n          <div className={styles.errorIcon}>⚠</div>\r\n          <div>\r\n            {typeof error === 'string' ? (\r\n              <span className={styles.errorMessage}>{error}</span>\r\n            ) : (\r\n              error\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={pageClasses} id={id} data-testid={testId}>\r\n      <header className={styles.header}>\r\n        {renderBreadcrumbs()}\r\n\r\n        <div className={styles.titleSection}>\r\n          <div className={styles.titleContent}>\r\n            <h1 className={styles.title}>{title}</h1>\r\n            {subtitle && (\r\n              <p className={styles.subtitle}>{subtitle}</p>\r\n            )}\r\n          </div>\r\n          {renderActions()}\r\n        </div>\r\n      </header>\r\n\r\n      <main className={styles.content}>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nDynPage.displayName = 'DynPage';\r\n\r\nexport default DynPage;\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\r\n * DynSelect - Advanced select component with search and virtual scrolling\r\n * Part of DYN UI Form Components Group - SCOPE 6\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useId\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport type { DynSelectProps, DynFieldRef, SelectOption } from '../../types/field.types';\r\nimport { DynFieldContainer } from '../DynFieldContainer';\r\nimport { useDynFieldValidation } from '../../hooks/useDynFieldValidation';\r\nimport { DynIcon } from '../DynIcon';\r\nimport styles from './DynSelect.module.css';\r\n\r\nconst getStyleClass = (classKey: keyof typeof styles) => styles[classKey];\r\n\r\nexport const DynSelect = forwardRef<DynFieldRef, DynSelectProps>(\r\n  (\r\n    {\r\n      id: idProp,\r\n      name,\r\n      label,\r\n      help,\r\n      placeholder = 'Selecione...',\r\n      disabled = false,\r\n      readonly = false,\r\n      required = false,\r\n      optional = false,\r\n      visible = true,\r\n      value: propValue,\r\n      errorMessage,\r\n      validation,\r\n      className,\r\n      options = [],\r\n      multiple = false,\r\n      searchable = false,\r\n      virtualScroll = false,\r\n      loading = false,\r\n      size = 'medium',\r\n      onChange,\r\n      onBlur,\r\n      onFocus\r\n    },\r\n    ref\r\n  ) => {\r\n    const [value, setValue] = useState<string | string[]>(propValue || (multiple ? [] : ''));\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [focused, setFocused] = useState(false);\r\n    const selectRef = useRef<HTMLDivElement>(null);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const generatedId = useId();\r\n    const sanitizedGeneratedId = generatedId.replace(/:/g, '');\r\n    const fieldId = idProp ?? name ?? `dyn-select-${sanitizedGeneratedId}`;\r\n    const labelId = label ? `${fieldId}-label` : undefined;\r\n    const listboxId = `${fieldId}-listbox`;\r\n\r\n    const { error, validate, clearError } = useDynFieldValidation({\r\n      value,\r\n      required,\r\n      validation,\r\n      customError: errorMessage\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      focus: () => inputRef.current?.focus(),\r\n      validate: () => validate(),\r\n      clear: () => {\r\n        setValue(multiple ? [] : '');\r\n        onChange?.(multiple ? [] : '');\r\n        clearError();\r\n      },\r\n      getValue: () => value,\r\n      setValue: (newValue: any) => {\r\n        setValue(newValue);\r\n        onChange?.(newValue);\r\n      }\r\n    }));\r\n\r\n    const filteredOptions = useMemo(() => {\r\n      if (!searchable || !searchTerm) return options;\r\n      return options.filter(option =>\r\n        option.label.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }, [options, searchTerm, searchable]);\r\n\r\n    const selectedOptions = useMemo(() => {\r\n      if (multiple && Array.isArray(value)) {\r\n        return options.filter(option => value.includes(option.value));\r\n      } else if (!multiple) {\r\n        return options.find(option => option.value === value) || null;\r\n      }\r\n      return null;\r\n    }, [options, value, multiple]);\r\n\r\n    useEffect(() => {\r\n      setValue(propValue || (multiple ? [] : ''));\r\n    }, [propValue, multiple]);\r\n\r\n    useEffect(() => {\r\n      const handleClickOutside = (event: MouseEvent) => {\r\n        if (selectRef.current && !selectRef.current.contains(event.target as Node)) {\r\n          setIsOpen(false);\r\n          setSearchTerm('');\r\n        }\r\n      };\r\n\r\n      if (isOpen) {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n      }\r\n    }, [isOpen]);\r\n\r\n    const handleToggle = () => {\r\n      if (!disabled && !readonly) {\r\n        setIsOpen(prev => !prev);\r\n        if (!isOpen) {\r\n          inputRef.current?.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleOptionSelect = (option: SelectOption) => {\r\n      if (option.disabled) return;\r\n\r\n      if (multiple && Array.isArray(value)) {\r\n        const newValue = value.includes(option.value)\r\n          ? value.filter(v => v !== option.value)\r\n          : [...value, option.value];\r\n        setValue(newValue);\r\n        onChange?.(newValue);\r\n      } else {\r\n        setValue(option.value);\r\n        onChange?.(option.value);\r\n        setIsOpen(false);\r\n        setSearchTerm('');\r\n      }\r\n\r\n      clearError();\r\n    };\r\n\r\n    const handleRemoveOption = (optionValue: any, event: React.MouseEvent) => {\r\n      event.stopPropagation();\r\n      if (multiple && Array.isArray(value)) {\r\n        const newValue = value.filter(v => v !== optionValue);\r\n        setValue(newValue);\r\n        onChange?.(newValue);\r\n      }\r\n    };\r\n\r\n    const handleBlur = () => {\r\n      setFocused(false);\r\n      validate();\r\n      onBlur?.();\r\n    };\r\n\r\n    const handleFocus = () => {\r\n      setFocused(true);\r\n      clearError();\r\n      onFocus?.();\r\n    };\r\n\r\n    const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setSearchTerm(e.target.value);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      switch (e.key) {\r\n        case 'Enter':\r\n        case ' ':\r\n          if (!isOpen) {\r\n            e.preventDefault();\r\n            setIsOpen(true);\r\n          }\r\n          break;\r\n        case 'Escape':\r\n          setIsOpen(false);\r\n          setSearchTerm('');\r\n          break;\r\n        case 'ArrowDown':\r\n          if (!isOpen) {\r\n            setIsOpen(true);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    if (!visible) return null;\r\n\r\n    const resolvedError = errorMessage ?? (error || undefined);\r\n\r\n    const sizeClassName = (() => {\r\n      const capitalizedSize = size.charAt(0).toUpperCase() + size.slice(1);\r\n      const key = `selectSize${capitalizedSize}` as keyof typeof styles;\r\n      return styles[key];\r\n    })();\r\n\r\n    const selectClasses = classNames(\r\n      getStyleClass('select'),\r\n      sizeClassName,\r\n      {\r\n        [getStyleClass('selectOpen')]: isOpen,\r\n        [getStyleClass('selectFocused')]: focused,\r\n        [getStyleClass('selectError')]: Boolean(resolvedError),\r\n        [getStyleClass('selectDisabled')]: disabled,\r\n        [getStyleClass('selectReadonly')]: readonly,\r\n        [getStyleClass('selectSearchable')]: searchable,\r\n        [getStyleClass('selectMultiple')]: multiple,\r\n        [getStyleClass('selectLoading')]: loading\r\n      }\r\n    );\r\n\r\n    const getDisplayText = () => {\r\n      if (loading) return 'Carregando...';\r\n\r\n      if (multiple && Array.isArray(selectedOptions) && selectedOptions.length > 0) {\r\n        return `${selectedOptions.length} selecionado(s)`;\r\n      } else if (!multiple && selectedOptions) {\r\n        return (selectedOptions as SelectOption).label;\r\n      }\r\n\r\n      return placeholder;\r\n    };\r\n\r\n    const showPlaceholder = !selectedOptions ||\r\n      (multiple && Array.isArray(selectedOptions) && selectedOptions.length === 0);\r\n\r\n    return (\r\n      <DynFieldContainer\r\n        id={idProp}\r\n        label={label}\r\n        helpText={help}\r\n        required={required}\r\n        optional={optional}\r\n        errorText={resolvedError}\r\n        className={className}\r\n        htmlFor={fieldId}\r\n      >\r\n        <div ref={selectRef} className={getStyleClass('container')}>\r\n          <div\r\n            className={selectClasses}\r\n            onClick={handleToggle}\r\n            onKeyDown={handleKeyDown}\r\n            tabIndex={disabled ? -1 : 0}\r\n            role=\"combobox\"\r\n            aria-expanded={isOpen}\r\n            aria-haspopup=\"listbox\"\r\n            aria-invalid={Boolean(resolvedError)}\r\n            aria-disabled={disabled || undefined}\r\n            aria-readonly={readonly || undefined}\r\n            aria-labelledby={labelId}\r\n            aria-controls={isOpen ? listboxId : undefined}\r\n            aria-describedby={\r\n              resolvedError\r\n                ? `${fieldId}-error`\r\n                : help\r\n                  ? `${fieldId}-help`\r\n                  : undefined\r\n            }\r\n            onBlur={handleBlur}\r\n            onFocus={handleFocus}\r\n          >\r\n            <input\r\n              ref={inputRef}\r\n              type=\"hidden\"\r\n              id={fieldId}\r\n              name={name}\r\n              value={multiple && Array.isArray(value) ? value.join(',') : value || ''}\r\n            />\r\n\r\n            <div className={getStyleClass('selectContent')}>\r\n              {multiple && Array.isArray(selectedOptions) && selectedOptions.length > 0 ? (\r\n                <div className={getStyleClass('tags')}>\r\n                  {selectedOptions.map((option) => (\r\n                    <span key={option.value} className={getStyleClass('tag')}>\r\n                      {option.label}\r\n                      <button\r\n                        type=\"button\"\r\n                        className={getStyleClass('tagRemove')}\r\n                        onClick={(e) => handleRemoveOption(option.value, e)}\r\n                        aria-label={`Remover ${option.label}`}\r\n                      >\r\n                        <DynIcon icon=\"dyn-icon-close\" />\r\n                      </button>\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <span className={classNames(getStyleClass('selectText'), {\r\n                  [getStyleClass('selectPlaceholder')]: showPlaceholder\r\n                })}>\r\n                  {getDisplayText()}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className={getStyleClass('arrow')}>\r\n              <DynIcon\r\n                icon={loading ? \"dyn-icon-loading\" : \"dyn-icon-arrow-down\"}\r\n                className={classNames({\r\n                  [getStyleClass('arrowUp')]: isOpen && !loading\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {isOpen && (\r\n            <div className={getStyleClass('dropdown')}>\r\n              {searchable && (\r\n                <div className={getStyleClass('search')}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Pesquisar...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearchChange}\r\n                    className={getStyleClass('searchInput')}\r\n                    aria-label=\"Pesquisar opções\"\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {filteredOptions.length === 0 ? (\r\n                <div\r\n                  className={getStyleClass('emptyState')}\r\n                  role=\"status\"\r\n                  aria-live=\"polite\"\r\n                >\r\n                  {searchTerm ? 'Nenhum resultado encontrado' : 'Nenhuma opção disponível'}\r\n                </div>\r\n              ) : (\r\n                <div\r\n                  className={getStyleClass('options')}\r\n                  role=\"listbox\"\r\n                  id={listboxId}\r\n                  aria-multiselectable={multiple || undefined}\r\n                >\r\n                  {filteredOptions.map((option) => {\r\n                    const isSelected = multiple && Array.isArray(value)\r\n                      ? value.includes(option.value)\r\n                      : value === option.value;\r\n\r\n                    return (\r\n                      <div\r\n                        key={option.value}\r\n                        className={classNames(getStyleClass('option'), {\r\n                          [getStyleClass('optionSelected')]: isSelected,\r\n                          [getStyleClass('optionDisabled')]: option.disabled\r\n                        })}\r\n                        role=\"option\"\r\n                        aria-selected={isSelected}\r\n                        aria-disabled={option.disabled || undefined}\r\n                        onClick={() => handleOptionSelect(option)}\r\n                      >\r\n                        {multiple && (\r\n                          <span className={classNames(getStyleClass('checkbox'), {\r\n                            [getStyleClass('checkboxChecked')]: isSelected\r\n                          })}>\r\n                            {isSelected && <DynIcon icon=\"dyn-icon-check\" />}\r\n                          </span>\r\n                        )}\r\n                        <span className={getStyleClass('optionText')}>{option.label}</span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DynFieldContainer>\r\n    );\r\n  }\r\n);\r\n\r\nDynSelect.displayName = 'DynSelect';\r\n\r\nexport default DynSelect;\r\n","import React, { forwardRef, useImperativeHandle, useState, useCallback, useEffect } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport styles from './DynStepper.module.css';\r\nimport { DynIcon } from '../DynIcon';\r\nimport type { DynStepperProps, DynStepperRef, DynStep, StepItem } from './DynStepper.types';\r\n\r\nconst getStyleClass = (n: string) => (styles as Record<string, string>)[n] || '';\r\n\r\nfunction clamp(n: number, min: number, max: number) {\r\n  return Math.max(min, Math.min(max, n));\r\n}\r\n\r\n/**\r\n * Convert value to step index\r\n */\r\nfunction valueToIndex(value: string | number | undefined, steps: StepItem[]): number {\r\n  if (value === undefined) return 0;\r\n\r\n  if (typeof value === 'number') {\r\n    return Math.max(0, Math.min(value, steps.length - 1));\r\n  }\r\n\r\n  // String value - find by step id\r\n  const index = steps.findIndex(step => step.id === value);\r\n  return index >= 0 ? index : 0;\r\n}\r\n\r\n/**\r\n * DynStepper — standardized: ids, a11y, predictable events, linear/non-linear.\r\n * Complete implementation with backward compatibility for legacy value/defaultValue props.\r\n */\r\nexport const DynStepper = forwardRef<DynStepperRef, DynStepperProps>(\r\n  (\r\n    {\r\n      steps = [],\r\n      // New API\r\n      activeStep: controlledActiveStep,\r\n      defaultActiveStep = 0,\r\n      // Legacy API - maintain backward compatibility\r\n      value: controlledValue,\r\n      defaultValue = 0,\r\n      // Common props\r\n      linear = true,\r\n      onChange,\r\n      onStepChange,\r\n      onStepClick,\r\n      clickableSteps = true,\r\n  orientation = 'horizontal',\r\n  variant = 'tabs',\r\n      size = 'medium',\r\n  showLabels = true,\r\n  showDescription = false,\r\n      className,\r\n      contentClassName,\r\n      renderStepContent,\r\n      renderStepIcon,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'data-testid': dataTestId,\r\n      stepClassName,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalId] = useState(() => id || generateId('stepper'));\r\n\r\n    // Determine controlled state and initial value with proper priority:\r\n    // 1. activeStep (new API) takes precedence\r\n    // 2. value (legacy API) as fallback\r\n    // 3. defaultActiveStep (new API default)\r\n    // 4. defaultValue (legacy API default)\r\n    const isControlledByActiveStep = controlledActiveStep !== undefined;\r\n    const isControlledByValue = controlledValue !== undefined;\r\n    const isControlled = isControlledByActiveStep || isControlledByValue;\r\n\r\n    const getInitialStep = () => {\r\n      if (isControlledByActiveStep) return controlledActiveStep;\r\n      if (isControlledByValue) return valueToIndex(controlledValue, steps);\r\n      if (defaultActiveStep !== 0) return defaultActiveStep;\r\n      return valueToIndex(defaultValue, steps);\r\n    };\r\n\r\n    const [internalActiveStep, setInternalActiveStep] = useState(getInitialStep);\r\n\r\n    // Get current active step with proper priority\r\n    const getCurrentActiveStep = () => {\r\n      if (isControlledByActiveStep) return controlledActiveStep as number;\r\n      if (isControlledByValue) return valueToIndex(controlledValue, steps);\r\n      return internalActiveStep;\r\n    };\r\n\r\n    const activeStep = getCurrentActiveStep();\r\n\r\n    // Handle controlled value changes (both new and legacy API)\r\n    useEffect(() => {\r\n      if (isControlledByActiveStep) {\r\n        // New API - direct numeric control\r\n        return; // activeStep is already handled above\r\n      }\r\n      if (isControlledByValue) {\r\n        // Legacy API - value can be string (step id) or number (index)\r\n        const newIndex = valueToIndex(controlledValue, steps);\r\n        if (newIndex !== internalActiveStep) {\r\n          setInternalActiveStep(newIndex);\r\n        }\r\n      }\r\n    }, [controlledValue, isControlledByActiveStep, isControlledByValue, steps, internalActiveStep]);\r\n\r\n    if (!steps || steps.length === 0) return null;\r\n\r\n    const maxIndex = steps.length - 1;\r\n    const clampedActiveStep = clamp(activeStep, 0, maxIndex);\r\n\r\n    // Enhanced change handler that supports both APIs\r\n    const notifyChange = useCallback((newIndex: number, step: StepItem) => {\r\n      // Call legacy onChange with both value formats\r\n      if (onChange) {\r\n        if (isControlledByValue && typeof controlledValue === 'string') {\r\n          // If controlled by string value, callback with step id\r\n          onChange(step.id, step, newIndex);\r\n        } else {\r\n          // Otherwise callback with numeric index\r\n          onChange(newIndex, step, newIndex);\r\n        }\r\n      }\r\n\r\n      // Call legacy onStepChange\r\n      onStepChange?.(newIndex, step);\r\n    }, [onChange, onStepChange, controlledValue, isControlledByValue]);\r\n\r\n    // Imperative API methods\r\n    const nextStep = useCallback((): boolean => {\r\n      if (clampedActiveStep >= steps.length - 1) return false;\r\n\r\n      const newStep = clampedActiveStep + 1;\r\n      if (!isControlled) setInternalActiveStep(newStep);\r\n      notifyChange(newStep, steps[newStep]);\r\n      return true;\r\n    }, [clampedActiveStep, steps.length, isControlled, notifyChange, steps]);\r\n\r\n    const prevStep = useCallback((): boolean => {\r\n      if (clampedActiveStep <= 0) return false;\r\n\r\n      const newStep = clampedActiveStep - 1;\r\n      if (!isControlled) setInternalActiveStep(newStep);\r\n      notifyChange(newStep, steps[newStep]);\r\n      return true;\r\n    }, [clampedActiveStep, isControlled, notifyChange, steps]);\r\n\r\n    const goToStep = useCallback((stepIndex: number): boolean => {\r\n      const clampedIndex = clamp(stepIndex, 0, maxIndex);\r\n      if (linear && clampedIndex > clampedActiveStep + 1) return false;\r\n      if (isStepDisabled(clampedIndex)) return false;\r\n\r\n      if (!isControlled) setInternalActiveStep(clampedIndex);\r\n      notifyChange(clampedIndex, steps[clampedIndex]);\r\n      return true;\r\n    }, [clampedActiveStep, maxIndex, linear, isControlled, notifyChange, steps]);\r\n\r\n    const getCurrentStep = useCallback((): number => {\r\n      return clampedActiveStep;\r\n    }, [clampedActiveStep]);\r\n\r\n    const getStepData = useCallback((stepIndex: number): StepItem | undefined => {\r\n      return steps[stepIndex];\r\n    }, [steps]);\r\n\r\n    const validateStep = useCallback((stepIndex: number): boolean => {\r\n      const step = steps[stepIndex];\r\n      if (!step) return false;\r\n\r\n      // Use custom validator if provided\r\n      if (step.validator) {\r\n        return step.validator(step);\r\n      }\r\n\r\n      // Default validation\r\n      return !step.error && !step.disabled;\r\n    }, [steps]);\r\n\r\n    const completeStep = useCallback((stepIndex: number): void => {\r\n      const step = steps[stepIndex];\r\n      if (step) {\r\n        step.completed = true;\r\n        step.status = 'completed';\r\n        step.state = 'completed';\r\n      }\r\n    }, [steps]);\r\n\r\n    const errorStep = useCallback((stepIndex: number, hasError: boolean): void => {\r\n      const step = steps[stepIndex];\r\n      if (step) {\r\n        step.error = hasError;\r\n        step.status = hasError ? 'error' : 'inactive';\r\n        step.state = hasError ? 'error' : 'pending';\r\n      }\r\n    }, [steps]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      nextStep,\r\n      prevStep,\r\n      goToStep,\r\n      getCurrentStep,\r\n      getStepData,\r\n      validateStep,\r\n      completeStep,\r\n      errorStep,\r\n    }), [nextStep, prevStep, goToStep, getCurrentStep, getStepData, validateStep, completeStep, errorStep]);\r\n\r\n    // Helper functions\r\n    const isStepDisabled = (index: number): boolean => {\r\n      const step = steps[index];\r\n      if (step?.disabled) return true;\r\n      if (linear && index > clampedActiveStep + 1) return true;\r\n      return false;\r\n    };\r\n\r\n    const getRootRole = () => {\r\n      if (variant === 'tabs') return 'tablist';\r\n      return 'group';\r\n    };\r\n\r\n    const getRootClassName = () => {\r\n      const classes = [getStyleClass('root')];\r\n\r\n      // Add semantic classes for tests\r\n      if (orientation) classes.push(`orientation-${orientation}`);\r\n      if (variant) classes.push(`variant-${variant}`);\r\n      if (size) classes.push(`size-${size}`);\r\n      if (className) classes.push(className);\r\n\r\n      return cn(...classes);\r\n    };\r\n\r\n    const getItemClassName = (index: number) => {\r\n      const classes = [getStyleClass('item'), 'step'];\r\n      const step = steps[index];\r\n\r\n      if (index === clampedActiveStep) {\r\n        classes.push(getStyleClass('item--current'), 'item--current', 'status-active');\r\n      }\r\n      if (step?.completed || step?.state === 'completed' || index < clampedActiveStep) {\r\n        classes.push(getStyleClass('item--completed'), 'item--completed', 'status-completed');\r\n      }\r\n      if (step?.error || step?.state === 'error') {\r\n        classes.push(getStyleClass('item--error'), 'item--error', 'status-error');\r\n      }\r\n      if (step?.disabled || isStepDisabled(index)) {\r\n        classes.push(getStyleClass('item--disabled'), 'item--disabled');\r\n      }\r\n\r\n      return cn(...classes);\r\n    };\r\n\r\n    const getButtonClassName = (index: number) => {\r\n      const classes = [getStyleClass('button')];\r\n\r\n      if (stepClassName) classes.push(stepClassName);\r\n\r\n      if (isStepDisabled(index)) {\r\n        classes.push(getStyleClass('button--disabled'), 'button--disabled');\r\n      }\r\n\r\n      return cn(...classes);\r\n    };\r\n\r\n    const getPanelClassName = (index: number) => {\r\n      const classes = [getStyleClass('panel')];\r\n      if (index !== clampedActiveStep) classes.push(getStyleClass('panel--hidden'));\r\n      return cn(...classes);\r\n    };\r\n\r\n  const getStepId = (index: number) => `${internalId}-step-${index}`;\r\n    const getPanelId = (index: number) => `${internalId}-panel-${index}`;\r\n    const getStepDescId = (index: number) => `${internalId}-step-${index}-desc`;\r\n\r\n    const handleStepClick = (index: number) => {\r\n      if (!clickableSteps || isStepDisabled(index)) return;\r\n\r\n      const step = steps[index];\r\n      const clickResult = onStepClick?.(index, step);\r\n      if (clickResult === false) return; // Allow onStepClick to prevent navigation\r\n\r\n      if (linear && index > clampedActiveStep + 1) return;\r\n\r\n      if (!isControlled) setInternalActiveStep(index);\r\n      notifyChange(index, step);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      switch (e.key) {\r\n        case 'ArrowRight':\r\n        case 'ArrowDown':\r\n          e.preventDefault();\r\n          nextStep();\r\n          break;\r\n        case 'ArrowLeft':\r\n        case 'ArrowUp':\r\n          e.preventDefault();\r\n          prevStep();\r\n          break;\r\n        case 'Home':\r\n          e.preventDefault();\r\n          goToStep(0);\r\n          break;\r\n        case 'End':\r\n          e.preventDefault();\r\n          goToStep(maxIndex);\r\n          break;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div\r\n        id={internalId}\r\n        role={getRootRole()}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={ariaLabelledBy}\r\n        className={getRootClassName()}\r\n        data-testid={dataTestId || 'dyn-stepper'}\r\n        onKeyDown={handleKeyDown}\r\n        {...rest}\r\n      >\r\n        <ol className={getStyleClass('list')} role={variant === 'tabs' ? 'presentation' : undefined}>\r\n          {steps.map((step, index) => (\r\n            <li key={step.id || index} className={getItemClassName(index)}>\r\n              <button\r\n                aria-label={step.title ? `${step.title} ${step.title}` : undefined}\r\n                aria-current={index === clampedActiveStep ? 'step' : undefined}\r\n                aria-selected={variant === 'tabs' ? index === clampedActiveStep : undefined}\r\n                className={getButtonClassName(index)}\r\n                id={getStepId(index)}\r\n                type=\"button\"\r\n                onClick={() => handleStepClick(index)}\r\n                disabled={isStepDisabled(index)}\r\n                aria-describedby={step.description && showDescription ? getStepDescId(index) : undefined}\r\n                title={step.tooltip}\r\n              >\r\n                {renderStepIcon ? renderStepIcon(step, index, index === clampedActiveStep) : (\r\n                  <>\r\n                    {/* Render icon from step data when provided */}\r\n                    {step.icon && typeof step.icon === 'string' ? (\r\n                      <DynIcon icon={step.icon} className={getStyleClass('icon')} />\r\n                    ) : null}\r\n\r\n                    <span aria-hidden=\"true\" className={getStyleClass('button__index')}>\r\n                      {index + 1}\r\n                    </span>\r\n                    {showLabels && (\r\n                      <span className={getStyleClass('button__label')}>\r\n                        {step.title || step.label || `Step ${index + 1}`}\r\n                      </span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </button>\r\n              {step.description && showDescription && (\r\n                <div className={getStyleClass('description')} id={getStepDescId(index)}>\r\n                  {step.description}\r\n                </div>\r\n              )}\r\n              {step.optional && (\r\n                <span className={getStyleClass('optional')}>(optional)</span>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n\r\n        {variant === 'progress' && (\r\n          <div\r\n            role=\"progressbar\"\r\n            aria-valuenow={Math.round(((clampedActiveStep + 1) / steps.length) * 100)}\r\n            aria-valuemin={0}\r\n            aria-valuemax={100}\r\n            className={getStyleClass('progressBar')}\r\n          >\r\n            <div\r\n              className={getStyleClass('progressFill')}\r\n              style={{ width: `${((clampedActiveStep + 1) / steps.length) * 100}%` }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {steps.map((step, index) => (\r\n          <section\r\n            key={step.id || index}\r\n            className={cn(getPanelClassName(index), 'step-content', contentClassName || '')}\r\n            id={getPanelId(index)}\r\n            role={variant === 'tabs' ? 'tabpanel' : 'region'}\r\n            /* avoid duplicating accessible name between the tab/button and the panel */\r\n            /* aria-labelledby intentionally omitted to prevent duplicate accessible names in tests */\r\n            tabIndex={-1}\r\n            hidden={index !== clampedActiveStep}\r\n          >\r\n            {renderStepContent ?\r\n              renderStepContent(step, index) :\r\n              (typeof step.content === 'function' ?\r\n                step.content({ index, selected: index === clampedActiveStep }) :\r\n                step.content\r\n              )\r\n            }\r\n          </section>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DynStepper;\r\nDynStepper.displayName = 'DynStepper';\r\n","import React, { useMemo, useRef, useState, useEffect, useLayoutEffect, forwardRef } from 'react';\r\nimport { cn } from '../../utils/classNames';\r\nimport { generateId } from '../../utils/accessibility';\r\nimport styles from './DynTabs.module.css';\r\nimport type { DynTabsProps, DynTabsRef } from './DynTabs.types';\r\n\r\nconst css = (n: string) => (styles as Record<string, string>)[n] || '';\r\n\r\nexport const DynTabs = forwardRef<DynTabsRef, DynTabsProps>(\r\n  (\r\n    {\r\n      items = [],\r\n      value,\r\n      activeTab,\r\n      defaultValue,\r\n      defaultActiveTab,\r\n      onChange,\r\n      onTabClose,\r\n      onTabAdd,\r\n      closable,\r\n      addable,\r\n      position = 'top',\r\n      orientation = 'horizontal',\r\n      activation = 'auto',\r\n      variant = 'default',\r\n      size = 'medium',\r\n      fitted = false,\r\n      scrollable = false,\r\n      lazy = false,\r\n      animated = true,\r\n      className,\r\n      id,\r\n      'aria-label': ariaLabel,\r\n      'aria-labelledby': ariaLabelledBy,\r\n      'aria-describedby': ariaDescribedBy,\r\n      'data-testid': dataTestId,\r\n      loadingComponent,\r\n      ...rest\r\n    },\r\n    ref\r\n  ) => {\r\n    const [internalId] = useState(() => id || generateId('tabs'));\r\n\r\n    // Build processed items\r\n    type RawItem = NonNullable<DynTabsProps['items']>[number];\r\n    type ProcessedItem = RawItem & { processedValue: string; processedKey: string };\r\n\r\n    const processedItems = useMemo<ProcessedItem[]>(() => (items as RawItem[]).map((item: RawItem, index: number) => {\r\n      const processedValue = item.value != null ? String(item.value) : item.id != null ? String(item.id) : `tab-${index}`;\r\n      const processedKey = item.id != null ? String(item.id) : item.value != null ? String(item.value) : `tab-${index}`;\r\n      return { ...item, processedValue, processedKey };\r\n    }), [items]);\r\n\r\n    // Determine control mode and initial\r\n    const controlledVal = activeTab ?? value;\r\n    const isControlled = controlledVal !== undefined;\r\n\r\n    const getInitial = (): string | undefined => {\r\n      if (controlledVal !== undefined) return String(controlledVal);\r\n      if (defaultActiveTab !== undefined) return String(defaultActiveTab);\r\n      if (defaultValue !== undefined) return String(defaultValue);\r\n      const firstEnabled = processedItems.find(i => !i.disabled) ?? processedItems[0];\r\n      return firstEnabled?.processedValue;\r\n    };\r\n\r\n    const [current, setCurrent] = useState<string | undefined>(getInitial());\r\n\r\n    // Lazy: track loading states\r\n    const [loaded, setLoaded] = useState<Record<string, boolean>>({});\r\n\r\n    // Pre-mark initial current as not loaded for immediate placeholder\r\n    useEffect(() => {\r\n      if (lazy && current && loaded[current] === undefined) {\r\n        setLoaded(prev => ({ ...prev, [current]: false }));\r\n      }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Sync controlled\r\n    useEffect(() => {\r\n      if (controlledVal !== undefined) setCurrent(String(controlledVal));\r\n    }, [controlledVal]);\r\n\r\n    // Guard if items change\r\n    useEffect(() => {\r\n      if (!processedItems.length) return;\r\n      const exists = processedItems.some(i => i.processedValue === current);\r\n      if (!exists) {\r\n        const firstEnabled = processedItems.find(i => !i.disabled) ?? processedItems[0];\r\n        setCurrent(firstEnabled?.processedValue);\r\n      }\r\n    }, [processedItems, current]);\r\n\r\n    // Early return for empty items per tests\r\n    if (!processedItems.length) {\r\n      return null;\r\n    }\r\n\r\n    const tabsRef = useRef<Array<HTMLButtonElement | null>>([]);\r\n    const tablistRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    // positions for close buttons keyed by processedValue\r\n    const [closePositions, setClosePositions] = useState<Record<string, { left: number; top: number }>>({});\r\n\r\n    const onSelect = (val: string, focusPanel = false) => {\r\n      if (!isControlled) setCurrent(val);\r\n      onChange?.(val);\r\n      if (lazy) {\r\n        // Immediately show loading for the newly selected tab (always set to false first)\r\n        setLoaded(prev => ({ ...prev, [val]: false }));\r\n        // Complete loading after a short delay so the loading state is observable\r\n        setTimeout(() => setLoaded(prev => ({ ...prev, [val]: true })), 50);\r\n      }\r\n      if (focusPanel) {\r\n        const panel = document.getElementById(`${internalId}-panel-${val}`);\r\n        panel?.focus?.();\r\n      }\r\n    };\r\n\r\n    const currentIndex = useMemo(() => {\r\n      if (!current) return -1;\r\n      return processedItems.findIndex(i => i.processedValue === current);\r\n    }, [processedItems, current]);\r\n\r\n    const moveFocus = (startIndex: number, delta: number) => {\r\n      const count = processedItems.length;\r\n      if (count === 0) return;\r\n      let idx = startIndex;\r\n      for (let step = 0; step < count; step++) {\r\n        idx = (idx + delta + count) % count;\r\n        const cand = processedItems[idx];\r\n        if (!cand?.disabled) {\r\n          onSelect(cand.processedValue);\r\n          tabsRef.current[idx]?.focus();\r\n          return;\r\n        }\r\n      }\r\n    };\r\n\r\n    const focusTabByOffset = (delta: number) => {\r\n      const count = processedItems.length;\r\n      if (!count) return;\r\n      const idx = currentIndex < 0 ? 0 : currentIndex;\r\n      moveFocus(idx, delta);\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      const isH = orientation === 'horizontal';\r\n      switch (e.key) {\r\n        case 'ArrowRight': if (isH) { e.preventDefault(); focusTabByOffset(1); } break;\r\n        case 'ArrowLeft':  if (isH) { e.preventDefault(); focusTabByOffset(-1);} break;\r\n        case 'ArrowDown':  if (!isH){ e.preventDefault(); focusTabByOffset(1); } break;\r\n        case 'ArrowUp':    if (!isH){ e.preventDefault(); focusTabByOffset(-1);} break;\r\n        case 'Home': {\r\n          e.preventDefault();\r\n          const first = processedItems.find(i => !i.disabled) ?? processedItems[0];\r\n          const idx = processedItems.indexOf(first);\r\n          onSelect(first.processedValue);\r\n          if (idx >= 0) tabsRef.current[idx]?.focus();\r\n          break;\r\n        }\r\n        case 'End': {\r\n          e.preventDefault();\r\n          const rev = [...processedItems].reverse();\r\n          const last = rev.find(i => !i.disabled) ?? rev[0];\r\n          const idx = processedItems.indexOf(last);\r\n          onSelect(last.processedValue);\r\n          if (idx >= 0) tabsRef.current[idx]?.focus();\r\n          break;\r\n        }\r\n        case 'Enter':\r\n        case ' ': {\r\n          if (activation === 'manual') {\r\n            e.preventDefault();\r\n            const target = e.target as HTMLElement;\r\n            const val = target.getAttribute('data-value');\r\n            if (val) onSelect(val, true);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    const rootClass = cn(\r\n      css('tabs'),\r\n      position && css(`tabs--${position}`),\r\n      scrollable && css('tabs--scrollable'),\r\n      className\r\n    );\r\n\r\n    const listClass = cn(css('tablist'));\r\n\r\n    // measure tabs and compute close button positions\r\n    useLayoutEffect(() => {\r\n      const container = tablistRef.current;\r\n      if (!container) return;\r\n\r\n      const measure = () => {\r\n        const containerRect = container.getBoundingClientRect();\r\n        const positions: Record<string, { left: number; top: number }> = {};\r\n\r\n        processedItems.forEach((item, index) => {\r\n          if (!(closable || item.closable)) return;\r\n          const el = tabsRef.current[index];\r\n          if (!el) return;\r\n          const r = el.getBoundingClientRect();\r\n          const left = r.left - containerRect.left + r.width - 8; // align near right edge\r\n          const top = r.top - containerRect.top + r.height / 2; // center vertically\r\n          positions[item.processedValue] = { left, top };\r\n        });\r\n\r\n        setClosePositions(positions);\r\n      };\r\n\r\n      measure();\r\n\r\n      // observe resizes\r\n      const ro = typeof ResizeObserver !== 'undefined' ? new ResizeObserver(measure) : null;\r\n      if (ro) {\r\n        ro.observe(container);\r\n        tabsRef.current.forEach(el => el && ro.observe(el));\r\n      }\r\n\r\n      window.addEventListener('resize', measure);\r\n      return () => {\r\n        window.removeEventListener('resize', measure);\r\n        if (ro) {\r\n          ro.disconnect();\r\n        }\r\n      };\r\n    }, [processedItems, closable, size, position, variant]);\r\n\r\n    return (\r\n      <div id={internalId} className={rootClass} data-testid={dataTestId || 'test-tabs'} {...rest}>\r\n        <div\r\n          role=\"tablist\"\r\n          aria-label={ariaLabel}\r\n          aria-labelledby={ariaLabelledBy}\r\n          aria-describedby={ariaDescribedBy}\r\n          aria-orientation={orientation as 'horizontal' | 'vertical'}\r\n          className={listClass}\r\n          onKeyDown={handleKeyDown}\r\n          ref={tablistRef}\r\n        >\r\n          {processedItems.map((item, index) => {\r\n            const selected = item.processedValue === current;\r\n            const tabId = `${internalId}-tab-${item.processedValue}`;\r\n            const panelId = `${internalId}-panel-${item.processedValue}`;\r\n            // Move tab-related classes and status onto the actual tab element (button)\r\n            const tabClass = cn(\r\n              css('tab'),\r\n              size && css(`tab--${size}`),\r\n              variant && css(`tab--${variant}`),\r\n              selected && css('tab--active'),\r\n              item.disabled && css('tab--disabled'),\r\n              item.closable && css('tab--closable')\r\n            );\r\n\r\n            return (\r\n              <React.Fragment key={item.processedKey}>\r\n                <button\r\n                  ref={(el) => { tabsRef.current[index] = el; }}\r\n                  id={tabId}\r\n                  role=\"tab\"\r\n                  type=\"button\"\r\n                  className={cn(tabClass, css('tab__content'))}\r\n                  data-value={item.processedValue}\r\n                  aria-selected={selected}\r\n                  aria-controls={panelId}\r\n                  aria-disabled={item.disabled || undefined}\r\n                  tabIndex={selected ? 0 : -1}\r\n                  data-status={item.disabled ? 'disabled' : selected ? 'active' : 'inactive'}\r\n                  onClick={() => !item.disabled && onSelect(item.processedValue, activation === 'auto')}\r\n                  disabled={item.disabled}\r\n                >\r\n                  {item.icon && <span className={css('tab__icon')} aria-hidden=\"true\">{item.icon}</span>}\r\n                  <span className={css('tab__label')}>{item.label}</span>\r\n                  {item.badge && (\r\n                    <span className={css('tab__badge')} aria-hidden=\"true\">{item.badge}</span>\r\n                  )}\r\n                </button>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n          {addable && (\r\n            <button\r\n              type=\"button\"\r\n              className={css('tab-add')}\r\n              aria-label=\"Add tab\"\r\n              data-testid={`${dataTestId || 'test-tabs'}-add-button`}\r\n              onClick={() => {\r\n                onTabAdd?.();\r\n              }}\r\n            >\r\n              +\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Separate container for close buttons so they are not direct children of the tablist.\r\n            Close buttons are absolutely positioned to visually align with their tabs. */}\r\n        <div className={css('tab-close-container')} aria-hidden={true}>\r\n          {processedItems.map((item) => {\r\n            if (!(closable || item.closable)) return null;\r\n            const pos = closePositions[item.processedValue];\r\n            const style: React.CSSProperties = pos ? {\r\n              position: 'absolute',\r\n              left: `${pos.left}px`,\r\n              top: `${pos.top}px`,\r\n              transform: 'translate(-50%, -50%)'\r\n            } : { visibility: 'hidden' };\r\n\r\n            return (\r\n              <button\r\n                key={`close-${item.processedKey}`}\r\n                type=\"button\"\r\n                className={cn(css('tab__close'), css('tab__close--positioned'))}\r\n                aria-label={`Close ${item.label}`}\r\n                data-testid={`${dataTestId || 'test-tabs'}-close-${item.processedValue}`}\r\n                onClick={(e) => { e.stopPropagation(); onTabClose?.(item.processedValue); }}\r\n                style={style}\r\n              >\r\n                ×\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {processedItems.map(item => {\r\n          const selected = item.processedValue === current;\r\n          const tabId = `${internalId}-tab-${item.processedValue}`;\r\n          const panelId = `${internalId}-panel-${item.processedValue}`;\r\n          const panelClass = cn(css('panel'), animated && css('panel--animated'));\r\n\r\n          const isLoaded = !lazy ? true : loaded[item.processedValue] === true;\r\n          const showLoading = lazy && selected && !isLoaded;\r\n\r\n          return (\r\n            <div\r\n              key={`panel-${item.processedKey}`}\r\n              id={panelId}\r\n              role=\"tabpanel\"\r\n              aria-labelledby={tabId}\r\n              hidden={!selected}\r\n              tabIndex={-1}\r\n              className={panelClass}\r\n            >\r\n              {showLoading && (\r\n                <div className={css('panel__loading')} aria-label=\"Loading content\">\r\n                  {loadingComponent || <span>Loading tab content</span>}\r\n                </div>\r\n              )}\r\n              {!showLoading && (typeof item.content === 'function' ? item.content({ value: item.processedValue, selected }) : item.content)}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DynTabs;\r\nDynTabs.displayName = 'DynTabs';\r\n","/**\r\n * DynToolbar TypeScript type definitions\r\n * Toolbar component types for action buttons and responsive layouts\r\n */\r\n\r\nimport type { ReactNode } from 'react';\r\nimport type { DynBadgeColor, DynBadgeVariant } from '../DynBadge/DynBadge.types';\r\nimport type { BaseComponentProps, AccessibilityProps } from '../../types';\r\n\r\nexport type ToolbarBadge =\r\n  | number\r\n  | string\r\n  | {\r\n      count?: number;\r\n      value?: number;\r\n      label?: ReactNode;\r\n      color?: DynBadgeColor;\r\n      variant?: DynBadgeVariant;\r\n      maxCount?: number;\r\n      showZero?: boolean;\r\n    };\r\n\r\nexport interface ToolbarItem {\r\n  id: string;\r\n  label?: string;\r\n  icon?: string | React.ReactNode;\r\n  type?: 'button' | 'separator' | 'dropdown' | 'search' | 'custom';\r\n  action?: () => void;\r\n  disabled?: boolean;\r\n  visible?: boolean;\r\n  items?: ToolbarItem[]; // for dropdown submenus\r\n  component?: React.ReactNode; // for custom components\r\n  tooltip?: string;\r\n  badge?: ToolbarBadge;\r\n}\r\n\r\nexport interface DynToolbarProps extends BaseComponentProps, AccessibilityProps {\r\n  /** Toolbar items to display */\r\n  items: ToolbarItem[];\r\n  \r\n  /** Visual variant */\r\n  variant?: 'default' | 'minimal' | 'floating';\r\n  \r\n  /** Size variant */\r\n  size?: 'small' | 'medium' | 'large';\r\n  \r\n  /** Position on screen */\r\n  position?: 'top' | 'bottom' | 'fixed-top' | 'fixed-bottom';\r\n  \r\n  /** Enable responsive behavior */\r\n  responsive?: boolean;\r\n  \r\n  /** Show overflow menu for hidden items */\r\n  overflowMenu?: boolean;\r\n  \r\n  /** Number of items before overflow kicks in */\r\n  overflowThreshold?: number;\r\n  \r\n  /** Show labels on toolbar items */\r\n  showLabels?: boolean;\r\n  \r\n  /** Additional CSS classes */\r\n  className?: string;\r\n  \r\n  /** CSS class for individual items */\r\n  itemClassName?: string;\r\n  \r\n  /** Item click handler */\r\n  onItemClick?: (item: ToolbarItem) => void;\r\n  \r\n  /** Overflow menu toggle handler */\r\n  onOverflowToggle?: (isOpen: boolean) => void;\r\n  \r\n  /** Children elements for custom toolbar content */\r\n  children?: React.ReactNode;\r\n  \r\n  /** Component ID */\r\n  id?: string;\r\n  \r\n  /** ARIA label for toolbar */\r\n  'aria-label'?: string;\r\n  \r\n  /** ARIA labelledby for toolbar */\r\n  'aria-labelledby'?: string;\r\n  \r\n  /** Test ID */\r\n  'data-testid'?: string;\r\n}\r\n\r\nexport interface DynToolbarRef {\r\n  openOverflow: () => void;\r\n  closeOverflow: () => void;\r\n  toggleOverflow: () => void;\r\n  refreshLayout: () => void;\r\n}\r\n\r\n// Default configuration\r\nexport const TOOLBAR_DEFAULTS = {\r\n  variant: 'default' as const,\r\n  size: 'medium' as const,\r\n  position: 'top' as const,\r\n  responsive: true,\r\n  overflowMenu: true,\r\n  overflowThreshold: 3,\r\n  showLabels: true\r\n};\r\n\r\n// Toolbar item types\r\nexport const TOOLBAR_ITEM_TYPES = {\r\n  BUTTON: 'button',\r\n  SEPARATOR: 'separator', \r\n  DROPDOWN: 'dropdown',\r\n  SEARCH: 'search',\r\n  CUSTOM: 'custom'\r\n} as const;","/**\r\n * DynToolbar - Responsive Toolbar Component\r\n * Flexible toolbar with action buttons, responsive overflow, and multiple layout variants\r\n */\r\n\r\nimport React, {\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport { DynToolbarProps, ToolbarItem, DynToolbarRef, TOOLBAR_DEFAULTS } from './DynToolbar.types';\r\nimport { DynIcon } from '../DynIcon';\r\nimport { DynBadge } from '../DynBadge';\r\nimport styles from './DynToolbar.module.css';\r\n\r\nconst PICTOGRAPH_REGEX = /\\p{Extended_Pictographic}/u;\r\nconst SYMBOL_ONLY_REGEX = /^[\\p{S}\\p{P}]{1,3}$/u;\r\n\r\nconst isSymbolicIcon = (icon: string) => {\r\n  if (!icon) {\r\n    return false;\r\n  }\r\n\r\n  return PICTOGRAPH_REGEX.test(icon) || SYMBOL_ONLY_REGEX.test(icon);\r\n};\r\n\r\nconst DynToolbar = forwardRef<DynToolbarRef, DynToolbarProps>((\r\n  {\r\n    items = [],\r\n    variant = TOOLBAR_DEFAULTS.variant,\r\n    size = TOOLBAR_DEFAULTS.size,\r\n    position = TOOLBAR_DEFAULTS.position,\r\n    responsive = TOOLBAR_DEFAULTS.responsive,\r\n    overflowMenu = TOOLBAR_DEFAULTS.overflowMenu,\r\n    overflowThreshold = TOOLBAR_DEFAULTS.overflowThreshold,\r\n    showLabels = TOOLBAR_DEFAULTS.showLabels,\r\n    className,\r\n    itemClassName,\r\n    onItemClick,\r\n    onOverflowToggle\r\n  },\r\n  ref\r\n) => {\r\n  const [visibleItems, setVisibleItems] = useState<ToolbarItem[]>(items);\r\n  const [overflowItems, setOverflowItems] = useState<ToolbarItem[]>([]);\r\n  const [isOverflowOpen, setIsOverflowOpen] = useState(false);\r\n  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);\r\n  const toolbarRef = useRef<HTMLDivElement>(null);\r\n  const overflowRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Filter visible items\r\n  const filteredItems = useMemo(() => {\r\n    return items.filter(item => item.visible !== false);\r\n  }, [items]);\r\n\r\n  // Handle responsive layout\r\n  const updateLayout = useCallback(() => {\r\n    if (!overflowMenu) {\r\n      setVisibleItems(filteredItems);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    if (!responsive) {\r\n      setVisibleItems(filteredItems);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    const thresholdValue = Math.max(1, overflowThreshold);\r\n    const hasThresholdOverflow = filteredItems.length > thresholdValue;\r\n\r\n    const applyThreshold = () => {\r\n      if (!hasThresholdOverflow) {\r\n        setVisibleItems(filteredItems);\r\n        setOverflowItems([]);\r\n        return;\r\n      }\r\n\r\n      const maxVisible = Math.max(1, Math.min(thresholdValue, filteredItems.length - 1));\r\n      setVisibleItems(filteredItems.slice(0, maxVisible));\r\n      setOverflowItems(filteredItems.slice(maxVisible));\r\n    };\r\n\r\n    if (!toolbarRef.current) {\r\n      applyThreshold();\r\n      return;\r\n    }\r\n\r\n    const toolbarWidth = toolbarRef.current.offsetWidth;\r\n\r\n    // If toolbar has no measurable width (jsdom environment), fall back to\r\n    // threshold handling so tests and SSR render deterministically.\r\n    if (!toolbarWidth || toolbarWidth === 0) {\r\n      applyThreshold();\r\n      return;\r\n    }\r\n\r\n    const itemElements = toolbarRef.current.querySelectorAll('[data-toolbar-item]');\r\n\r\n    if (itemElements.length === 0 || filteredItems.length === 0) {\r\n      setVisibleItems([]);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    const padding = 32;\r\n    const measureVisibleItems = (reserveOverflowButton: boolean) => {\r\n      const overflowButtonWidth = reserveOverflowButton ? 48 : 0;\r\n      let totalWidth = 0;\r\n      let count = 0;\r\n\r\n      for (let i = 0; i < itemElements.length; i++) {\r\n        const itemWidth = itemElements[i].getBoundingClientRect().width;\r\n        if (totalWidth + itemWidth + overflowButtonWidth + padding <= toolbarWidth) {\r\n          totalWidth += itemWidth;\r\n          count++;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return count;\r\n    };\r\n\r\n    let measuredVisible = measureVisibleItems(hasThresholdOverflow);\r\n    const needsOverflowByWidth = measuredVisible < filteredItems.length;\r\n    const shouldShowOverflow = hasThresholdOverflow || needsOverflowByWidth;\r\n\r\n    if (shouldShowOverflow && !hasThresholdOverflow) {\r\n      measuredVisible = measureVisibleItems(true);\r\n    }\r\n\r\n    if (!shouldShowOverflow) {\r\n      setVisibleItems(filteredItems);\r\n      setOverflowItems([]);\r\n      return;\r\n    }\r\n\r\n    const maxVisible = hasThresholdOverflow\r\n      ? Math.max(1, Math.min(thresholdValue, filteredItems.length - 1))\r\n      : Math.max(1, filteredItems.length - 1);\r\n\r\n    const visibleCount = Math.max(1, Math.min(measuredVisible, maxVisible));\r\n\r\n    setVisibleItems(filteredItems.slice(0, visibleCount));\r\n    setOverflowItems(filteredItems.slice(visibleCount));\r\n  }, [filteredItems, responsive, overflowMenu, overflowThreshold]);\r\n\r\n  useEffect(() => {\r\n    updateLayout();\r\n  }, [updateLayout]);\r\n\r\n  useEffect(() => {\r\n    if (!responsive) return;\r\n\r\n    const handleResize = () => {\r\n      updateLayout();\r\n    };\r\n\r\n    let resizeObserver: ResizeObserver | null = null;\r\n\r\n    if (typeof window !== 'undefined' && typeof window.ResizeObserver === 'function') {\r\n      const candidate = new window.ResizeObserver(handleResize) as unknown;\r\n\r\n      if (\r\n        candidate &&\r\n        typeof (candidate as ResizeObserver).observe === 'function' &&\r\n        typeof (candidate as ResizeObserver).disconnect === 'function'\r\n      ) {\r\n        resizeObserver = candidate as ResizeObserver;\r\n\r\n        if (toolbarRef.current) {\r\n          resizeObserver.observe(toolbarRef.current);\r\n        }\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      resizeObserver?.disconnect();\r\n\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [responsive, updateLayout]);\r\n\r\n  // Close dropdowns when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as Node;\r\n      // Close overflow and dropdown when clicking outside the toolbar entirely\r\n      if (toolbarRef.current && !toolbarRef.current.contains(target)) {\r\n        setIsOverflowOpen(false);\r\n        setActiveDropdown(null);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openOverflow: () => {\r\n      setIsOverflowOpen(true);\r\n      onOverflowToggle?.(true);\r\n    },\r\n    closeOverflow: () => {\r\n      setIsOverflowOpen(false);\r\n      onOverflowToggle?.(false);\r\n    },\r\n    toggleOverflow: () => {\r\n      const newState = !isOverflowOpen;\r\n      setIsOverflowOpen(newState);\r\n      onOverflowToggle?.(newState);\r\n    },\r\n    refreshLayout: updateLayout\r\n  }));\r\n\r\n  const handleItemClick = useCallback((item: ToolbarItem, event?: React.MouseEvent) => {\r\n    if (item.disabled) return;\r\n\r\n    if (item.type === 'dropdown') {\r\n      event?.preventDefault();\r\n      setActiveDropdown(prev => prev === item.id ? null : item.id);\r\n      return;\r\n    }\r\n\r\n    if (item.action) {\r\n      item.action();\r\n    }\r\n\r\n    onItemClick?.(item);\r\n\r\n    // Close overflow menu after action\r\n    if (isOverflowOpen) {\r\n      setIsOverflowOpen(false);\r\n      onOverflowToggle?.(false);\r\n    }\r\n  }, [isOverflowOpen, onItemClick, onOverflowToggle]);\r\n\r\n  const handleOverflowToggle = () => {\r\n    const newState = !isOverflowOpen;\r\n    setIsOverflowOpen(newState);\r\n    onOverflowToggle?.(newState);\r\n  };\r\n\r\n  const renderBadge = useCallback((badge: ToolbarItem['badge']) => {\r\n    if (!badge) {\r\n      return null;\r\n    }\r\n\r\n    if (typeof badge === 'object') {\r\n      const count = badge.count ?? badge.value;\r\n      return (\r\n        <DynBadge\r\n          count={typeof count === 'number' ? count : undefined}\r\n          maxCount={badge.maxCount}\r\n          showZero={badge.showZero}\r\n          color={badge.color}\r\n          variant={badge.variant}\r\n          size=\"small\"\r\n        >\r\n          {badge.label}\r\n        </DynBadge>\r\n      );\r\n    }\r\n\r\n    if (typeof badge === 'number') {\r\n      return <DynBadge count={badge} size=\"small\" />;\r\n    }\r\n\r\n    return <DynBadge size=\"small\">{badge}</DynBadge>;\r\n  }, []);\r\n\r\n  const renderIconContent = useCallback((icon: ToolbarItem['icon']) => {\r\n    if (React.isValidElement(icon)) {\r\n      return icon;\r\n    }\r\n\r\n    if (typeof icon === 'string') {\r\n      const normalizedIcon = icon.trim();\r\n\r\n      if (!normalizedIcon) {\r\n        return null;\r\n      }\r\n\r\n      if (isSymbolicIcon(normalizedIcon)) {\r\n        return (\r\n          <span\r\n            className={styles['toolbar-item-icon-text']}\r\n            data-testid={`icon-${normalizedIcon}`}\r\n            aria-hidden=\"true\"\r\n          >\r\n            {normalizedIcon}\r\n          </span>\r\n        );\r\n      }\r\n\r\n      return <DynIcon icon={normalizedIcon} data-testid={`icon-${normalizedIcon}`} />;\r\n    }\r\n\r\n    if (icon == null) {\r\n      return null;\r\n    }\r\n\r\n    return icon as React.ReactNode;\r\n  }, []);\r\n\r\n  const renderToolbarItem = (item: ToolbarItem, isInOverflow = false) => {\r\n    if (item.type === 'separator') {\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          className={classNames(styles['toolbar-separator'], 'toolbar-separator')}\r\n          data-toolbar-item\r\n        />\r\n      );\r\n    }\r\n\r\n    if (item.type === 'search') {\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          className={classNames(styles['toolbar-search'], 'toolbar-search')}\r\n          data-toolbar-item\r\n        >\r\n          <input\r\n            type=\"search\"\r\n            placeholder={item.label || 'Search...'}\r\n            className={styles['search-input']}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (item.type === 'custom' && item.component) {\r\n      return (\r\n        <div\r\n          key={item.id}\r\n          className={classNames(styles['toolbar-custom'], 'toolbar-custom')}\r\n          data-toolbar-item\r\n        >\r\n          {item.component}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const itemClasses = classNames(\r\n      styles['toolbar-item'],\r\n      'toolbar-item',\r\n      {\r\n        [styles['toolbar-item-disabled']]: item.disabled,\r\n        'toolbar-item-disabled': item.disabled,\r\n        [styles['toolbar-item-active']]: activeDropdown === item.id,\r\n        'toolbar-item-active': activeDropdown === item.id,\r\n        [styles['toolbar-item-overflow']]: isInOverflow,\r\n        'toolbar-item-overflow': isInOverflow,\r\n        [styles['toolbar-item-dropdown']]: item.type === 'dropdown',\r\n        'toolbar-item-dropdown': item.type === 'dropdown'\r\n      },\r\n      itemClassName\r\n    );\r\n\r\n    const iconContent = renderIconContent(item.icon);\r\n\r\n    return (\r\n      <div key={item.id} className={styles['toolbar-item-wrapper']}>\r\n        <button\r\n          className={itemClasses}\r\n          onClick={(e) => handleItemClick(item, e)}\r\n          disabled={item.disabled}\r\n          title={item.tooltip || item.label}\r\n          data-toolbar-item\r\n          aria-label={item.label}\r\n          aria-expanded={item.type === 'dropdown' ? activeDropdown === item.id : undefined}\r\n          aria-haspopup={item.type === 'dropdown' ? 'menu' : undefined}\r\n        >\r\n          {iconContent && (\r\n            <span className={styles['toolbar-item-icon']}>\r\n              {iconContent}\r\n            </span>\r\n          )}\r\n          {showLabels && item.label && (\r\n            <span\r\n              className={styles['toolbar-item-label']}\r\n              // Make label element usable for tests that query by text — expose\r\n              // accessibility attributes on the label itself so getByText() can be\r\n              // used in tests to inspect ARIA attributes and tooltips.\r\n              title={item.tooltip || item.label}\r\n              aria-label={item.label}\r\n              aria-haspopup={item.type === 'dropdown' ? 'menu' : undefined}\r\n              aria-expanded={item.type === 'dropdown' ? activeDropdown === item.id : undefined}\r\n              tabIndex={0}\r\n              onKeyDown={(e) => {\r\n                if (e.key === 'Enter' || e.key === ' ') {\r\n                  e.preventDefault();\r\n                  handleItemClick(item);\r\n                }\r\n              }}\r\n            >\r\n              {item.label}\r\n            </span>\r\n          )}\r\n          {item.badge && (() => {\r\n            // compute simple numeric count for tests\r\n            let count: number | string | undefined;\r\n            if (typeof item.badge === 'number') count = item.badge;\r\n            else if (typeof item.badge === 'object') count = item.badge.count ?? item.badge.value;\r\n\r\n            return (\r\n              <span\r\n                className={styles['toolbar-item-badge']}\r\n                data-testid=\"badge\"\r\n                {...(count !== undefined ? { 'data-count': String(count) } : {})}\r\n              >\r\n                {renderBadge(item.badge)}\r\n              </span>\r\n            );\r\n          })()}\r\n          {item.type === 'dropdown' && (\r\n            <span className={styles['toolbar-dropdown-arrow']}>\r\n              <DynIcon icon=\"dyn-icon-chevron-down\" />\r\n            </span>\r\n          )}\r\n        </button>\r\n\r\n        {/* Dropdown menu */}\r\n        {item.type === 'dropdown' && item.items && activeDropdown === item.id && (\r\n          <div className={styles['toolbar-dropdown-menu']} role=\"menu\">\r\n            {item.items.map(subItem => (\r\n              <button\r\n                key={subItem.id}\r\n                className={styles['toolbar-dropdown-item']}\r\n                onClick={() => handleItemClick(subItem)}\r\n                disabled={subItem.disabled}\r\n                role=\"menuitem\"\r\n              >\r\n                {subItem.icon && (\r\n                  <span className={styles['toolbar-item-icon']}>\r\n                    {typeof subItem.icon === 'string' ? (\r\n                      <DynIcon icon={subItem.icon} />\r\n                    ) : (\r\n                      subItem.icon\r\n                    )}\r\n                  </span>\r\n                )}\r\n                <span className={styles['toolbar-item-label']}>\r\n                  {subItem.label}\r\n                </span>\r\n                {subItem.badge && (\r\n                  <span className={styles['toolbar-item-badge']}>\r\n                    {renderBadge(subItem.badge)}\r\n                  </span>\r\n                )}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const toolbarClasses = classNames(\r\n    styles['dyn-toolbar'],\r\n    'dyn-toolbar',\r\n    {\r\n      [styles[`variant-${variant}`]]: variant,\r\n      [`variant-${variant}`]: variant,\r\n      [styles[`size-${size}`]]: size,\r\n      [`size-${size}`]: size,\r\n      [styles[`position-${position}`]]: position,\r\n      [`position-${position}`]: position,\r\n      [styles['responsive']]: responsive,\r\n      'responsive': responsive,\r\n      [styles['show-labels']]: showLabels,\r\n      'show-labels': showLabels\r\n    },\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div className={toolbarClasses} ref={toolbarRef} role=\"toolbar\">\r\n      <div className={styles['toolbar-content']}>\r\n        <div className={styles['toolbar-items']}>\r\n          {visibleItems.map(item => renderToolbarItem(item))}\r\n        </div>\r\n\r\n        {overflowItems.length > 0 && (\r\n          <div className={styles['toolbar-overflow']} ref={overflowRef}>\r\n            <button\r\n              className={classNames(\r\n                styles['toolbar-overflow-button'],\r\n                'toolbar-overflow-button',\r\n                {\r\n                  [styles['active']]: isOverflowOpen,\r\n                  'active': isOverflowOpen\r\n                },\r\n                itemClassName\r\n              )}\r\n              onClick={handleOverflowToggle}\r\n              aria-haspopup=\"menu\"\r\n              aria-expanded={isOverflowOpen}\r\n              aria-label=\"More actions\"\r\n              title=\"More actions\"\r\n            >\r\n              <DynIcon icon=\"more-horizontal\" />\r\n            </button>\r\n\r\n            {isOverflowOpen && (\r\n              <div className={styles['toolbar-overflow-menu']} role=\"menu\">\r\n                {overflowItems.map(item => renderToolbarItem(item, true))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nDynToolbar.displayName = 'DynToolbar';\r\n\r\nexport default DynToolbar;\r\nexport { DynToolbar };\r\n","import * as React from 'react';\r\n\r\nexport type Theme = 'light' | 'dark';\r\n\r\nexport type ThemeContextValue = {\r\n  theme: Theme;\r\n  setTheme: (theme: Theme) => void;\r\n  availableThemes: Theme[];\r\n};\r\n\r\nexport const ThemeContext = React.createContext<ThemeContextValue | null>(null);\r\n\r\nexport type ThemeProviderProps = {\r\n  initialTheme?: Theme;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst AVAILABLE_THEMES: Theme[] = ['light', 'dark'];\r\n\r\nexport function ThemeProvider({ initialTheme = 'light', children }: ThemeProviderProps) {\r\n  const [theme, setThemeState] = React.useState<Theme>(initialTheme);\r\n\r\n  const setTheme = React.useCallback((newTheme: Theme) => {\r\n    if (AVAILABLE_THEMES.includes(newTheme)) {\r\n      setThemeState(newTheme);\r\n    }\r\n  }, []);\r\n\r\n  // Apply theme to document when theme changes\r\n  React.useEffect(() => {\r\n    const root = document.documentElement;\r\n    \r\n    // Remove existing theme classes\r\n    AVAILABLE_THEMES.forEach(t => {\r\n      root.classList.remove(`theme-${t}`);\r\n    });\r\n    \r\n    // Add new theme class\r\n    root.classList.add(`theme-${theme}`);\r\n    \r\n    // Set data attribute for CSS selector support\r\n    root.setAttribute('data-theme', theme);\r\n  }, [theme]);\r\n\r\n  // Set initial theme on mount\r\n  React.useEffect(() => {\r\n    setTheme(initialTheme);\r\n  }, [initialTheme, setTheme]);\r\n\r\n  const contextValue = React.useMemo(() => ({\r\n    theme,\r\n    setTheme,\r\n    availableThemes: AVAILABLE_THEMES,\r\n  }), [theme, setTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={contextValue}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useTheme = () => {\r\n  const context = React.useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};","import { useContext } from 'react';\r\nimport { ThemeContext } from '../theme/ThemeProvider';\r\nimport type { ThemeContextValue } from '../theme/ThemeProvider';\r\n\r\n/**\r\n * Hook for accessing theme context\r\n * @returns Theme context value with current theme and theme utilities\r\n */\r\nexport const useTheme = (): ThemeContextValue => {\r\n  const context = useContext(ThemeContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\n/**\r\n * Hook for getting CSS custom properties from current theme\r\n * @returns Object with CSS custom properties for current theme\r\n */\r\nexport const useThemeVars = () => {\r\n  const { theme } = useTheme();\r\n  \r\n  const cssVars: Record<string, string> = {};\r\n  \r\n  // Basic theme variables\r\n  cssVars['--theme-name'] = theme;\r\n  cssVars['--theme-mode'] = theme === 'dark' ? 'dark' : 'light';\r\n  \r\n  return cssVars;\r\n};"],"names":["process","env","NODE_ENV","jsxRuntimeModule","exports","f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","REACT_MODULE_REFERENCE","React","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","ReactSharedInternals","error","format","_len2","arguments","length","args","Array","_key2","level","stack","ReactDebugCurrentFrame","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","apply","console","printWarning","getContextName","displayName","getComponentNameFromType","tag","name","_context","outerType","innerType","wrapperName","functionName","getWrappedName","render","outerName","lazyComponent","payload","_payload","init","_init","x","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","assign","disabledDepth","disabledLog","__reactDisabledLog","prefix","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","Error","match","trim","componentFrameCache","reentry","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","control","frame","get","previousDispatcher","previousPrepareStackTrace","prepareStackTrace","log","info","warn","group","groupCollapsed","groupEnd","configurable","enumerable","value","writable","defineProperties","Fake","defineProperty","set","Reflect","sample","sampleLines","split","controlLines","s","_frame","replace","includes","syntheticFrame","describeUnknownElementTypeFrameInDEV","isReactComponent","loggedTypeFailures","setCurrentlyValidatingElement","element","owner","_source","setExtraStackFrame","isArrayImpl","isArray","testStringCoercion","checkKeyStringCoercion","willCoercionThrow","toStringTag","constructor","typeName","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","RESERVED_PROPS","jsxDEV","config","maybeKey","self","propName","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","hasValidRef","stateNode","componentName","warnIfStringRefCannotBeAutoConverted","warnAboutAccessingKey","defineKeyPropWarningGetter","warnAboutAccessingRef","defineRefPropWarningGetter","_store","freeze","ReactElement","propTypesMisspellWarningShown","ReactCurrentOwner$1","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement$1","isValidElement","object","getDeclarationErrorAddendum","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","node","i","child","iteratorFn","maybeIterable","maybeIterator","getIteratorFn","entries","step","next","done","validatePropTypes","propTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","checkPropTypes","PropTypes","getDefaultProps","isReactClassApproved","didWarnAboutKeySpread","jsxWithValidation","isStaticChildren","validType","getModuleId","isValidElementType","keys","typeString","sourceInfo","fileName","lineNumber","getSourceInfoErrorAddendum","children","filter","beforeExample","join","fragment","validateFragmentProps","reactJsxRuntime_development","Fragment","classNames","classes","arg","push","nested","cn","counters","generateId","nextCount","DYN_BADGE_COLORS","processIconString","iconStr","dictionary","iconTokens","token","Boolean","baseClass","processedClass","forEach","index","dictValue","startsWith","iconClass","DEFAULT_ICON_DICTIONARY","user","home","settings","ok","close","warning","minus","plus","search","edit","delete","menu","calendar","clock","mail","IconDictionaryContext","createContext","useIconDictionary","context","useContext","iconRegistry","check","createElement","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","cx","cy","r","download","points","help","DYN_ICON_DEFAULT_PROPS","size","spin","disabled","SIZE_CLASS_MAP","small","styles","medium","large","TONE_CLASS_MAP","success","danger","resolveRegistryIcon","iconKey","normalizedKey","registryIcon","DynIcon","forwardRef","icon","tone","color","onClick","className","style","id","dataTestId","role","rest","tabIndex","domProps","normalizedIcon","useMemo","shouldUseRegistry","hasDictionaryMatch","some","hasDirectClass","hasFontClass","processedIconClasses","resolvedSizeClass","inlineDimensionStyle","width","height","fontSize","mergedStyle","isInteractive","rootClassName","dynIcon","spinning","ariaRole","shouldHideFromScreenReader","ariaHidden","content","dynIconSvg","dynIconFallback","dynIconCustom","jsxRuntimeExports","event","DYN_BUTTON_DEFAULT_PROPS","getStyleClass","DynButton","label","kind","loading","loadingText","fullWidth","hideOnMobile","iconOnlyOnMobile","onBlur","onKeyDown","userOnKeyDown","ariaLabel","ariaDescribedBy","ariaLabelledBy","ariaExpanded","ariaControls","ariaPressed","internalId","trimmedLabel","hasLabel","hasChildrenContent","Children","count","isIconOnly","isDisabled","iconAriaLabel","generateIconAriaLabel","computedAriaLabel","normalizeAriaLabel","normalizedLoadingText","iconSizeToken","iconElement","childrenContent","trimmedChildren","labelElement","kindClass","charAt","toUpperCase","slice","sizeClass","dangerClass","loadingClass","iconOnlyClass","fullWidthClass","hideOnMobileClass","iconOnlyOnMobileClass","buttonClassName","preventDefault","stopPropagation","currentTarget","click","opacity","DYN_AVATAR_STATUS_LABELS","online","offline","away","busy","DefaultFallbackIcon","xmlns","DynAvatar","src","alt","shape","initials","status","fallback","imageLoading","imageProps","imageLoaded","setImageLoaded","useState","imageError","setImageError","displayInitials","word","showImage","showFallback","isLoadingState","shapeClass","statusClass","clickableClass","errorClass","statusLabel","accessibleLabelBase","accessibleLabel","avatarClasses","imageBaseClass","imageLoadingClass","imageLoadedClass","imageClasses","onLoad","onError","sizeClassNameMap","variantClassNameMap","solid","soft","outline","dot","colorClassNameMap","primary","secondary","neutral","positionClassNameMap","topRight","topLeft","bottomRight","bottomLeft","DEFAULT_MAX_COUNT","DynBadge","variant","position","startIcon","endIcon","maxCount","showZero","animated","pulse","countDescription","roleProp","tabIndexProp","ariaLive","inlineStyle","restProps","numericCount","hasCount","hasChildren","displayCount","displayContent","semanticColorClass","badgeClasses","ariaLabelValue","ariaLiveValue","roleValue","tabIndexValue","dataTestIdValue","customColorStyle","badgeStyle","handleClick","useCallback","handleKeyDown","defaultPrevented","showTextContent","Number","FILTERED_PROPS","Set","isToken","v","toTokenVar","xs","sm","md","lg","xl","as","padding","px","py","pt","pr","pb","pl","mx","my","mt","mr","mb","ml","radius","borderRadius","customBorderRadius","shadow","border","background","bg","backgroundColor","align","justify","direction","flexDirection","wrap","gap","rowGap","columnGap","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","alignContent","display","textAlign","overflow","overflowX","overflowY","maxWidth","maxHeight","minWidth","minHeight","top","right","bottom","left","zIndex","focusOnMount","interactive","ariaLiveMessage","ariaLivePoliteness","cssVars","hideOnTablet","hideOnDesktop","mobileOnly","tabletOnly","desktopOnly","Component","fromEntries","elementRef","useRef","legacyAliases","finalDirection","finalBackground","finalRadius","basePadding","styleVars","useEffect","queueMicrotask","_b","_a","focus","liveRegionId","describedBy","items","separator","customSeparator","maxItems","showEllipsis","navigationLabel","onItemClick","onEllipsisClick","expanded","controlledExpanded","linkComponent","LinkComponent","enableStructuredData","internalExpanded","setInternalExpanded","generatedId","itemsSignature","href","navId","totalItems","shouldCollapse","visibleItems","originalIndex","firstItem","lastItem","showWhenCollapsed","hiddenItemCount","hasHiddenItems","handleEllipsisClick","handleItemClick","renderSeparator","separatorClasses","breadcrumbSeparator","renderItemContent","labelProps","breadcrumbIcon","breadcrumbText","renderItem","visibleItem","array","isLast","isCurrent","isLink","listItemClasses","breadcrumbItem","listItemProps","itemProp","itemScope","itemType","itemContent","breadcrumbLink","linkProps","breadcrumbCurrent","breadcrumbStatic","renderEllipsis","breadcrumbClasses","breadcrumb","navStructuredDataProps","breadcrumbList","DYN_CHART_DEFAULT_PROPS","data","colors","showLegend","showTooltip","showGrid","DEFAULT_PADDING","FALLBACK_COLORS","EMPTY_DATA_RANGES","minX","maxX","minY","maxY","normalizeSeries","palette","isSeriesCollection","series","normalizeAngle","angle","twoPi","Math","PI","normalized","typeClassNameMap","line","bar","pie","area","title","subtitle","xAxis","yAxis","ariaDescription","canvasRef","tooltipTargetsRef","tooltipState","setTooltipState","visible","y","instanceId","useId","titleId","subtitleId","descriptionId","normalizedData","chartDimensions","chartWidth","max","chartHeight","totalWidth","totalHeight","calculateChartDimensions","dataRanges","seriesCollection","axis","min","POSITIVE_INFINITY","NEGATIVE_INFINITY","point","isFinite","calculateDataRanges","legendItems","seriesIndex","emptyStateMessage","getEmptyStateMessage","reduce","total","sum","abs","hideTooltip","prev","findTooltipTarget","target","hypot","dx","centerX","dy","centerY","atan2","start","startAngle","end","endAngle","handleMouseMove","offsetX","offsetY","nativeEvent","nextState","percentage","handleMouseLeave","drawGrid","ctx","save","strokeStyle","lineWidth","setLineDash","beginPath","moveTo","lineTo","maxDataPoints","stepCount","restore","drawAxes","fillStyle","font","fillText","translate","rotate","toFixed","drawLineOrAreaChart","yRange","lineCap","lineJoin","lastX","firstX","baseY","closePath","globalAlpha","arc","drawBarChart","groupWidth","barWidth","barSpacing","individualWidth","barHeight","fillRect","drawPieChart","dataPoints","currentAngle","sliceAngle","nextAngle","labelAngle","labelX","cos","labelY","sin","canvas","getContext","clearRect","canvasAriaLabel","onMouseMove","onMouseLeave","DYN_FIELD_CONTAINER_DEFAULT_PROPS","showValidation","DynFieldContainer","required","optional","helpText","errorText","htmlFor","dataTestIdProp","containerClasses","errorId","helpId","labelId","useDynFieldValidation","validation","customError","setError","isValid","validate","async","rule","errorMessage","test","URL","regex","RegExp","validator","clearError","validators","email","url","minLength","maxLength","pattern","DYN_CHECKBOX_DEFAULT_PROPS","DynCheckbox","readonly","checked","checkedProp","indeterminate","onChange","onFocus","setChecked","checkboxRef","fallbackId","fieldId","validationOptions","resolvedError","useImperativeHandle","clear","getValue","setValue","newValue","booleanValue","checkboxClasses","wrapperClasses","describedById","visualState","fieldContainerProps","readOnly","nextValue","DYN_CONTAINER_DEFAULT_PROPS","toPascalCase","SPACING_TOKENS","none","MAX_WIDTH_TOKENS","full","resolveSpacingValue","DynContainer","spacing","bordered","layout","margin","noBorder","noPadding","resolvedBordered","hasTitleContent","resolvedMaxWidth","resolveMaxWidth","resolvedPadding","resolvedMargin","containerStyle","directionClass","spacingClass","backgroundClass","alignClass","justifyClass","containerClassName","root","layoutFixed","withTitle","header","useDynDateParser","locale","customParser","displayValue","setDisplayValue","formatDate","date","formatStr","day","getDate","toString","padStart","month","getMonth","year","getFullYear","parseDate","dateStr","today","Date","toLowerCase","yesterday","setDate","tomorrow","cleanStr","parseInt","substr","parsed","isNaN","getTime","isValidDate","getRelativeDescription","setHours","targetDate","diffTime","diffDays","floor","DATE_FORMATS","ISO","short","long","sizeClassMap","DynDatePicker","idProp","placeholder","propValue","minDate","maxDate","_children","inputId","dropdownId","containerRef","inputRef","isOpen","setIsOpen","focused","setFocused","parseExternalValue","input","candidate","handleDocumentClick","contains","document","addEventListener","removeEventListener","emitChange","handleInputChange","inputValue","parsedDate","handleCalendarToggle","handleTodayClick","handleClearClick","handleBlur","handleFocus","fieldError","inputClasses","relativeText","DYN_DIVIDER_DEFAULT_PROPS","DynDivider","labelPosition","thickness","lineStyle","orientation","labelContent","thicknessClass","styleClass","colorClass","labelPositionClass","dividerClassName","withLabel","DYN_GAUGE_DEFAULT_PROPS","unit","ranges","showValue","showRanges","rounded","gaugeDimensionsMap","circle","clampGaugeValue","findRangeForValue","find","range","from","to","componentId","animationFrameRef","currentValueRef","gaugeDimensions","resolvedTitle","safeValue","numberFormatter","Intl","NumberFormat","maximumFractionDigits","formatValue","val","formattedNumber","trimmedUnit","getColorForValue","drawGauge","sweepAngle","span","EPSILON","normalizedValue","currentColor","rangeStart","rangeEnd","isMajorTick","tickWidth","outerRadius","innerRadius","startX","startY","endX","endY","labelRadius","tickValue","textBaseline","needleAngle","needleLength","needleX","needleY","animateToValue","clampedTarget","startValue","distance","startTime","timestamp","elapsed","progress","easedProgress","pow","requestAnimationFrame","cancelAnimationFrame","currentRange","DYN_GRID_DEFAULT_PROPS","striped","hoverable","sortable","filterable","selectable","selectedKeys","emptyText","headerAlignClassMap","center","cellAlignClassMap","DynGrid","columns","onSelectionChange","onSort","onFilter","pagination","selectionName","selectionMode","sortConfig","setSortConfig","resolvedSelectedKeys","selectedRows","setSelectedRows","visibleColumns","column","hidden","getRowKey","record","rowKey","handleSort","columnKey","col","getSelectedRowData","rowIndex","findIndex","handleRowSelect","selected","newSelection","handleSelectAll","allKeys","renderCell","isAllSelected","every","isSelectionIndeterminate","selectedCount","gridClassName","scope","isSorted","headerAlignmentClass","isSelected","showTotal","pageSize","ceil","useDynMask","mask","initialValue","formatModel","maskedValue","setMaskedValue","applyMask","unmaskValue","handleMaskedChange","maskedResult","cleanValue","valueIndex","maskChar","MASK_PATTERNS","phone","phoneWithCountry","cpf","cnpj","cep","creditCard","time","currency","DynInput","showSpinButtons","validationRules","maskFormatModel","showClearButton","showCleanButton","currencyConfig","isCurrencyType","resolvedCurrencyConfig","precision","currencyCode","thousandSeparator","decimalSeparator","showSymbol","symbol","symbolPosition","autoFormat","symbolSpacing","defaults","parts","minimumFractionDigits","formatToParts","part","decimal","_c","currencyIndex","nextPart","previousPart","deriveCurrencyDefaults","resolveCurrencyConfig","setInputValue","initializeInputValue","generatedIdRef","random","isReadOnly","fieldHelpText","shouldShowClearButton","normalizedValidationRules","collected","rules","clearValidationError","resolvedMaskPattern","resolvedMaskFormatModel","blur","parseCurrencyLikeValue","numericValue","roundToPrecision","formattedValue","formatCurrencyValue","formatPlainCurrencyValue","stringValue","getElement","mergedCurrencyConfig","showCurrencyCode","rawValue","valueAsString","sanitized","escapeRegExp","allowedSeparator","dotMatches","decimalMarker","digitsAfterLastDot","lastIndexOf","escapedDecimal","lastDecimalIndex","before","after","minusIndex","indexOf","integerPart","decimalParts","handleCurrencyChange","notifyChange","sanitizedValue","sanitizeCurrencyInput","processCurrencyChange","handleStepChange","stepValue","currentNumeric","nextValueString","normalizedNext","formatted","showSpin","containerDivClass","inputMode","processedValue","absoluteValue","integerPartRaw","fractionalPartRaw","symbolValue","fractionalPart","hasNegative","firstDecimalIndex","DYN_TEXT_AREA_DEFAULT_PROPS","valueProp","resize","rows","cols","textareaRef","textareaClasses","DynLabel","elementProps","getActionButtonVariantClass","variantKey","createUniqueKeys","itemKey","occurrences","baseKey","resolveBaseKey","seen","toInternalValue","multi","toKeyArray","defaultValue","multiSelect","actions","listItems","rootRef","activeIndex","setActiveIndex","setExpanded","toggleItemExpansion","itemIds","_","uniqueItemKeys","keyToItemMap","createKeyToItemMap","getItemsByKeys","selection","controlledValue","getSelectedItems","isControlled","setSelected","updateFromExternal","updateSelection","internalValue","keysArray","valueForChange","toggle","add","selectAll","clearSelection","useSelectionManager","selectAllKeys","handle","moveActive","delta","idx","rootClasses","rootStyle","allChecked","selectAllButtonLabel","selectedState","desc","description","complex","displayKeys","isComplexItem","usesDefaultRenderer","optionLabelledBy","optionDescribedBy","usesTitleAsExpandTrigger","renderSeparateExpandControl","isExpanded","hasActions","shouldRenderControls","onMouseEnter","onMouseDown","action","DynPage","breadcrumbs","testId","pageClasses","styles$7_isLoading","styles$7_isError","hasOwn","appendClass","parseValue","newClass","module","default","window","classKey","DynSelect","options","multiple","searchable","virtualScroll","searchTerm","setSearchTerm","selectRef","sanitizedGeneratedId","listboxId","filteredOptions","option","selectedOptions","handleClickOutside","sizeClassName","capitalizedSize","selectClasses","showPlaceholder","optionValue","handleRemoveOption","handleOptionSelect","clamp","valueToIndex","steps","activeStep","controlledActiveStep","defaultActiveStep","linear","onStepChange","onStepClick","clickableSteps","showLabels","showDescription","contentClassName","renderStepContent","renderStepIcon","stepClassName","isControlledByActiveStep","isControlledByValue","internalActiveStep","setInternalActiveStep","newIndex","maxIndex","clampedActiveStep","nextStep","newStep","prevStep","goToStep","stepIndex","clampedIndex","isStepDisabled","getCurrentStep","getStepData","validateStep","completeStep","completed","state","errorStep","hasError","getItemClassName","getButtonClassName","getPanelClassName","getStepId","getPanelId","getStepDescId","getRootClassName","handleStepClick","tooltip","round","css","activeTab","defaultActiveTab","onTabClose","onTabAdd","closable","addable","activation","fitted","scrollable","lazy","loadingComponent","processedItems","processedKey","controlledVal","setCurrent","firstEnabled","getInitial","loaded","setLoaded","tabsRef","tablistRef","closePositions","setClosePositions","onSelect","focusPanel","setTimeout","panel","getElementById","currentIndex","focusTabByOffset","startIndex","cand","moveFocus","rootClass","listClass","useLayoutEffect","container","measure","containerRect","getBoundingClientRect","positions","el","ro","ResizeObserver","observe","disconnect","isH","first","rev","reverse","last","getAttribute","tabId","panelId","tabClass","badge","pos","transform","visibility","panelClass","isLoaded","showLoading","TOOLBAR_DEFAULTS","PICTOGRAPH_REGEX","SYMBOL_ONLY_REGEX","responsive","overflowMenu","overflowThreshold","itemClassName","onOverflowToggle","setVisibleItems","overflowItems","setOverflowItems","isOverflowOpen","setIsOverflowOpen","activeDropdown","setActiveDropdown","toolbarRef","overflowRef","filteredItems","updateLayout","thresholdValue","hasThresholdOverflow","applyThreshold","maxVisible","toolbarWidth","offsetWidth","itemElements","querySelectorAll","measureVisibleItems","reserveOverflowButton","overflowButtonWidth","itemWidth","measuredVisible","needsOverflowByWidth","shouldShowOverflow","visibleCount","handleResize","resizeObserver","openOverflow","closeOverflow","toggleOverflow","newState","refreshLayout","renderBadge","renderIconContent","isSymbolicIcon","renderToolbarItem","isInOverflow","component","itemClasses","iconContent","subItem","toolbarClasses","active","ThemeContext","AVAILABLE_THEMES","customDictionary","setDictionary","Provider","initialTheme","theme","setThemeState","setTheme","newTheme","documentElement","t","classList","remove","setAttribute","contextValue","availableThemes","baseClasses","conditionalClasses","cls","trimmed","words","firstWord","restWords","lastWord","useTheme"],"mappings":"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","x_google_ignoreList":[0,1,2,44]}